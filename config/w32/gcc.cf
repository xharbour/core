#
# $Id: gcc.cf 9279 2011-02-14 18:06:32Z druzus $
#

include $(TOP)$(ROOT)config/$(HB_ARCHITECTURE)/global.cf

ifeq ($(HB_CMP),)
ifeq ($(HB_COMPILER),gpp)
   HB_CMP = g++
else
   HB_CMP = $(HB_COMPILER)
endif
endif

OBJ_EXT = .o
EXE_EXT = .exe
LIB_PREF = lib
LIB_EXT = .a

CC = $(HB_CCACHE) $(HB_CMP)
CC_IN = -c
CC_OUT = -o
CPPFLAGS = -I. -I$(HB_INC_COMPILE) -Iinclude
ifeq ($(HB_LEX),SIMPLEX)
CFLAGS = -Wall -DSIMPLEX
else
CFLAGS = -Wall
endif

ifeq ($(HB_LIBCOMP_MT),)
#always add thread support if not compiling a lib and using vmmt
ifeq ($(findstring vmmt,$(LIBS)),vmmt)
CFLAGS+= -DHB_THREAD_SUPPORT
endif
else
#Add thread support to lib compilation only if compiling a _mt lib
ifeq ($(HB_LIBCOMP_MT),YES)
CFLAGS+= -DHB_THREAD_SUPPORT
HB_MT_FLAGS = -DHB_THREAD_SUPPORT
endif
endif

LD = $(HB_CCACHE) $(HB_CMP)
LD_OUT = -o

# Add all libraries specified in CONTRIBS and LIBS.
ifeq ($(HB_LIB_COMPILE),)
LINKPATHS += $(foreach lib, $(CONTRIBS), -L$(TOP)$(ROOT)contrib/$(lib)/$(ARCH_DIR))
LINKPATHS += $(foreach lib, $(LIBS), -L$(TOP)$(ROOT)source/$(lib)/$(ARCH_DIR))

#Adding MT libs on need
ifeq ($(findstring vmmt,$(LIBS)),vmmt)
LINKPATHS += $(foreach lib, $(LIBS), -L$(TOP)$(ROOT)source/$(lib)/$(ARCH_DIR)_mt/)
endif

else
LINKPATHS += -L$(HB_LIB_COMPILE)
endif

# The -( option could be appropriate to link against libraries with
# cyclic dependencies, but I think it is not really necessary if the
# libraries are kept in proper order.
# LINKLIBS += -Wl,-(
LINKLIBS += $(foreach lib, $(CONTRIBS), -l$(subst lib,,$(lib)))
LINKLIBS += $(foreach lib, $(LIBS), -l$(lib))

# If LIBS specifies the rdd library, add all DB drivers.
ifeq ($(findstring rddmt,$(LIBS)),rddmt)
LINKPATHS += $(foreach drv, $(HB_DB_DRIVERS), -L$(TOP)$(ROOT)source/rdd/$(drv)/$(ARCH_DIR)_mt)
LINKLIBS += $(foreach drv, $(HB_DB_DRIVERS), -l$(drv)mt)
else
ifeq ($(findstring rdd,$(LIBS)),rdd)
LINKPATHS += $(foreach drv, $(HB_DB_DRIVERS), -L$(TOP)$(ROOT)source/rdd/$(drv)/$(ARCH_DIR))
LINKLIBS += $(foreach drv, $(HB_DB_DRIVERS), -l$(drv))
endif
endif

# Add the specified GT driver library and other RTLs

LINKPATHS += -L$(TOP)$(ROOT)source/rtl/pcre/$(ARCH_DIR)
LINKLIBS += -lpcrepos

ifeq ($(findstring rtl,$(LIBS)),rtl)
LINKPATHS += -L$(TOP)$(ROOT)source/rtl/$(HB_GT_LIB)/$(ARCH_DIR)
LINKLIBS += -l$(HB_GT_LIB)
ifeq ($(HB_MULTI_GT),yes)
LINKPATHS += -L$(TOP)$(ROOT)source/rtl/gtnul/$(ARCH_DIR)
LINKLIBS += -lgtnul
endif
endif

# HB_SCREEN_LIB: empty, or one of ncurses, slang
# HB_SCREEN_LIB=ncurses
# HB_SCREEN_LIB=slang

ifneq ($(HB_SCREEN_LIB),)
LINKLIBS += -l$(HB_SCREEN_LIB)
endif

# Add the optional user path(s)
ifneq ($(LNK_USR_PATH),)
LINKPATHS += $(foreach path, $(LNK_USR_PATH), -L$(path))
endif

# Add the optional user libarary (or libraries)
ifneq ($(LNK_USR_LIB),)
LINKLIBS += $(foreach lib, $(LNK_USR_LIB), -l$(lib))
endif

# The -) option could be appropriate to link against libraries with
# cyclic dependencies, but I think it is not really necessary if the
# libraries are kept in proper order.
# LINKLIBS += -Wl,-)

SYSLIBS = -luser32 -lwinspool -lgdi32 -lcomctl32 -lcomdlg32 \
          -lole32 -loleaut32 -luuid -lmpr -lwsock32 -lws2_32 -lmapi32

LINKLIBS += $(SYSLIBS)

LDFLAGS = $(LINKPATHS)

AR = ar
ARFLAGS = $(A_USR)
AR_RULE = $(AR) $(ARFLAGS) r $@ $(^F) 

include $(TOP)$(ROOT)config/rules.cf
