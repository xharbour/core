/*
 * $Id: ChangeLog.023 9283 2011-02-14 21:32:39Z andijahja $
 */

/* Use this format for the entry headers:
   YYYY-MM-DD HH:MM UTC[-|+]hhmm Your Full Name <your_email@address>
   For example:
   2002-12-01 23:12 UTC+0100 Foo Bar <foo.bar@foobar.org>
*/
2005-08-15 14:30 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/win32prn.prg
    ! change default charset to DEFAULT_CHARSET from OEM_CHARSET
      in CreateFont()
    + METHOD CreateFontAPI()
    + METHOD SetColorAPI()
    + METHOD TextOutAPI()
       For direct access in subclasses to WinAPI

2005-08-15 09:00 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/winos.prg
    + HB_FUNC( OS_ISWINVISTA ), Detect if OS is Windows Vista

2005-08-13 12:00 UTC-300 Walter Negro <anegro-AT-overnet.com.ar>
  * include/hbapi.h
    + hb_clsClassH() declaration.
  * source/vm/classes.c
    ! Fix bug in __ClsDelMsg() function.
      Reported by Marek Paliwoda.
    ! Fix problem in __ClsAddMsg when first parameter is Object.
      hb_parni() can return incorrect values if parameter of function is
      Array/Object and is not passed the second optional parameter
      to hb_parni() to retrieve a position of array.
      Reported by Marek Paliwoda.
  + hb_clsClassH() return the uiClass for a PHB_ITEM passed.
  * Reduction of redundant code using hb_clsClassH().

2005-08-12 04:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/bin/hb-mkslib.sh

  * xharbour/source/rdd/dbcmd.c
    check the result from SELF_CLOSE() in dbCloseArea() if it returns
    FAILURE then do not continue operation - it's necessary for SIX3
    triggers implementation - user trigger code should be very careful
    here and do not block closing WA on VM exit
  ! fixed bug in APPEND FROM when the source database has exactly
    the same fields but with differ size and RDD use optimized
    (whole record) copping

  * xharbour/source/rdd/workarea.c
    ! set all flags in SET_LOCATE() method

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * first call SUPPER_CLOSE() and check the results for trigger
      implementation

  * xharbour/source/rtl/gtcrs/gtcrs.c
  * xharbour/source/rtl/gtcrs/gtcrs.h
    * added K_MWFORWARD and K_MWBACKWARD

  * xharbour/source/rtl/gtxwc/gtxwc.c
    ! fixed fast mouse wheel movement - if you think that it will be useful
      then we can add also K_MW[DBL|FAST]BACKWARD and K_MW[DBL|FAST]FORWARD
      for fast mouse wheel moving - it will be enough to add this key codes
      to mouseDblPressKeys replacing K_MWFORWARD and K_MWBACKWARD

2005-08-10 02:30 UTC-3 Marcelo Lombardo <marcelo@xharbour.com.br>
  * source/vm/runner.c
    ! Fixed GPF trap caused by dynamic linker when an
      .hrb module calls a function from another previously
      loaded .hrb module

2005-08-08 14:45 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * tests/testw32p.prg
    + added option to print BitMap file

2005-08-08 02:45 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    + added missing checking for user value in ordKeyAdd()/ordKeyDel()
      for template tags
    ! fixed typo hb_ntxTagGoTop()

  * xharbour/source/rdd/dbf1.c
    * fixed function name in HB_TRACE
    * removed redundant if() statement

  * xharbour/source/vm/classes.c
    * small modification which gives about 10% speed improvement
      of hb_clsFindMethod() - division is one of the most consumed
      operation - if it's possible replace it by bit shifting

2005-08-07 0:37 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * xharbour/source/vm/classes.c
    ! Fixed GPF trap in hb_objGetRealCls() reported by Przemek.

2005-08-07 04:30 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/regex.c
    * Corrected usage of HB_EXPORT

  * utils/xbscript/xbscript.prg
    * Renamed AppMain() to PP_Main() because we do not want it to be used as
      startup procedure when used as a Librarry. The previous question about
      using STATIC Main() was simply an attempt to avoid possible conflict with
      a Main PROCEDURE of an application linked with the lib.

2005-08-07 12:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/hbserv.c
    * do not use == for logical values - use them directly

  * xharbour/source/rtl/readline.c
    * keep [x]Harbour naming convention for typed variable
    ! fixed compilation with HB_TRACE()

  * xharbour/source/vm/classes.c
    ! fixed compilation with HB_TRACE()

2005-08-07 11:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rtl/binnum.c
    ! fixed last casting modifications

2005-08-06 23:30 UTC-3 Marcelo Lombardo <marcelo@xharbour.com.br>
  * rdd\dbf1.c
  * rdd\dbffpt\dbffpt1.c
  * rdd\dbfntx\dbfntx1.c
  * rtl\binnum.c
  * rtl\hbserv.c
  * rtl\readline.c
  * rtl\txtline.c
    ! Fixed MSVC warnings (some of them would be real bugs)

2005-08-06 21:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/dbinfo.ch
    + added DBI_RM_HANDLE

  * xharbour/include/hbapirdd.h
    + formatting

  * xharbour/include/hbrddntx.h
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    + added SELF_COUNTSCOPE()

  * xharbour/source/rdd/workarea.c
    * do not set lpvCargo in SETFILTER() - it should be done by
      RDD if it need it

  * xharbour/source/vm/hvm.c
    + added RMDBFNTX initialization

2005-08-05 01:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbapirdd.h
  * xharbour/source/rdd/dbcmd.c
  * xharbour/source/rdd/workarea.c
    - removed hb_rddFieldSymIndex(), hb_rddFieldNameIndex()
    * changed hb_rddFieldExpIndex() - removed last parameter
    * changed hb_rddFieldIndex() to strip leading and trailing
      spaces and upper the give field name
    + added support for embedded spaces in field name
    * initialize lpvCargo in DBSETFILTER

  * xharbour/source/rtl/str.c
    * fixed possible GPF on some machines - strcpy() should not
      operate on overlapped buffers

  * xharbour/source/vm/dynsym.c
    * minor speed improvement

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * use hb_rddFieldExpIndex() without the last parameter

2005-08-04 10:00 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * utils/hbmake/hbmake.prg
    * version 1.150
    ! fixed error in Borland C compiler introduced in 1.149 version.
    ! function showhelp() was reviewed to pause before end of help.
    + added hbmake_id() and hbmake_copyright() functions to show identification
      at compile time.
    + added /credits parameter.

2005-08-04 13:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/compiler/harbour.c
    ! remove bad code I haven't noticed before - it should fix GPF
      reported by Lorenzo

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed possible buffer overflow

  * xharbour/source/rtl/gtxwc/gtxwc.c
    * clean GC when GTXWC is closed

2005-08-03 14:25 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/tget.prg
    ! Fixed to return same value when use "@R 999,999.99" or "999,999.99"
      picture.

2005-08-03 19:05 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/compiler/harbour.c
    ! fixed possible GPF in double close international out file
      Maybe it will also fix problem reported by Lorenzo

  * xharbour/source/rdd/dbcmd.c
    ! fixed alias stripping from field expression

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed possible GPF when SELF_ORDLISTADD() fails in production
      index aouto open procedure

2005-08-03 09:05 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/common/hbver.c
  * include/hbapi.h
    + add HB_EXPORT to hb_iswinnt()
  * source/rtl/winos.prg
    + HB_FUNC( OS_ISWIN2000_OR_LATER )

2005-08-2 14:00 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * source/tip/ftpcln.prg
    ! Fixed ::creplay (should be ::creply)
    ! Fixed bug on getReply Method() which was entering on an infinite loop
    ! Fixed minor typo on retr method()
  * utils/hbmake/hbmake.prg
    utils/hbmake/tmake.prg
    ! minor change on msvc/mingw support

2005-08-02 14:08 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
  * source/rtl/filesys.c
    ! on OS/2 needs to include share.h

2005-08-02 12:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/regex.h
  * xharbour/source/rtl/regex.c
    ! changed to respect strict alignment
    + added hb_getregex() and hb_freeregex() functions

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * changed to use hb_getregex()/hb_freeregex()

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * changed to use hb_getregex()/hb_freeregex()
    * disabled debug code
    ! fixed two typo in index update code

2005-08-02 00:10 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/rdd_ads/ads1.c
    + store RDD ID in static variable
    + allow ACE library to select default alias to not force xHarbour
      convention which can be incompatible with ADS
    * keep database open after CREATE() method - Clipper compatible
    + modified to keep compatibility with base RDD modifications
    + added basic RDDINFO() support - please add other actions
      TODO: RDDDROP() and RDDEXISTS() should use ADS API

  * xharbour/include/dbinfo.ch
    + added RDDI_* definitions for non workarea RDDINFO() method,
         RDDI_ISDBF         - Does this RDD support DBFs?
         RDDI_CANPUTREC     - Can this RDD Put Records?
         RDDI_DELIMITER     - The field delimiter (as a string)
         RDDI_SEPARATOR     - The record separator (as a string)

         RDDI_TABLEEXT      - Default data file's file extension
         RDDI_MEMOEXT       - Default memo file's file extension
         RDDI_ORDBAGEXT     - Default multi tag index's file extension
         RDDI_ORDEREXT      - default single tag index's file extension
         RDDI_ORDSTRUCTEXT  - default single tag index's file extension

         RDDI_LOCAL         - Local file access?
         RDDI_REMOTE        - Remote table access?
         RDDI_CONNECTION    - Get/Set default connection
         RDDI_TABLETYPE     - Type of table file
         RDDI_MEMOTYPE      - Type of MEMO file: DBT, SMT, FPT(FP,SIX3,FLEXIII)
         RDDI_LARGEFILE     - Is large file size (>=4GB) supported
         RDDI_LOCKSCHEME    - Locking scheme used by RDD
         RDDI_RECORDMAP     - Does RDD support record map functionality?
         RDDI_ENCRYPTION    - Does RDD support encryption
         RDDI_TRIGGERS      - Get/Set default trigger function
         RDDI_AUTOLOCK      - automatic locking on update

         RDDI_STRUCTORD     - Are structural indexes supported
         RDDI_STRICTREAD    - Flag for avoiding RDD hierarchy and using a bigger buffer when indexing
         RDDI_STRICTSTRUCT  - Flag for strict structural order checking
         RDDI_OPTIMIZE      - Flag for whether to use query optimization
         RDDI_FORCEOPT      - Flag for forcing linear optimization
         RDDI_AUTOOPEN      - Flag for automatically opening structural indexes
         RDDI_AUTOORDER     - When a structural index is opened, the order to be set
         RDDI_AUTOSHARE     - When a network is detected, open the index shared, otherwise open exclusively
         RDDI_MULTITAG      - Does RDD support multi tag in index file
         RDDI_SORTRECNO     - Is record number part of key in sorting
         RDDI_MULTIKEY      - Does custom orders support repeated keys?

         RDDI_MEMOBLOCKSIZE - Memo File's block size
         RDDI_MEMOGCTYPE    - type of garbage collector used by GC
         RDDI_MEMOREADLOCK  - use read lock in memo file access
         RDDI_MEMOREUSE     - reuse free space on write

      Please add other RDDI_* actions if necessary, f.e. transaction
      control or some specific operation for remote RDD like setting
      connection parameters

    + added some new DBOI_* and DBI_* definitions:
         DBOI_TEMPLATE           - order with free user keys
         DBOI_MULTIKEY           - custom order with multikeys
         DBOI_PARTIAL            - is index partially updated
         DBOI_SHARED             - is index open in shared mode
         DBOI_ISREADONLY         - is index open in readonly mode
         DBOI_WRITELOCK          - get/set index write lock
         DBOI_UPDATECOUNTER      - get/set update index counter
         DBI_MEMOTYPE            - Type of MEMO file: DBT, SMT, FPT
         DBI_SEPARATOR           - The record separator (as a string)

  * xharbour/include/hbapifs.h
    + added FXO_UNIQUE (Clipper compatible), FXO_SHARELOCK (emulate
      DOS SH_DENY* mode in POSIX OS) and FXO_COPYNAME (copy final szPath
      into pFilename in hb_fsExtOpen - to reduce overhead in xHarbour
      error system in comparison to Clipper static one)
    + added HB_USE_SHARELOCKS[_OFF]/HB_SHARELOCK_POS/HB_SHARELOCK_SIZE
      macros to control DOS SH_DENY* mode emulation in POSIX systems
    + added HB_DRIVE_LENGTH_MAX and HB_MAX_FILE_EXT macros
    + added hb_fsFreeSearchPath() function

  * xharbour/include/hbapirdd.h
    + added ulConnection member to DBOPENINFO structure
    * changed LONG lStartRecno, lRecno to PHB_ITEM itmStartRecID, itmRecID
      in DBORDERCONDINFO for full RecID support
    + added fScoped, fCompound, fUseFilter, fTemporary, fExclusive members
      to DBORDERCONDINFO structure
    + added lpvCargo to DBFILTERINFO structure
    * changed non WA methods' (RDDNODE methods) type definitions from
      DBENTRYP_I[0-2] to DBENTRYP_R*
    + added RDDNODE parameter to non WA methods
    + added RDDINFO() method
    + added hb_rddGetNode( USHORT uiNode ) function

  * xharbour/include/hbrddcdx.h
    + added RDDINFO() method

  * xharbour/include/hbrdddbf.h
    + added TRANSREC() method
    - removed DBF_EXLUSIVE_LOCKPOS/DBF_EXLUSIVE_LOCKSIZE - no longer
      necessary, replaced by global HB_SHARELOCK_POS/HB_SHARELOCK_SIZE
      used in hb_fsExtOpen()
    + added RDDINFO() method
    + modified to keep compatibility with base RDD modifications

  * xharbour/include/hbrdddbt.h
  * xharbour/include/hbrddfpt.h
  * xharbour/include/hbrdddel.h
  * xharbour/include/hbrddsdf.h
    + added RDDINFO() method

  * xharbour/include/hbrddwrk.h
    + added default OPEN() method - it should be called by RDD as supper
      method from OPEN() on success - Clipper compatible
    + added default CREATE() method - as above

  * xharbour/source/common/hbarch.c
    ! casting for some compilers which does not support
      UINT64 -> double conversion

  * xharbour/source/common/hbfsapi.c
    + added hb_fsFreeSearchPath()
    * changed hb_fsFNameSplit() to respect HB_DRIVE_LENGTH_MAX and
      fixed some possible buffer overflow

  * xharbour/source/pp/pptable.c
    * added exteneded INDEX ON parameters (TEMPORARY/EXCLUSIVE/FILTERON)

  * xharbour/source/compiler/harbour.sly
    - removed unused s_bSetGet

  * xharbour/source/rdd/dbcmd.c
    + added non WA method hb_waRddUnsupported()
    + added RDDINFO() function
    + added hb_rddGetNode( USHORT uiNode ) function
    + send RDD ID as forth parameter to *_GETFUNCTABLE()
    + added support for empty aliases (Clipper compatible)
    + added hb_rddFieldSymIndex()
    + added hb_rddFieldNameIndex() - like hb_rddFieldIndex() but it
      uses hb_dynsymFindName() to hash filed name
    + added hb_rddFieldExpIndex() - check if expression is a single
      field name in given WA (strips aliases and [_]FILED->) and return
      field number or 0
    + added hb_rddOpenTable() and hb_rddCreateTable()
    + added hb_fldStructure(), hb_tblStructure()
    + added hb_rddTransRecords()
    * changed __DBAPP() and __DBCOPY() to use hb_rddTransRecords()
      old code removed, current one should be much faster and can
      be optimized by RDD to execute on server side
    * modified 4-th anf 5-th parameters in DBCREATE to be Clipper compatible
    + added empty alias support in DBCREATE()/DBUSEAREA()
    + do not make any modifications in given file name and alias in
      DBCREATE() and DBUSEAREA() - it should be done by RDD inf necessary
    - removed DBUSEAREAD() - it's no longer necessary
    % optimized AFIELDS(), DBSTRUCT(),
    ! fixed return value when NETERR() called with logical parameter
    + added support for new parameters in ORDCONDSET() the full syntax is:
      ordCondSet( cFor, bFor, lAll, bWhile, bEval, ;
                  nStep, xStart, nNext, xRecord, lRest,
                  lDescend, lCompound, lAdditive, lCurrent, lCustom,
                  lNoOptimize, cWhile, lTemporary, lUseFilter, lExclusive )
      or
         INDEX ON ... [MEMORY|TEMPORARY] [EXCLUSIVE] [FILTERON]
    + added ORDBAGCLEAR() - close selected indexes by calling ORDLSTDELETE()
      RDD method
    * ORDDESTROY() returns TRUE (when SUCCESS) or FALSE now
    * updated DBDROP() and DBEXISTS()

  * xharbour/source/rdd/dbf1.c
    * use hb_fsExtOpen() only to open/create files (Clipper compatible)
    * call SUPER_OPEN()/SUPER_CREATE() in OPEN()/CREATE() methods
    * make all necessary modifications to given file names (code removed
      from dbUseArea()/dbCreate()) if nexessary in OPEN()/CREATE() methods
    + added RDDINFO() method
    + added support for switchable table extension
    - removed hb_dbfTransRec() - new default WA implementation for this
      method is enough
    * reimplemented DBEXISTS() and DBDROP() - now to remove table with its
      memofile(s) and production indexe(s) is enough to call:
         dbDrop( cTable )
      to remove index only:
         dbDrop( cTable, cIndex )
      (DBF RDD ignores in such case cTable paramter but other RDDs may
      need it)
      To check if table exists use:
         dbExists( cTable )
      and to check if index exists use:
         dbExists( cTable, cIndex )
      (as above DBF RDD ignores cTable)

  * xharbour/source/rdd/delim1.c
  * xharbour/source/rdd/sdf1.c
    + added RDDINFO() method

  * xharbour/source/rdd/workarea.c
    + added default OPEN() method - it should be called by RDD as supper
      method from OPEN() on success - Clipper compatible
    + added default CREATE() method - as above
    + added TRANS() method
    + added TRANSREC() method
    + added RDDINFO() method with default actions for already defined
      RDDI_* values

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    + added RDDINFO() method
    * use hb_fsExtOpen() only to open/create files
    + modified to keep compatibility with base RDD modifications

  * xharbour/include/hbrddntx.h
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    - removed hack in ORDCONDINFO() method - no longer necessary due to
      new members in DBORDERCONDINFO structure
    + added RDDINFO() method
    + added full support for structural and production indexes
      (AUTOOPEN/AUTOORDER)
    + added write buffer in indexing and tuned memory buffer size - it
      should speedup a little bit indexing
    + added EXCLUSIVE and temporary indexes
         if you want to create custom index which will be deleted when
         closed (by dbCloseArea()/ordDestroy()/ordBagClear()) then just
         simply make:
            index on <exp> tag <tagName> memory
         and DBFNTX create index in exclusive mode in local temporary
         file or in memory
         See also new ordCondSet() parameters
         Indexes open in exclusive mode will work much faster then in
         shared one because index locking and concurrent file access
         checking is eliminated
    + added support for SIX3 like index thermometer
    + added support for template indexes
    + adde multikey custom indexes (the same key and record can be
      stored more then once)
    * use hb_fsExtOpen() only to open/create files
    + modified to keep compatibility with base RDD modifications
    + added switchable index file extension (.ntx by default)
         rddInfo( RDDI_ORDBAGEXT, [<cNewExt>] ) -> <cOldExt>
    + added switchable record number sorting in index files (off by default)
         rddInfo( RDDI_SORTRECNO, <lSort> ) -> <lOldVal>
      This option bound index key with record number like in CDX format.
      It means that all keys are always unique what resolves the performance
      problem with inefficient index update or positioning after GOTO in
      standard NTX
    + added switchable large file support (up to 4 TB) (off by default)
         rddInfo( RDDI_LARGEFILE, <lLarge> ) -> <lOldVal>
      It increase maximum file size from 4GB to 4TB but such indexes cannot
      be read by standard Clipper RDDs
    + added switchable multitag support (on by default)
         rddInfo( RDDI_MULTITAG, <lMultiTag> ) -> <lOldVal>
    + added switchable production index support (off by default)
         rddInfo( RDDI_STRUCTORD, <lStruct> ) -> <lOldVal>
      Now DBFNTX can be tuned by user, f.e. by the following code
      at application startup change DBFNTX behavior to exactly the same
      as DBFCDX with all DBFCDX features and some other not implemented
      yet in DBFCDX. User should notice only one difference. The index
      file will be longer and of course not binary compatible (they
      still uses NTX format)
         rddSetDefault( "DBFNTX" )
         rddInfo( RDDI_ORDBAGEXT, ".cdx" )
         rddInfo( RDDI_MULTITAG, .t. )
         rddInfo( RDDI_STRUCTORD, .t. )
         rddInfo( RDDI_SORTRECNO, .t. )
      I would like to ask other developers and xharbour users using DBFCDX
      in their programs to make some test with this code. If you notice
      any difference to DBFCDX (other then file size and RDD name ;-))
      please inform me.
      Now DBFNTX is finished for me (maybe I'll add some minor modification
      and of course any bug fixing). DBFCDX should be updated also (many
      of new features is missing now) but I haven't decided when I'll do
      that - maybe I'll implement DBFNSX first.

  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
    * use hb_fsExtOpen() only to open/create files
    + added switchable memo file extension

  * xharbour/source/rdd/hsx/hsx.c
    * use hb_fsExtOpen() only to open/create files

  * xharbour/source/rtl/filesys.c
    * common for all compilers create/open flag translation
    + implemented hb_fsExtOpen() - it should be full Clipper
      compatible with some minor extensions
      Local RDDs should use only this function to open/create files

  * xharbour/source/rtl/fstemp.c
    * formatting

  * xharbour/source/rtl/set.c
    * use hb_fsFreeSearchPath()

  * xharbour/source/vm/errorapi.c
    ! fix GPF when user code change type of some error object items

  * xharbour/utils/xbscript/xbscript.prg
    * renamed Main() function to _AppMain() - this undocumented Clipper
      feature supported by xHarbour should resolve the problem with name
      conflict when Main() is used by evaluated script

2005-08-01 23:15 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * contrib/gtwvw/gtwvw.c
  * source/rtl/gtwvt/gtwvt.c
    ! Fix resource leak in gtResetWindowSize(). A severe bug for Win98.

2005-08-01 15:50 UTC+0200 Jacek Potempa (Jacek.Potempa@otc.pl)
  * xharbour/source/vm/codebloc.c
  * xharbour/include/hbapi.h
       * Added HB_EXPORT to hb_codeblockMacroNew() definition and declaration.
       * Change required to access this function from outside of harbour.dll

2005-07-30 22:25 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * utilse/hbmake/hbmake.prg
    * version 1.148: minor fix in ppo file management introduced by me
      in version 1.146.

2005-07-30 10:40 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/rtl/tget.prg
    * Fixed return value when use "@R 999,999.99" picture.

2005-07-28 08:35 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/common/expropt1.c
    * Corrected string descriptions for error reporting.
  * source/compiler/harbour.sly
    % Rewrote (and optimized) _Get_ to use LValue.
  * source/pp/pptable.c
    - Removed #translate of _GET_ added on June-30-2005 (now properly handled by parser).

  * tests/testget.prg
  * tests/tstgetar.prg
    * Minor refinments.

2005-07-28 01:54 UTC-0300 Marcos Gambeta <marcosgambeta@yahoo.com.br>
  * utils/hbmake/hbmake.prg
  * utils/hbmake/tmake.prg
    * version 1.147: added the library xHGtk (http://sourceforge.net/projects/xhgtk/).
      Contribution from Itamar M. Lins Jr.

2005-07-25 07:55 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbexprb.c
    * Corrected right hand optimization of negtive values into +=

2005-07-25 02:10 UTC-300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/vm/classes.c
    ! Clear old hack in my code for Classname and classh.
      Now work correctly redefinition of Classname method.

2005-07-22 14:20 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * source/rtl/gtwvt/gtwvt.c
    contrib/gtwvw/gtwvt.c
    contrib/wvtwin/wvtcore.c
    contrib/wvtwin/wvtutils.c
    ! all Windows structures like RECT/POINT/LOGFONT/LOGBRUSH now are initialized to an empty structure.

2005-07-21 12:00 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/vm/memvars.c
    * in HB_FUNC( __MVSAVE ) add support for SET DEFAULT
      Now Clipper compatible ( SAVE TO ... )
    * casting corrected

2005-07-21 02:16 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * include/Makefile
    ! Added hbver.ch to the list of files to install.

2005-07-20 12:00 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/teamwork.it>
  * xharbour/source/rtl/tbrowse.prg
    ! EvalSkipBlock moved out from HB_COMPAT_C53

2005-07-20 00:20 UTC-300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/vm/classes.c
    ! Fix typo error.
      Reported by Serge Jakimoff

2005-07-19 12:00 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/teamwork.it>
  * xharbour/source/rtl/tbrowse.prg
    * changed EvalSkipBlock from static function to protected method and
    * changed all EvalSkipBlock( ::skipBlock, n ) and Eval( ::skipBlock, n )
    * to ::EvalSkipBlock( n ).
    * This is the first step to try to optimize tbrowse record reads.

2005-07-18 10:37 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/compiler/harbour.sly
    ! Fixed gpf trap related to LOOP control variable optimized in hb_compExprUseAssign()

2005-07-17 11:28 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/hvm.c
    * Corrected silly typo in hb_vmPlus()
  * source/vm/itemapi.c
    * Corrected c/p typo in hb_itemGetNDDec()

2005-07-17 14:30 UTC-300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/vm/classes.c
    ! Fix initialization of CLASSDATA.
      Reported by Pablo in news:xHarbour.Unestable.CVS
    ! Fix some warnings.
      warning: unused variable `bClassCtor' and
      incorrect warning: 'pSprCls'might be used uninitialized in this function
      Reported by Lorenzo Fiorini
  * tests/friendl2.prg
    ! Fix return values in Constructor methods.

2005-07-17 09:40 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/hvm.c
  * source/vm/classes.c
    * Fixed warning: unused variable `_pStack_'
  * source/vm/memvars.c
    * Synched hb_vmOperatorCall()

2005-07-16 19:00 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbpcode.h
  * source/compiler/genc.c
  * source/compiler/hbfix.c
  * source/compiler/hbpcode.c
  * source/vm/hvm.c
    + Added support for new generic HB_P_LOCALNEARADD

  * include/hbexprc.c
    % Optimize hb_compExprUseOperEq() to use new HB_P_LOCALNEARADD for HB_P_PLUS if not optimized using HB_P_LOCALNEARADDINT
    % Optimize hb_compExprPushOperEq() to use new HB_P_LOCALNEARADD for HB_P_PLUS if not optimized using HB_P_LOCALNEARADDINT

2005-07-16 17:08 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbapi.h
  * xharbour/include/hbapiitm.h
    * Cleanup related to usage of HB_EXPORT and addition of folowing itemapi.c new functions
  * source/vm/itemapi.c
   + HB_EXPORT double hb_itemGetNDDec( PHB_ITEM pItem, int * piDec )
   + HB_EXPORT PHB_ITEM hb_itemPutNDDec( PHB_ITEM pItem, double dNumber, int iDec )
   + HB_EXPORT PHB_ITEM hb_itemPutHBLong( PHB_ITEM pItem, HB_LONG lNumber )
   + HB_EXPORT PHB_ITEM hb_itemPutNumType( PHB_ITEM pItem, double dNumber, int iDec, int iType1, int iType2 )

  * source/vm/hvm.c
    * Modified hb_vmOperatorCall() to accept optional pointer to result, instead of pushing result to stack.
    * Modified hb_vmPlus() to use explicit arguments and result pointer, rather than the stack.
      /* This is in preparation of adding new generic HB_P_LOCALNEARADD */

  * include/hbclass.ch
    * Made ARG <xArg> optional.
  * tests/overload.prg
    + Added tests for ++ and --

2005-07-16 12:05 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/hvm.c
    * Minor optimization in hb_vmOperatorCall()
    * Minor correction in hb_vmOperatorCallUnary()
    - Removed few outdated comments.

2005-07-16 10:50 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbexprb.c
    * Re-instated recently commented out RIGHT side optimization for NUMRICs only.

2005-07-15 23:06 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbexprb.c
    * Commented out recent RIGHT side optimization, because order is SIGNIFICANT for NON numerics!

2005-07-15 20:16 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbexprb.c
    * Fixed minor (but very important) typo in recent commit.
  * source/compiler/genc.c
    * Improved verbosity of HB_P_LOCALNEARADDINT

2005-07-15 20:03 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbexprop.h
  * source/common/expropt2.c
    + Added: HB_EXPR_PTR hb_compExprListStripSingle( HB_EXPR_PTR pSelf, HB_MACRO_DECL )
  * include/hbexprb.c
    + Added generic optimization:
         x := x + y -> x += y
         x := y + x -> x += y
         x := x - y -> x -= y
         x := y - x -> x += -y
     /*
        Due to subsequent optimization of LOCAL += INT and LOCAL -= INT
        this results in significant optimization of code like:

        LOCAL n1 := 1

        n1 := n1 + 2

        n1 := 2 + n1

        n1 := ( n1 + 3 )

        n1 := ( ( 4 - (n1) ) )

        This also paves the way for a generic HB_P_LOCALNEARADD.
      */

2005-07-15 01:50 UTC-300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/rtl/tclass.prg
    + AddDelegate function to support natives Delegate messages.
    * Code optimized

2005-07-13 16:00 UTC-0300 Mauricio Abre <mgabre@gmail.com>
  * source/rtl/gtalleg/ssf.h
  * source/rtl/gtalleg/gtalleg.c
    ! Don't try to set linux FB console mode if allegro doesn't have support

2005-07-13 23:15 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * contrib/wvtgui/wvtutils.c
    ! WVT_SETICON():: Improper use of hb_parcx(), should be hb_parc().

2005-07-12 13:00 UTC-0400 Gerald Drouillard <gerald@drouillard.ca>
  * source/rtl/tbrowse.prg
    ! replace calls to devpos() with setpos() to maintain clipper
        compatability.

2005-07-12 01:20 UTC-300 Walter Negro <anegro-AT-overnet.com.ar>
  * tests/friendly.prg
  * tests/friendl2.prg
    + Test of friendly class
  * tests/delegate.prg
    + Test of delegate messages

2005-07-11 01:40 UTC-300 Walter Negro <anegro-AT-overnet.com.ar>
  * source/vm/classes.c
    ! Some GPF traps
      Reported by Ron Pinkas

2005-07-11 16:15 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/teditor.prg
    * handle K_CTRL_N as per Clipper to insert a line in
      memoEdit()

2005-07-10 02:00 UTC-300 Walter Negro <anegro-AT-overnet.com.ar>
  * include/classes.h
  * include/hbapi.h
  * include/hbclass.ch
  * include hboo.ch
  * source/vm/arrays.c
  * source/vm/classes.c
  * source/vm/hvm.c
  * source/vm/memvars.c
    + New object engine

2005-07-08 19:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/dbdelim.prg
   ! close file after append from.

  * xharbour/utils/xbscript/Makefile
   + added CT lib

2005-07-10 00:40 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>

  * source/rtl/errorsys.prg
    ! minor fix on logerror function

2005-07-07 10:40 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * makefile.bc
    + Added CT_LIB to xbScript linking

2005-07-07 10:32 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * utils/xbscript/xbscript.prg
    * Added EXTERN SIN,COS (whole CT should be added to hbextern.ch)

2005-07-07 11:45 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/teamwork.it>
  * xharbour/source/rtl/tbrowse.prg
    * ::ColorRect management fixed to be more C53b compatible
    * ::DispCellPos removed it was buggy and useless
    * ::RefreshCurrent now reset ::ColorRect as C53b does
    * ::Configure code flow wrongly checked oCol:footing
    * thanks to Maurilio Longo for testing the modifications

2005-07-07 00:26 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * utils/xbscript/xbs_harb.ch
    * Minor revision

2005-07-07 13:20 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/txtline.c
    * HB_FUNC( MEMOLINE ) added optional 7th parameter which is
       the start position in the string to search from. If
       passed by reference the next starting position is stored
       in the variable. This change allows _much_ faster memo
       field extraction than the tradition mlcount()/for/next
       loop - particularly with larget memo's.

        MEMOLINE( <cString>,[<nLineLen>],[<nLine>],[<nTabSize>],;
            [<lWrap>],[<bLongLines>],[<@nStartOffset>]) --> cLine

        Do this;
        nLen:= LEN( cString )
        nOffSet:= 1
        DO WHILE nOffSet <= nLen
          c:= memoline( cString, , 1 ,,,, @nOffset )
          ... Do something
        ENDDO

        Instead of;
        n:= MLCOUNT( cString )
        FOR x:= 1 TO n
          c:= memoline( cString, , x )
          ... Do something
        NEXT x

2005-07-07 09:30 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/teditor.prg
    * ::GetText( lSoftCR ) method accepts parameter so Soft CR
        can be inserted in returned text
  * source/rtl/memoedit.prg
    * make the return value of memoedit() function Clipper
      compatible by inserting Soft CR characters.


2005-07-05 15:40 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * utils/hbmake/hbmake.prg
    * version 1.146. Changed to clean the *.map and *.tds map files after
      compiling, if you use Borland C/C++. Changed *.out log filename to
      *.log for better knowledge. If you disable "generate pre-processed
      output file /p" option, the hbmake will erase all *.ppo files after
      compiling.

2005-07-05 12:30 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * source/rtl/gtwin/gtwin.c
    ! Removed hb_idleState() hack from gt_ReadKey and added a FIXME
      comment about 100% CPU usage when Alt key is down.

2005-07-04 16:17 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * include/set.ch
    ! Fixed HB_SET_COUNT to be 20 instead of 15.

2005-07-02 18:30 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * utils/hbmake/hbmutils.prg
    ! fixed GetHarbourDir() function that was not working in Linux.
      Thanks to Itamar M. Lins by help.

2005-07-02 12:06 UTC+0200 Maurilio Longo <maurilio.longo@libero.it>
  * source/rtl/tbrowse.prg
    ! removed o_Blank item inside ::aColsInfo, it was needed only in one
      place inside code and was not correclty updated in many places where
      it should have been.

2005-06-30 20:33 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/itemapi.c
    * Minor corrections in error handling of hb_itemUnRefOnce()

2005-06-30 16:50 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/common/expropt2.c
    ! Fixed hb_compExprListStrip() to be right recursive.

  * source/pp/pptable.c
    + Added: #xtranslate _GET_( ( <x> ) => _GET_( <x>
      /*
         Parenthesis should have no significance in any valid LValue (if I'm not mistaken?)
         so this corrects parse errors on @ x, y, GET ( exp )
      */

2005-06-30 23:10 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * contrib/gtwvw/gtwvw.c
    ! Fix calculation of iNextPos in hb_wvw_gtAddCharToInputQueue()
      and hb_wvw_gtGetCharFromInputQueue(). Resolves problem
      reported of lost input characters.
      Many Thanks to Peter Rees.

2005-06-30 09:40 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/gtwvt/gtwvt/c
    * Fix calculation of iNextPos in hb_wvt_gtAddCharToInputQueue()
      and hb_wvt_gtGetCharFromInputQueue(). Resolves problem
      reported of lost input characters.

2005-06-29 10:11 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * source/rtl/gtwin/gtwin.c
    ! Added hb_idleState() call to prevent 100% CPU usage while Alt key is
      down. Fix provided by Valery Belorustcev.

2005-06-23 22:50 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/teamwork.it>
  * xharbour/source/tip/ftpcln.prg
    ! fixed GetReply() method

2005-06-22 13:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/config/linux/gcc.cf
    * spell correction in comment

  * xharbour/contrib/rdd_ads/ads1.c
    ! fixed HB_TRACE() debug message

  * xharbour/contrib/rdd_ads/adsfunc.c
    ! replaced NULL in error message by 0 for some pedantic C++
      compilers

  * xharbour/include/dbinfo.ch
    + added new DBOI_* switches:
         DBOI_BAGCOUNT       - number of open order bags
         DBOI_BAGNUMBER      - bag position in bag list
         DBOI_ISMULTITAG     - does RDD support multi tag in index file
         DBOI_ISSORTRECNO    - is record number part of key in sorting
         DBOI_LARGEFILE      - is large file size (>=4GB) supported
         DBOI_FREEZE         - freeze order updating
         DBOI_WARM           - restore order updating
         DBOI_CHGONLY        - update only existing keys
         DBOI_SHARED         - is index open in shared mode
         DBOI_ISREADONLY     - is index open in readonly mode
         DBOI_WRITELOCK      - get/set index write lock
         DBOI_READLOCK       - get/set index read lock
         DBOI_UPDATECOUNTER  - get/set update index counter

  * xharbour/include/hbapi.h
    + added hb_strndup() and hb_strnlen() functions (they works just
      like GCC ones and greatly simplify operation on possible
      unterminated strings
    + added hb_put_ieee754() and hb_get_ieee754() functions. They
      store/retrieve IEEE754 little endian double values on any machine
      type even if they have different native double representations.
      These functions can be used on such platforms to keep strict binary
      compatibility (f.e. when databases/indexes are shared between
      different systems or user wants to use common .hrb files.
    + added hb_put_ord_ieee754() and hb_get_ord_ieee754() - they store/
      retrieve modified IEEE754 double values used by some index formats
      like CDX and NSX - they are also platform independent and will work
      even if natively different double format is used.
    + added hb_get_rev_double()/hb_get_std_double() for machines with
      strict alignment when C compilers does not support C extenssion
      used in GCC macros.
    + added hb_get_le_int64(), hb_get_le_uint64(), hb_put_le_uint64()
      for compilation with HB_LONG_LONG_OFF - these functions store/
      retrieve 64bit integer values converting them from/to double.

  * xharbour/include/hbdefs.h
    + added missing macros for non GCC compilers for double conversions
    + added HB_FORCE_IEEE754_DOUBLE macro which force to store double
      value not in platform native form but always as IEEE754 in PCODE
      and databases/indexes.
      Now we cover all possible platforms also for non GCC compilers.

  * xharbour/include/hbapirdd.h
    + prototype for HB_EVALSCOPE_FUNC moved from hbrddcdx.h to make it
      common also for other RDDs

  * xharbour/include/hbdbferr.h
    + added some missing error codes

  * xharbour/include/hbrddcdx.h
    - prototype for HB_EVALSCOPE_FUNC moved from hbapirdd.h to make it
      common also for other RDDs

  * xharbour/include/hbrddntx.h
  * xharbour/source/rdd/dbfntx/dbfntx1.c
     ! fixed typo in indexing tables with active relations
     + added optional support for multitag indexes
     + added support for optional binding record number with index
       key value what eliminates very uneficient behavior of in standard
       NTX files when there is a lot of duplicated keys
     + added optional support for large files up to 4 TB
     Enabling any of the above features cause that indexes cannot be
     read by Clipper which does not support them.
     Multi tag format is mostly binary compatible with CLIP CTX one but
     I added some extensions which should be ported to CLIP for save
     concurrent access and index modifications - maybe I'll do that in
     some spare time.
     Indexes with bound record number have the same foramt and can be
     read by Clipper but should not be modified - to avoid any porblems
     with such unexpected modifications I set one bit in NTX header what
     cause that Clipper cannot open them.
     + change internal procedures to eliminate any linear scanning and
       always use optimal algorithms if possible (two minor modification
       has to be implemented yet and I'll do that ASAP). Now DBFNTX is
       very good base to implement DBFNSX.
     + added ordDestroy(), ORDLISTDELETE() method to close single order
       bag
     + implemented SIX3 like tag thermometer flags
     + implemented all DBOI_* actions
     + added missing RT errors and eliminate most of internal errors
     + added rest of missing DBFCDX functionality like:
       ordFindRec(), ordSeekEval(), ordSeekRegEx(), ordSeekWild(),
       ordSkipUnique() ...
       and added new one so far supported only by SIX3 in SIXCDX/SIXNSX
       Clipper RDDs. Our DBFCDX will have to be updated to also support
       it - now DBFNTX has most features and IMHO is finished so I plan
       to make only bug fixes and update it for new RDDINFO interface.
       I really need this functionality - I do not want to create a set
       of NTX*() functions to enable/disable/control new features.
       So I'll begin to extend RDD API ASAP.

  * xharbour/source/rtl/seconds.c
     + added real secondsCPU() support for WinNT
  * xharbour/source/common/Makefile
     + hbarch.c
  * xharbour/source/common/hbstr.c
      + added hb_strndup() and hb_strnlen()
  + xharbour/source/common/hbarch.c
    + added hb_strndup(), hb_strnlen(),
      hb_put_ieee754(), hb_get_ieee754(),
      hb_put_ord_ieee754(), hb_get_ord_ieee754(),
      hb_get_rev_double(), hb_get_std_double(),
      hb_get_le_int64(), hb_get_le_uint64(), hb_put_le_uint64()

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    + casting and some minor modifications

  * xharbour/tests/skipeval.prg
    * small modification for database reusing when there is no production
      index support in RDD

2005-06-21 22:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/bin/pack_src.sh
    + added libmisc and htmllib
      still dis script should be replace by global one which packs
      the whole _clean_ CVS tree.
  * xharbour/contrib/Makefile
    - removed hbzlib from DOS compilation - it uses non 8+3
      file names what breaks DOS compilation
  * xharbour/contrib/libmisc/Makefile
    - removed unused: DIRS=tests
  * xharbour/contrib/libnf/chdir.c
  * xharbour/contrib/libnf/rmdir.c
    ! fixed DOS compilation - "hbapi.h" has to be always included
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed HB_TRACE(...) message
  * xharbour/source/rtl/gtdos/gtdos.c
    + added support for HB_SETTERMCP()
  * xharbour/source/rtl/gtwin/gtwin.c
    * restored keyboard translation set by HB_SETTERMCP()
      It was removed by someone or I forgot to commit it in the past

2005-06-20 19:29 UTC-0800 Tony Bretado <jabrecer@yahoo.com>
  * source/rtl/gtwvt/gtwvt.c
    * Reverted latest optimization due to scroll bug

2005-06-19 23:45 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * contrib/gtwvw/gtwvw.c
  * contrib/gtwvw/doc/whatsnew.txt
    + wvw_xbshow() to show/hide scrollbar,
      code by Julio Cesar Cantillo Molina.

2005-06-17 21:30 UTC+0200 Henryk Olkowski <oh1@op.pl>
  * include/hbexprb.c
    ! Fixed compiler bug:
      Compile: harbour test.prg /w4/A/GC0/M/N/W/Q0/ES2
       procedure test()
        m->alfa[1]:=1  //  Warning W0001  Ambiguous reference: 'ALFA'
       return

2005-06-17 14:10 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * contrib/htmllib/oframe.prg
    !minor fix
  * include/thread.h
    source/vm/thread.c
    source/vm/inet.c
    ! minor fix to allow compile in MT on HPUX

2005-06-17 11:30 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/memoedit.prg
    + METHOD xDo() - added Self as 4th paramater to UserFunction

2005-06-16 16:10 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/teamwork.it>
  * xharbour/bin/bld.bat
    * for OpenWatcom and mingw32:
      * added MT support
      * added HB_MULTI_GT support
      * added ct and tip
  * xharbour/config/w32/watcom.cf
    * added HB_THREAD_SUPPORT for OpenWatcom

2005-06-15 22:56 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/errorapi.c
    * Moved checks for s_errorHandler to precede check on hb_vm_iTry

2005-06-15 21:55 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * utils/hbmake/hbmutils.prg
  * utils/hbmake/hbmake.prg
  ! Version 1.145 - Fixed to create obj directory if it does not exist
    before compile a makefile. Better "harbour.cfg" file management.

2005-06-14 11:30 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * make_gnu.sh
    ! Fixed double slashes.
  * doc/howtobsd.sh
    + Added bash as a requirement.

2005-06-14 01:40 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * source/rtl/filesys.c
    ! Fixed _POSIX_SYNCHRONIZED_IO check to meet the standard.
      It should probably fix FreeBSD 5.4-RELEASE compilation (untested).

2005-06-13 14:00 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * include/hbapigt.h
    +hb_gtWriteAt() definition updated for BOOL bSetPos
  * source/rtl/console.c
    +static BOOL s_DispOutAtSetPos = FALSE
      used to set the default behaviour of DISPOUTAT()
      for cursor position
    +HB_FUNC( DISPOUTATSETPOS ) to set/return
      value of s_DispOutAtSetPos
    +DISPOUTAT() 5th parameter to determine if
      cursor position is updated. If parameter not passed
      value of new static s_DispOutAtSetPos used
  * source/rtl/gtapi.c
    +added parameter bSetPos to hb_gtWriteAt() which
        determines if cursor pos is updated
  * source/rtl/alert.prg
  * source/rtl/menuto.prg
  * source/rtl/tget.prg
    + alter call to DispoutAt() to added .T. for cursor
      where necessary
  * source/clipsamp/gauge.c
  * source/clipsamp/status.c
  * utils/hbmake/hbmlang.c

2005-06-12 09:51 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/hvm.c
    * Added missing check on s_uiActionRequest to yesterday's change in hb_vmSend()

2005-06-11 15:26 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * xharbour/source/rdd/dbcmd.c
    * Fixed typo in Dbf2Text()

2005-06-11 15:00 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * source/rtl/debugger.prg
    ! Fixed breakpoint saving.

2005-06-11 13:35 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * source/rtl/debugger.prg
    ! Save and restore application's DispCount() value in debugger.

2005-06-10 15:50 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/error.ch
  * include/hblang.ch
  * source/lang/msg_tpl.c
  * source/lang/msgbgwin.c
  * source/lang/msgby866.c
  * source/lang/msgbywin.c
  * source/lang/msgca.c
  * source/lang/msgcs852.c
  * source/lang/msgcsiso.c
  * source/lang/msgcskam.c
  * source/lang/msgcswin.c
  * source/lang/msgde.c
  * source/lang/msgdewin.c
  * source/lang/msgen.c
  * source/lang/msgeo.c
  * source/lang/msges.c
  * source/lang/msgeswin.c
  * source/lang/msgeu.c
  * source/lang/msgfr.c
  * source/lang/msggl.c
  * source/lang/msghe862.c
  * source/lang/msghewin.c
  * source/lang/msghr1250.c
  * source/lang/msghr437.c
  * source/lang/msghr852.c
  * source/lang/msghriso.c
  * source/lang/msghu852.c
  * source/lang/msghucwi.c
  * source/lang/msghuwin.c
  * source/lang/msgid.c
  * source/lang/msgis850.c
  * source/lang/msgit.c
  * source/lang/msgko.c
  * source/lang/msgltwin.c
  * source/lang/msgnl.c
  * source/lang/msgpl852.c
  * source/lang/msgpliso.c
  * source/lang/msgplmaz.c
  * source/lang/msgplwin.c
  * source/lang/msgpt.c
  * source/lang/msgro.c
  * source/lang/msgru866.c
  * source/lang/msgrukoi.c
  * source/lang/msgruwin.c
  * source/lang/msgsl852.c
  * source/lang/msgsliso.c
  * source/lang/msgslwin.c
  * source/lang/msgsr852.c
  * source/lang/msgsriso.c
  * source/lang/msgsrwin.c
  * source/lang/msgua866.c
  * source/lang/msguakoi.c
  * source/lang/msguawin.c
  * source/lang/msgzhb5.c
  * source/lang/msgzhgb.c
    + Added EG_BADSELF -> "Invalid self" error.

  * include/hbclass.ch
    * Corrected to use return value of :ConstructorCall()
  * source/rtl/tclass.prg
    * Corrected to return value of the constructor call in :ConstructorCall().
    * Corrected to NOT call :New() unless it's a declared constructor.
    + Added Alert() warning when no constructor found, yet arguments passed.

  * source/vm/hvm.c
    + Added logic to detect invalid, or switched 'Self' object in hb_vmSend()
      and raise subtituable a RT Error.

     /*
        Clipper ignores the return value of constructors, and we cloned it. But
        I find it extremly dangerous to silently override programmer code. Now
        we'll detect such condition and throw an error. Additional benefit is
        that now the programmer CAN SWITCH the self value, in error handling.
      */

2005-06-10 16:03 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/console.c
    + close_binary() added missing cast

2005-06-10 16:00 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/rtl/console.c
    + close_binary() for HB_OS_WIN_32 check for zero length file

2005-06-09 22:00 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * contrib/rdd_ads/adsfunc.c
    + AdsStmtSetTablePassword( cTableName, cPassword )
      Sets a base table's encryption password that will be used when the SQL statement is executed.
      Thanks to Alvaro G. Dalloz.

2005-06-09 16:35 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/macro.c
    * Fixed gpf traps when compiling literal strings (static).

  * include/hbver.h
  * xharbour.spec
  * bin/pack_bin.bat
  * bin/pack_src.bat
    * Increased to 0.99.51

2005-06-02 03:46 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
    ! fixed stupid typo
  * include/hbver.h
    * Refreshed.

2005-06-02 03:12 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/pgsql/postgres.c
    * added temporary hack for autodetection postgers version * include/hbver.h * Refreshed.

2005-06-01 18:00 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbver.h
    * Refreshed.

2005-06-02 02:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/make_rpm.sh
    ! fixed the last modification for detecting X Window devel

2005-06-01 20:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbrddcdx.h
    * typo in comment corrected

  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
    ! fixed GPF when automatic codepage translation is set
      and one byte character field retrieve

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed GPF when automatic codepage translation is set
      and one byte character field retrieve
    * Do not disable read ahead buffer when relation are set
      It may interacts with some strange code but it is Clipper
      compatible and if someone needs previous behavior should
      use SET STRICTREAD switch.

  * xharbour/include/hbrddntx.h
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * rewritten from scratch indexing code - it should work on
      any hardware (little/big endian, 32/64bit, strict alignment),
      keep the natural order of keys with the same value, works much
      faster for any type of data and use limited memory buffer.
    + added support for DBOI_KEYSINCLUDED
    * the same modification as above in DBFCDX

  * xharbour/source/rtl/set.c
    * SET OPTIMIZE is ON by default now

  * include/hbver.h
    * Refreshed.

2005-06-01 10:00 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    * Made OleShowException() public function
  * include/hbver.h
    * Refreshed.

2005-06-01 08:35 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    * Deffed out unused static functions.
  * include/hbver.h
    * Refreshed.

2005-06-01 08:25 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbextern.ch
    + Added missing Hash functions.
  * utils/xbscript/xbs_harb.ch
    * Correxted missing \ prefix to \ char in C string
  * utils/xbscript/xbscript.prg
    * Corrected and optimized parsing of '=' as assignment.
  * include/hbver.h
    * Refreshed.

2005-05-31 19:05 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/compiler/harbour.slx
  * source/compiler/harbour.sly
    * Minor formatting

  * source/macro/macro.slx
  * source/macro/macro.y
    + Added support for BIT OPERATORS

  * utils/xbscript/xbs_harb.ch
  * utils/xbscript/xbscript.prg
    + Added support for BIT OPERATORS

  * include/hbver.h
  * xharbour.spec
  * bin/pack_bin.bat
  * bin/pack_src.bat
    * Prepared for 0.99.50

2005-05-31 15:06 UTC-0800 Luis Krause Mantilla <lkrausem /*at*/ shaw /*dot*/ ca>
  * contrib/rdd_ads/ads1.c
    ! added missing #define guard for ADS versions < 6 in adsSetFilter()
    ! incremented numeric fields from 20 to 32 to match ADS specs

2005-05-31 18:50 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * make_rpm.sh
    ! minor updated on X11 detection packages(some distro is XFree86-devel other xfree86-devel and others xorg-devel)

2005-05-31 14:41 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/persist.prg
    + Added logic to start with default values of clean object in ::LoadFromText()

2005-05-30 19:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! do not call RT error when there is pending VM request
    % do not try to set AUTORDER when production index was corrupted

2005-05-29 09:50 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * utils/xbscript/xbscript.prg
    * Corrected silly bug introduced in last commit.
    % Optimized array utilization in MatchRule()

2005-05-29 07:33 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/ppcore.c
    * Minor optimization

2005-05-28 23:02 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/ppcore.c
    - Removed unused pTemp

2005-05-28 23:02 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/compiler/harbour.sly
    ( Minor formatting.

  * source/pp/ppcore.c
    ! Fixed bug introduced with last change:
        #xcommand TEST <uVar1> := <uVal1> [, <uVarN> := <uValN> ] => <uVar1> := <uVal1> [ ; <uVarN> := <uValN> ]
        TEST Var1 := Var1(), Var2 := Var2(), Var3 := Var3()
    ! Fixed long standing bug, accepting multiple values for non repetable result pattern.

  * utils/xbscript/xbscript.prg
    * Modiified PPOut() to return .F. if multiple values must be used with non repeatble result.
    * Modfied MatchRule() to check return value of PPOut()
    * Simplified logic of marking match pattern as repeatable.

2005-05-27 22:35 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hberrors.h
  * source/pp/ppcore.c
    + Added support for directive #warning.

  * include/assocarr.ch
    + Added #warning for deprecated file.
    + Added #translate TAssociativeArray() => Hash()

  * source/rtl/tobject.prg
    + Added TAssociativeArray() as wrapper for Hash() when no paramaters passed,
      throw error otherwise.

  * tests/assocarr.prg
  * tests/assocspd.prg
  * tests/macroref.prg
  * tests/tstclsdbg.prg
  * tests/hashmass.prg
    * Removed TAssociativeArray()/modified to use Hash()

2005-05-27 15:14 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/compiler/harbour.slx
  * source/compiler/harbour.sly
    + Added parser support for hashes syntax.

  * source/macro/macro.slx
  * source/macro/macro.y
    + Added macro parser support for hashes syntax.
    + added macro parser support for IN, HAS, and LIKE operators.

  * source/pp/pptable.c
    - Removed #translate rules for Hashes (now native support in parsers).

  * source/pp/ppcore.c
    * Modified SearnRep() to NOT set 'Group Character' for markers NOT same as the processed 'expppatt'
      This fixes code like this:
         #xcommand MEMBER <cName> [, <cNameN>] ;
                   [ INIT <uValue> ]       ;
                 => ;
                   _TSTRUCT_:<cName> := <uValue> [; _TSTRUCT_:<cNameN> := <uValue> ]

         MEMBER Mem1, Mem2, Mem3 INIT "String"

    /* WARNING: These kind of changes are very sensative - please report any problem ASAP!!! */

  * source/rtl/cstr.prg
    * Reverted ValToPrgExp() to use { ... => ... } syntax, as macro compiler now supports it.
    % Optimized ValToPrg() for Hashes.

  * source/rtl/tobject.prg
    - Deffed out TAssociativeArray() - superceded by Hash()
  * include/assocarr.ch
    * Commented out, as TAssociativeArray() is superceded by Hashes.

  /* NOTE: PRG Code using TAssociativeArray() will need to be modified to use Hash() instead!!! */

2005-05-26 20:05 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/cstr.prg
    ! Fixed ValToPrgExp() support for hashes.

2005-05-26 14:30 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * utils/xbscript/xbscript.prg
    ! change starting procedure to 'PROCEDURE MAIN()' instead of uncommon
      (if not erroneus) 'STATIC PROCEDURE MAIN()'.
      (i think this commit didn't reach cvs, or has been overwriten)

2005-05-27 00:35 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * source/rtl/binnumx.c
    ! Fixed BIN2U() to return unsigned numbers for values >= 0x80000000.

2005-05-27 07:10 UTC+1200 Peter Rees <peter(AT)rees.co.nz>
  * source/ct/files.c
    - added missing FindClose( hFind ) in FILESIZE()

2005-05-26 14:30 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  + contrib\htmllib\help\html.ng
  + contrib\htmllib\website\website.zip
  + contrib\htmllib\example\userform.prg
  + contrib\htmllib\example\testhtm.prg
  + contrib\htmllib\example\bldsite.prg
  + contrib\htmllib\example\addbook.dbf
  + contrib\htmllib\example\website.ch
  + contrib\htmllib\example\fixing.dbf
  + contrib\htmllib\example\counter.prg
  + contrib\htmllib\example\testcgi.prg
  + contrib\htmllib\example\generror.prg
  + contrib\htmllib\example\addbook.prg
  + contrib\htmllib\example\counter.dat
  + contrib\htmllib\example\website.ini
    ! added htmllib examples and doc to cvs


2005-05-25 13:15 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/eval.c
    * Fixed silly typo in yesterday's change.

2005-05-25 15:35 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/vm/classes.c
    * removed unused pSymbol from hb_objHasMsg()

2005-05-25 15:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbcmd.c
    * generate error for bad trailing characters in ALIAS expression
      (Clipper compatible)
    * add EF_CANDEFAULT to BAD/DUP ALIAS errors (Clipper compatible)

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fix ordKeyCount() in descending indexes when not SCOPE/FILTER
      was active.

  * xharbour/source/rtl/errorsys.prg
    ! temporary fix for dump of screen contents in some GTs
      We will need new GTs method to make it well.

2005-05-24 15:24 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/ppcore.c
    ! Fixed support for extended strings (E"...") in getExpReal()

  * source/compiler/harbour.slx
    * Removed redundant ','

  * source/macro/macro.slx
    + Added support for extended strings (E"..." )

  * source/compiler/hbslex.c
  * source/macro/macroslx.c
    * Updated MAX_STREAM_STARTER and MAX_STREAM_TERMINATOR

2005-05-25 03:05 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/source/rtl/gtwvt/gtwvt.c
    ! void HB_GT_FUNC( gt_Scroll() )
      Optimizations. Now the function is much faster than earlier avoiding the unnecessary
      calls to blank the rows which were being copied from preceeding or succeeding rows.

2005-05-24 18:10 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * contrib/libmisc/dates2.c
  * source/ct/datetime.c
    ! Moved WOM function from dates2.c of libmisc to datetime.c of ct.lib

2005-05-24 14:04 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/classes.c
  * source/vm/do.c
  * source/vm/dynlibhb.c
  * source/vm/errorapi.c
  * source/vm/hvm.c
  * source/vm/macro.c
  * source/vm/memvars.c
  * source/vm/runner.c
  * source/vm/thread.c
    * Removed all calls to hb_dynsymLock() and hb_dynsymUnlock() as pere recent agreement.

  * source/vm/eval.c
    * Fixed, optimized and simplified HB_FUNC( HB_EXECFROMARRAY ) and hb_execFromArray( PHB_ITEM pFirst )
      /* please report any issues */

  * source/vm/memvars.c
    % Optimized HB_ITEM RetValue to &( HB_VM_STACK.Return )

  /* Because this change involved bulk manual cut operations, it must be tested heavily! */

2005-05-23 18:10 UTC+0200 Lorenzo Fiorini <lorenzo_fiorini/at/teamwork.it>
  * xharbour/source/debug/debugger.prg
    * fixed View CallStack tbrowse position for MAXCOL() > 79

2005-05-20 18:29 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbclass.ch
    ! Fixed rules for CLASS[]METHOD

2005-05-20 11:20 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * source/rtl/errorsys.prg
    changed function FWriteLine( nh, c ) to use Fwrite( nh, CRLF ) insted of Fwrite( nh, chr( 13 ) )+Fwrite( nh, chr( 10 ) )

2005-05-19 04:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! commented out last modification - it cannot be committed
      without some deeper modifications which I do not want to
      commit in release freeze state.

2005-05-18 19:38 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rdd/dbfntx/dbfntx1.c
    * Corrected(?) typo.

2005-05-19 04:15 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbapifs.h
  * xharbour/source/rtl/filesys.c
  * xharbour/source/rtl/philes.c
    + added DISABLEWAITLOCKS( [ <lNewSet> ] ) -> <lOldSet>
      which disable waiting locks in Windows
      It is workaround for delay problem which appears in Windows network
      server but for sure it's not sth what should be done on xHarbour
      level. Maybe somewhere in the future MS fix it. For samba it is
      possible to create a hack with the cost of strict compatibility.

  * xharbour/source/rdd/dbf1.c
    ! reverted last modification in PUTREC()/GETREC() method which
      broke the DBF SORT() method - they will have to wait to the
      moment when I'll rewrite DBF SORT().

  * xharbour/include/hbrddcdx.h
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! set the key/for expression to Clipper limit (255) bytes.
      It is possible in CDX but it breaks documented limit which is 220
      due to limitation in IDX header. In fact Clipper allows 256 bytes
      but I do not want to make it because some other drivers may need
      trailing 0 byte in stored expression.
    ! added error message when someone wants to create new tag in index
      open in read only mode - it avoids infinite locking in POSIX systems.
    ! when new index is created with ADDITIVE clause and it is production
      index then always keep it as first - CL53 compatible.

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! added error message when someone wants to write to index open in
      read only mode - it avoids infinite locking in POSIX systems.

  * xharbour/include/hbrddfpt.h
  * xharbour/source/rdd/dbffpt/dbffpt1.c
    * minor cleanup in last modification

2005-05-18 11:10 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/compiler/harbour.slx
    ! Fixed silly, long stamding, quiet bug.

2005-05-17 16:51 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/cstruct.prg
    * Minor fix to ::asString()

2005-05-17 13:08 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * source/ct/dattime3.prg
  ! fix in showtime() function that was not disabling when we call
    showtime() without arguments.

2005-05-17 04.40 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * hrbdll.dc
  * hrbdll.gc
  * hrbdll.pc
  * hrbdll.wc
  * makefile.dc
  * makefile.gc
  * makefile.pc
  * makefile.wc
    ! updated.

  * contrib/libnf/fttext.c
    ! some minor enhancements

  * source/rtl/str.c
    ! hb_retc() + hb_xfree() -> hb_retcAdopt()

  * utils/hbtest/rt_trans.prg
    ! change expected results per current xHarbour corrections on Clipper
      bugs (IMO) on return value of transform() line 432 and 433
  * utils/hbtest/rt_str.prg
    ! per Clipper: Str(Val("-..")) == "0.0", not " 0.0"
                   Str(Val("-.0")) == "0.0", not " 0.0"
      the expected results for xHarbour changed accordingly.
  * source/vm/arrayshb.c
  * source/vm/hvm.c
    ! RT error message on error 1340/1341/1065 to conform with Clipper ones.
      This reduces hbtest.exe's failures to 13.

  * source/compiler/genc.c
    * enable INIT/EXIT PROCEDURE written in C dump.
    * fix compilation error in a fragment like:
      .---
      | PROCEDURE MAIN()
      | RETURN
      | #PRAGMA BEGINDUMP
      | #include "hbapi.h"
      | #ifdef __INCLUDE_THIS__
      | HB_FUNC( FOO ) {;}
      | #endif
      | #PRAGMA ENDDUMP
      `---

  * source/rtl/tget.prg
    ! fix bug on get picture "@R 99:99" as reported by Luiz

  * contrib/libnf/dispc.c
  * source/ct/ctwin.c
  * source/ct/settime.c
  * source/ct/strfile.c
    ! type castings

2005-05-16 14:23 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * contrib/rdd_ads/ads1.c
    ! Fixed GPF trap in adsSetFilter()

2005-05-16 13:18 UTC-0800 Tony Bretado <jabrecer@yahoo.com>
  * include/ctwin.ch
    ! Re-Activation of commands CTWINON and CTWINOFF
    + Added suport for colorwin
  * source/ct/alt/ctwin.prg

2005-05-16 21:25 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * contrib/wvtgui/hbgtwvt.h
    ! missing function declaration hb_wvt_gtSetLastMenuEvent()
  * source/rtl/gtwvt.h
    ! typo: hb_wvw_gtSetLastMenuEvent() --> hb_wvt_gtSetLastMenuEvent()
  * ChangeLog
    ! minor typo in my last change entry

2005-05-15 15:14 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbexprb.c
  * source/compiler/exproptb.c
    * Fixed generation of M[EMVAR]->SemeVar[...] := ...
  * source/compiler/harbour.sly
    * Fixed GPF trap typo.

2005-05-15 11:11 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbexprb.c
  * source/compiler/exproptb.c
    * Missing declaration of hb_compFieldGetPos()

2005-05-14 18:40 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbexprb.c
  * source/compiler/exproptb.c
    * Fixed generation for pusing <declared>[...] when <declared> is a FIELD.

   /*
      To fix pop operation we'll need to add support for HB_P_PUSHFIELDREF
      Przemek, can you add proper support in RDD so we can implement it?
    */

2005-05-14 11:50 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/hvm.c
    ! Fixed background tasks logic to prserve value of HB_VM_STACK.Return

2005-05-13 1:26 UTC-0800 Luis Krause Mantilla <lkrausem /*at*/ shaw /*dot*/ ca>
   * source/rtl/transfrm.c
     ! Fixed bug in handling @( and @) pictures in combination with $.
       All credits to the fix go to Andi Jahja (I'm just commiting on his behalf)
     ? Transform( -5, "@(Z $###,##9.99" )
     ? Transform( -10, "@)Z $###,##9.99" )
     ? Transform( -20, "@Z $###,##9.99" )

2005-05-13 18:25 UTC-0300 Walter Negro <anegro /at/ overnet.com.ar>
   * source/common/expropt2.c
      ! Fix bug in hb_compExprReduceDiv() in this situation:
         DOUBLE / 0 or LONG / 0.0
Reported by Rafa Carmona (TheFull)

<<<<<<< ChangeLog
2005-04-08 17:05 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * contrib/Makefile
    + Added building of gtwvw and wvtgui on Windows, rdd_ads on Linux.

=======
2005-05-12 17:57 UTC-0800 Tony Bretado <jabrecer@yahoo.com>
  * source/rtl/achoice.prg
    ! I found that Clipper Hilites the current item AFTER calling;
      the user defined function
    ! Also I found that Clipper calls the UDF in the begining ONLY;
      if the UDF returns a value different than 0

2005-05-12 02:45 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbrdddbt.h
  * xharbour/include/hbrddfpt.h
  * xharbour/source/rdd/dbffpt/dbffpt1.c
    * changed locking mode to be more friendly for DOS/Windows
      Now you can chose two version of locks. When compiled with:
      -DHB_MEMO_SAFELOCK special slower mode is used but you can
      be sure that you always access proper data. All read and
      write operation are covered by locks.
      Without -DHB_MEMO_SAFELOCK standard Clipper compatible locks
      are used where only WRITE operations are covered by locks
      and if user wants to be sure he access proper MEMO values
      then he should make FLOCK or RLOCK on current record. This
      is default mode (now). if the files are accessed localy then
      the locking overhead is minimal so the HB_MEMO_SAFELOCK
      should be default for *nixes in the future.
      When we add rddInfo() method I'll make locking mode user
      switchable at runtime - now I do not want to create yet
      another global set

2005-05-11 15:10 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/bin/hb-func.sh
  * xharbour/bin/postinst.sh
    + added support for g++ in xhb* scripts
  * xharbour/source/rdd/workarea.c
    ! fixed problem with recursive call to SELF_EVALBLOCK() method.
      In new RDD API I'll add 'PHB_ITEM pResult' to this method to
      avoid this problem.

2005-05-10 22:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
    + extended information in 1010 RT error

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * added missing static in hb_cdxDBOIScopeEval() declaration

  * xharbour/tests/speedtst.prg
    * added test for method access

2005-05-10 09:46 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * xharbour/source/rdd/dbcmd.c
    * Corrected typo in recent commit

2005-05-10 12:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbcmd.c
  * xharbour/source/rdd/dbf1.c
    * strip trailing spaces from field name in COPY FIELDS ... TO
      Clipper makes the same.

  * xharbour/source/rdd/dbfcdx/Makefile
  * xharbour/source/rdd/dbfcdx/dbfcdx0.prg
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  + xharbour/source/rdd/dbfcdx/sixcdx0.prg
  + xharbour/source/rdd/dbfcdx/sixcdx1.c
    + added SIXCDX as separate file for easier compilation - sixcdx1.c
      includes dbfcdx1.c so the code was not copied
    * implemented exact SIXCDX EVERY evaluation when index is created
      in SIXCDX (DBFCDX still uses COMIX one) documented by SIX so the
      following code will works:
         FUNCTION Progress()
         IF Bof()
             // Show Progress screen - always called at beginning
         ELSEIF Eof()
             // Restore screen
         ELSEIF
             // Show index progression - always called at the end
         ENDIF
         RETURN( NIL )

2005-05-09 17:46 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/hvm.c
    ! Fixed GPF trap in hb_vmPlus() (support for strings)
    * Corrected HB_P_ADDINT support for strings to retain string context.

2005-05-09 23:30 UTC+0530 Pritpal Bedi <pritpal@vouchcac.com>
  * xharbour/source/rtl/gtwvt/gtwvt.c
    + IPicture * HB_EXPORT hb_wvt_gtLoadPictureFromResource( LPCSTR cResource, LPCSTR cSection )
      Now images can be loaded from resources also, thanks Augusto Infante.

  * xharbour/source/rtl/gtwvt/gtwvt.h
    ! #define WVT_PICTURES_MAX      50
      #define WVT_FONTS_MAX         50
      #define WVT_PENS_MAX          50
      #define WVT_DLGML_MAX         50
      #define WVT_DLGMD_MAX         50
      The above values were 20 and now increased to 50 to accomodate more dialogs and pictures.

    ! hb_wvt_gtRenderPicture()
      Included if ( _s.bGui ). Was not drawing an image to console buffer.

  * xharbour/contrib/wvtgui/hbgtwvt.h
    ! #define WVT_PICTURES_MAX      50
      #define WVT_FONTS_MAX         50
      #define WVT_PENS_MAX          50
      #define WVT_DLGML_MAX         50
      #define WVT_DLGMD_MAX         50
      The above values were 20 and now increased to 50 to accomodate more dialogs and pictures.

   * xharbour/contrib/wvtgui/wvtcore.c
     + Wvt_LoadPictureFromResource()
       Prg level function to load pictures from resource file linked with the application.

2005-05-09 14:05 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbinit.h
    ! added workaround for XCC/POCC/LCC compilers which set _MSC_VER
      macro

2005-05-09 12:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbapi.h
  * xharbour/include/hbapigt.h
  * xharbour/source/compiler/harbour.c
  * xharbour/source/rtl/console.c
  * xharbour/source/rtl/gtapi.c
    * changed char * parameter into const char * in hb_conOutAlt(),
      hb_conOutStd(), hb_conOutErr(), hb_gtAdjustPos()

  * xharbour/include/hbinit.h
    * just small reorganization of _WIN64 and comments added. The
      functional logic not changed.

  * xharbour/include/hbvmpub.h
    * indenting

2005-05-07 01:43 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/rdd_ads/ads1.c
  * xharbour/include/hbrddcdx.h
  * xharbour/include/hbrddntx.h
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    + added support for DBOI_SCOPESET, DBOI_SCOPECLEAR
    - removed SELF_CLEARSCOPE(), SELF_SETSCOPE(), SELF_SCOPEINFO()
      methods - they will be used in the future for scoped navigation
    * set default tag selection to be COMIX/CLIPMORE compatible

2005-05-06 10:45 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * source/rtl/gtwvt/gtwvt.h
  * source/rtl/gtwvt/gtwvt.c
    + hb_wvt_gtSetLastMenuEvent()

  * contrib/wvtgui/wvtutils.c
    + WVT_SETLASTMENUEVENT() callable from .prg

2005-05-05 21:35 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * source/rtl/dbedit.prg
    ! fixed problem when UDF Return DE_ABORT, but not quit dbedit. reported by Nelson Ota

  * source/ct/dattime3.prg
    ! fixed Parameter validating (using now DEFAULT command insted of an forced check of if valtype(var) =="U"

2005-05-04 21:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/workarea.c
    ! fixed typo in my modification in relation code

2005-05-04 15:05 UTC-0400 Gerald Drouillard <gerald@drouillard.ca>
  * xharbour/source/rtl/teditor.prg
    ! fix text2array() support for trailing spaces or linew with many spaces.
    ! fix getparapraph() does not need to add a space to the line.  On lines with no spaces this would cause "corruption" of the text.

2005-05-04 23:45 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * contrib/gtwvw/hbgtwvw.h
  * contrib/gtwvw/gtwvw.c
  * contrib/gtwvw/doc/whatsnew.txt
    + hb_wvw_gtSetLastMenuEvent()
    + WVW_SETLASTMENUEVENT() callable from .prg

2005-05-04 13:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/dbinfo.ch
    + added DBOI_SCOPESET, DBOI_SCOPECLEAR
  * xharbour/include/hbapirdd.h
    * some comments added about using Clipper's concept of RecID
      which could be nonnumerical value in some RDDs

  * xharbour/include/hbvm.h
    * minor modification: long replaced by LONG

  * xharbour/source/rdd/dbcmd.c
    ! clear unused fields in DBEVALINFO
    ! respect non numeric RecID in RLOCK()
    ! respect non numeric RecID in __DBARRANGE()
    + added 2 as parameter in ordScope() - it sets both scope
      the return value depends on RDD - ordScope() itself does not
      try to force it now

  * xharbour/source/rdd/workarea.c
    * use SELF_EVALBLOCK() method to evaluate relation block
    ! use SELF_GOTO() method instead of SELF_GOTOID() - it fixes bad
      .prg code which sets bad relations without active indexes but
      it breaks using non numeric RecIDs. I will have to make some
      test in Clipper to found its exact behavior then discuss this
      problem in devel list

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * use FS_END instead of SEEK_END in hb_fsSeek() to avoid problems
      on platforms which may use differ lseek() values.

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed problem reported by Budyanto - it was caused by unfinished
      code for operating on empty (without keys) pages - my fault. I do
      not know if Clipper can work with such pages. It will be necessary
      to make some tests though now I added freeing the empty root page
      when it's not a leaf. Support for empty pages is necessary for
      indexes which have nonsymmetric leaf and branch nodes, key values
      are also stored in branches and the index tree has to be well balanced
      (f.e. NSX) this is the reason I implement it as base for future NSX RDD

  * xharbour/source/vm/itemapi.c
    ! fixed hb_itemPutNInt() and hb_itemPutNIntLen() to work like
      other hb_itemPut*() functions - it should return new item when
      NULL was passed as first parameter. This also fix GPF in SKIPEVAL
      in DBFCDX

2005-05-02 13:00 UTC-0400 Gerald Drouillard <gerald@drouillard.ca>
  * source/rtl/tbrowse.prg
    ! Fix: display issue when ::colPos is set when ::leftvisible>::nFrozenCols

2005-05-02 17.15 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * contrib/libnf/fttext.c
    ! total reworked version using xHarbour array implementation.

2005-04-30 12:00 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * source/rtl/tgetlist.prg
    ! fixed problem on getprevalidate method, that was forcing the display of get object, when oget:control is valid

2005-04-29 11:49 UTC-0500 Vicente Guerra <vicente@guerra.com.mx>
  * source/rtl/win32ole.prg
    * Changed 0 to LOCALE_USER_DEFAULT on Invoke() calls.

2005-04-29 11:40 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * make_deb.sh
  * debian/*.*
    ! updated files and rules to generate debian .deb package

2005-04-29 10:10 UTC-0400 Gerald Drouillard <gerald@drouillard.ca>
  * source/rtl/memoedit.prg
    ! removed strtran tabs=>space(1), nTabSize should handle this if needed
  * source/rtl/teditor.prg
    ! fix problem with long strings that do not have a space in them and word wrap is on.  A space was being added by the line parsing
    ! fix problem with string not ending in a eol.  The string returned would have an extra line.

2005-04-28 17:49 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    * Corrected 0 to MB_PRECOMPOSED in call to MultiByteToWideChar()

2005-04-28 17:40 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/classes.c
    + Added support for explictly calling ::__Destructor() and ::__OnError()

2005-04-28 18:45 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * xharbour.spec
    ! added missing libhsx.a

2005-04-28 15:20 UTC-3 Marcelo Lombardo <marcelo@xharbour.com.br>
  * source/memvars.c
    ! Fixed PARAMETERS command with MT
      /* Thanks to Fabio Uggeri */
  * source/vm/hvm.c
    ! Missing cast to MSVC

2005-04-28 17:23 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/vm/memvars.c
    ! typo causing RT error on SAVE command

  * contrib/libnf/fttext.c
    ! fix possible memory leak in _ft_skip()
    + add FT_FBUFFERSIZE( nNewBuffSize ) -> nOldBuffSize, user defined buffer
      size for read/write operations.
    ! change file read/write/seek method with large modes.

2005-04-28 05:15 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/vm/memvars.c
    ! syntax of __mvSave() and __mvRestore() to conform with standard
      Clipper behaviour.

  * utils/hbtest/hbtest.prg
    ! reverted back parameters passed to __mvSave and __mvRestore to use
      standard Clipper's ones.

2005-04-27 14:21 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * xdiff.txt
    + Added info about FINALLY syntax
  - tests/finalize.prg
  + tests/finally.prg
    * renamed

2005-04-28 03:40 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * contrib/libnf/fttext.c
    ! reverted usage of static buffer
    ! Add error trapper when file operations are performed in an area
      where no file is opened.
    ! Modify behaviour of FT_FDELETE() to a more convenient one.

2005-04-27 13:19 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbpcode.h
  * source/compiler/hbpcode.c
  * source/compiler/genc.c
  * source/compiler/hbfix.c
    + Added HB_P_FINALLY, and HB_P_ENDFINALLY

  * include/hbvm.h
  * include/thread.h
  * source/vm/hvm.c
  * source/vm/thread.c
    + Added hb_vm_pFinally

  * source/compiler/harbour.c
    - Removed wrong comment.

  * source/compiler/harbour.slx
  * source/compiler/harbour.sly
    + Added support for FINALLY syntax

  * include/hbsetup.h
    * Increased HB_PCODE_VER to 7

  * tests\finalize.prg
    + New test of FINALLY syntax.

2005-04-27 22:00 UTC+0200 Pavel Tsarenko <tpe2@mail.ru>
  * contrib/rdd_ads/ads1.c
  * contrib/rdd_ads/adsfunc.c
    * removed conversion into OEM charset for Ads version 5.x
      because AdsGetFieldRaw() is not supported by ACE 5.x

2005-04-27 10:00 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * contrib/libnf/fttext.c
    % minor enhancement by using static variable for buffer as per original
      author's suggestion.
    % FT_FUSE() now accept 3rd parameter to properly write files with
      different EOL ie. CHR(13) + CHR(10) (Windows style) and CHR(10)
      (Unix style). Syntax: FT_FUSE( cFile, nOpenMode, cEOL )
      Default cEOL -> hb_conNewLine() as defined in compiler.
    % modify logic in FT_FREADLN() and FT_FSKIP() to respect EOL in file
      being read. This enables reading Unix or Windows files properly.

2005-04-27 02:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/rdd_ads/ads1.c
    ! fixed scope settings by DBOI_* interface.

2005-04-26 10:26 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/harbinit.prg
    + Added __ErrorBlock()
    + Added __MinimalErrorHandler()
  * source/vm/hvm.c
    * hb_vmDoInitError() now calls __Errorlock() instead of ErrorSys()

  /*
     This provides minimal handling for STATIC initialization errors.
     After static Initialization ClipInit() is called to set normal ErrorSys.
   */

2005-04-26 14:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/vm/hvm.c
    ! fixed initialization order. We cannot run any unknown .prg code
      before hb_vmDoInitStatics() because if it uses static variables
      then it will GPF. I understand we need some error system enabled
      when hb_vmDoInitStatics() is executed. So I added the function
      hb_vmDoInitError() which set it. This is the note I left in
      Source code:
      /*
       * TODO: replace it by our own minimum error system: f.e __ERRORBLOCK
       * for which we will be sure that it does not use any static variable
       * references. ErrorSys can be replaced by user and it is not safe to
       * set it here. This is only temporary solution to the moment we create
       * very small and basic error system which will be set when static
       * variable are initialized to report any error which can appear in
       * this process (very seldom situation because code for static
       * initialization is limited). The real erro block will be set
       * by CLIPInit function [druzus].
       */
      I would like to ask someone familaiar with current error handlers
      to write very simply error handler which will be set by __ERRORBLOCK()
      It should not use any upperlevel subsystems. It will be ideal if it'd
      use only console and/or basic traclog output without additional .prg
      code.
    * restored previous version of s_uiActionRequest checking in main
      hvm look - Ron you replaced single check for if( s_uiActionRequest )
      with three if( s_uiActionRequest & ... ) this has noticeable
      performance interaction - it's a main VM loop and we have 3 if's
      instead of one in 99.9% of situation because s_uiActionRequest is set
      very seldom (break, quit)
    + added: SIXCDXINIT, RMDBFCDXINIT, ADSINIT to rdd initialization.

  * xharbour/contrib/rdd_ads/ads0.prg
  * xharbour/source/rdd/dbfcdx/dbfcdx0.prg
    * removed 'init' from the RDD init procedures - it will be called by VM.

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * minor cleanups - no effect at runtime.

2005-04-26 17:10 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * contrib/libnf/makefile.bc
  * contrib/libnf/makefile.vc
  * contrib/libnf/makefile.wc
  + contrib/libnf/fttext.c
    + xHarbour version of Nanforum Toolkit text file handler.
    NOTE: There is an inconvenient behaviour (IMHO) in FT_FDELETE() but the
    functionality is currently the same with the original 16-bit version.
    Perhaps we should revise it someday.

  * contrib/libnf/chdir.c
    ! modify return value as per original version

2005-04-26 00:24 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/errorapi.c
  * tests/trycatch.prg
    * Refinments to recent commit.

2005-04-25 22:36 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbapierr.h
  * source/vm/errorapi.c
    + Added PHB_ITEM hb_errorBlock( PHB_ITEM pNewErrorBlock )
    * Reverted ErrorBlock() to NOT care about hb_vm_iTries
  * include/hbvm.h
  * source/vm/hvm.c
    + Added PHB_ITEM pPrevErrBlock to struct _HB_SEQUENCE
    + Added logic to set/restore ErrorBlock in TRY/END

  * tests/trycatch.prg
    * Modified to test mixing TRY/END along with BEGIN SEQUENCE and ErrorBlock()

2005-04-26 11:10 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * contrib/libnf/caplock.c
  * contrib/libnf/numlock.c
    ! update state only when argment passed (only return status
      when no argument passed)

2005-04-26 09:50 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/pp/pptable.c
    ! missing support for: SAVE ALL LIKE "*" TO "MYFILE" EXTENDED

2005-04-26 01:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbapirdd.h
    ! fixed orderListDelete method declaration - should be:
      DBENTRYP_OI not DBENTRYP_VP

  * xharbour/contrib/rdd_ads/ads1.c
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
  * xharbour/source/rdd/dbffpt/dbffpt1.c
  * xharbour/include/hbrddwrk.h
    * updated for proper orderListDelete declaration

  * xharbour/source/rdd/dbf1.c
    * updated for proper orderListDelete declaration
    * {PUT,GET}REC() method changed to skip DELETE byte - I'm not
      100% it's Clipper compatible. Can someone check it?
      Anyhow IMHO it should not be appended to record buffer
      when data is transfered between RDDs
    * TRANSREC() method modified for proper whole record
      coping. I'll add yet field by filed coping and will move
      this code to workarea.c as default TRANSREC() implementation

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * copy the new key in GOCOLD to curkey - it may reduce one key
      evaluation in some cases

  * xharbour/source/rdd/dbcmd.c
    ! replaced direct access to pArea->f[EB]of, pArea->fFound with proper
      method call - direct access does not respect pending relations.
      Not everything can be fixed yet - I will have to implement
      SKIPSCOPE() to make it clean. Direct access also doesn't respect
      late evaluation of previous operations - some RDD may want to use
      it - for sure I will need it in NETRDD

  * xharbour/source/rdd/workarea.c
    + added some comments
    * some other code made more simple

  * xharbour/source/common/hbstr.c
    * optimized hb_stricmp()
    ! fixed possible overflow in hb_strncpyUpperTrim(), hb_strncpyTrim()

  * xharbour/source/rtl/strings.c
    * fixed and optimized hb_strnicmp()

2005-04-25 16:38 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * utils/hbmake/hbmake.prg
    ! Version 1.144 - Changed to recreate the harbour.cfg file at each time
      that use "-f" to force rebuild all prgs. At this way the harbour.cfg will
      be always updated. The option VERBOSE was changed to YES to all C compilers
      also. For Borland C++ compiler the "-OS" flag was removed because it's
      duplicated.

2005-04-25 21:15 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/bin/pack_src.bat
  * xharbour/bin/pack_src.sh
    + added HSX library

  * xharbour/config/w32/bcc32.cf
    * use the same optimization flag as in makefile.bc

  * xharbour/source/rdd/hsx/hsx.c
    ! fixed bug - the maximum size of key expression stored in HSX header
      was calculated one byte longer then it should be.
      IMHO it should also fix BCC and MSC problem reported by Andi.
      It was my bug and optimization flags only exploited it.

2005-04-25 09:10 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * utils/hbtest/hbtest.prg
    ! changed parameter passed to __MvSave() and __MvRestore() to conform
      with current syntax.

2005-04-25 08:15 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/vm/memvars.c
  * source/pp/pptable.c
    + additional flags on SAVE/RESTORE FROM *.mem; Possible commands:
      + save to mymem all like mylongvariable* extended
      + save all except mylongvariable2 to mymem extended
      + save to mymem all except mylongvariable2 extended
      + save to mymem all extended
      + restore from mymem additive extended
      + restore from mymem extended

      "EXTENDED" flags works on xHarbour flavor ie. memvar names with more than
       10 chars length ie. MYVARIABLE_MORE_THAN_10
       Default length is HB_SYMBOL_NAME_LEN (64 by default)
       Variable saved with "EXTENDED" must be restore with "EXTENDED" too.

       WARNING:
       __MVRESTORE syntax now changed as folows:
       __MVRESTORE( cMemFile, lAdditive, lLongName, cMask, lIncludeMask )
       lLongName ( default := .F. ) is inserted as 3rd argument.

  * tests/memfile.prg
    ! Modify __MvRestore() to use current syntax

  + tests/memfilex.prg
    ! test program for saving/restoring long-name public variables to/from
      mem file.

  * source/rtl/philes.c
    ! CURDIR[X]() now respects parameter eg. CURDIR("D:")
      Hopefully this will not have bad effect on OS with no drive letter

  * contrib/libnf/caplock.c
  * contrib/libnf/numlock.c
  * contrib/libnf/alt.c
  * contrib/libnf/ctrl.c
  * contrib/libnf/shift.c
  * contrib/libnf/chdir.c
  * contrib/libnf/rmdir.c
  * contrib/libnf/mkdir.c
    ! enable functions for __WIN32__

2005-04-24 14:33 UTC-0500 Vicente Guerra <vicente@guerra.com.mx>
  * source/rtl/achoice.prg
    ! Now not scroll more rows than items on screen.

2005-04-24 20:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbcmd.c
    ! fixed stupid bug I introduced to __DBLOCATE() in last commit
      (never ending loop)
  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * minor modification - rather formating

2005-04-24 13:25 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/rdd_ads/ads1.c
    * added full ord scope support by DBOI_* interface.
      Now the used method can be freed.
      Brian please check me - sorry I cannot well test it.
  * xharbour/contrib/rdd_ads/adsfunc.c
    * removed unused variable

  * xharbour/include/hbapirdd.h
    + added HARBOUR_MAX_RDD_RELTEXT_LENGTH to avoid possible buffer
      overflow in DBRELATION() function - RDD should respect this value
      in RELTEXT() method

  * xharbour/source/rdd/dbcmd.c
    + added HARBOUR_MAX_RDD_RELTEXT_LENGTH to avoid possible buffer
      overflow in DBRELATION() function - RDD should respect this value
      in RELTEXT() method
    * ordScope() changed to use DBOI_*() interface

  * xharbour/source/rdd/dbf1.c
    * removed GOCOLD()/FORCEREL() from hb_dbfGetVarLen() it's not necessary
      for simple fileds because their size is taken from pArea->lpFields

  * xharbour/source/rdd/workarea.c
    ! fixed possible GPF in hb_waOrderInfo() when called with bad DBOI_*
      parameter
    ! hb_waRelText() respects HARBOUR_MAX_RDD_RELTEXT_LENGTH
    * changed scoped relations to use DBOI_* interface for scopes

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * modified the tag selection for SIXCDX - now when only bag is given
      (without tag) SIXCDX looks for tag with the same name as given bag.

  * xharbour/include/hbrddntx.h
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed GOCOLD() - it should not use current key buffer for previous
      key value - potential source of different problems.

  * xharbour/source/rdd/hsx/hsx.c
    * minor modification - nothing has been changed it was a workaround
      for some possible bug in C compiler optimization.

  * xharbour/source/vm/fastitem.c
    ! fixed debug message in hb_itemClear() - it was causing GPF
      when hb_itemClear() was called with NULL parameter

2005-04-23 13:20 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * contrib/hbzlib/zip.c
    * Fix to static void UnzipCreateArray( char *szZipFileName, char *szSkleton, int uiOption),
      which was not filling the unzip array correctly when passing an array of files to extract.
      Also fix extract of filenames like file(00).cnt
  * contrib/hbzlib/zipcomp.cpp
  * contrib/hbzlib/zipnew.cpp
    Unzip files will continue if one file cannot be extracted
    fixed hb___GetNumberofFilestoUnzip() when passing an wrong file name that was causing gpf

2005-04-22 23:47 UTC-0500 Vicente Guerra <vicente@guerra.com.mx>
  * contrib/pdflib/pdfhbdoc.c
  * include/hbapi.h
  * source/vm/arrays.c
  * source/vm/arrayshb.c
  * source/vm/hash.c
  * source/vm/hvm.c
    + Added support for bAllowChar parameter in hb_arrayScan(), which
      allows to manage single-byte strings as numbers in array scans.
  * doc/en/hb_api.txt
  * doc/en/array.txt
  * doc/es/array.txt
  * doc/hash.txt
    + Added documentation for RASCAN and "bAllowChar" parameter.
  * include/hbextern.ch
  * utils/xbscript/xbscript.prg
    + Added some RASCAN implicit calls.

2005-04-22 21:30 UTC+0200 Pavel Tsarenko <tpe2@mail.ru>
  * source/rtl/ttable.prg
    + added error handler to allow using table fields as class member
  * tests/tstprag.prg
    + added sample for #pragma TEXTHIDDEN

2005-04-22 13:18 UTC-0500 Vicente Guerra <vicente@guerra.com.mx>
  * source/vm/arrayshb.c
    + Added missing #include "hbvm.h"
    ! Fixed bug: RASCAN({"A","BC","D"},"B") now works.
    + Added sixth parameter: lAllowChar, for support single-byte/numeric
      conversion (default .F., as Clipper behavior).
  * source/vm/arrays.c
    ! Fixed bug: ASCAN({"A","BC"},"B") now works.
    * hb_arrayScan is ready to support "lAllowChar". Not yet implemented,
      but we only need to change a single variable value.

2005-04-22 09:48 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/errorapi.c
    * Fixed GPF trap I introduced yesterday in HB_FUNC( THROW ).

2005-04-22 06:20 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    + the order/tag selection is SIX compatible when compiled in
      SIXCDX and COMIX compatible in DBFCDX

  * xharbour/source/rdd/dbcmd.c
    ! fixed recently reported problem in __DBLOCATE and some others
      I've found. I cut 80% percent of code from this function - I hope
      that I haven't introduced new ones.

  * xharbour/source/rdd/workarea.c
    * simplified hb_waEval() method

2005-04-21 16:23 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/harbinit.prg
    + Added __BreakBlock()
  * source/vm/errorapi.c
    * Generate a R/T error if ErrorBlock() is called within a TRY/END code
      or use hb_vm_BreakBlock if HB_USE_BREAKBLOCK is defined.
  * source/vm/hvm.c
    + Added PHB_ITEM hb_vm_BreakBlock if HB_USE_BREAKBLOCK is defined
    + Added initialization of hb_vm_BreakBlock in hb_vmDoInitClip()
      if HB_USE_BREAKBLOCK is defined
    ! Fixed call to hb_vmDoInitClip() to PRECEDE call to hb_vmDoInitStatics(),
      or else any error in statics assignments code doesn't have any error handler.

2005-04-21 17:51 UTC-0500 Vicente Guerra <vicente@guerra.com.mx>
  * source/vm/arrayshb.c
    + Function RASCAN (Reverse AScan) added.

2005-04-21 21:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * force fixed start record for whole database indexes

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * implemented RT error for some type of currupted indexes.

  * xharbour/source/rdd/hsx/hsx.c
    + added emulation of exclusive mode for POSIX systems
      (the same trick as for DBF)
    ! fixes sent by Andy. Thanks.

  * xharbour/tests/hsxtest.prg
    * minor modifications to not not reopen hsx index
      in hs_filter() but use handler to already open one

2005-04-21 16:45 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/compiler/genc.c
    + allow processing PRG file with only C codes in dump areas.

2005-04-21 08:35 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * include/hbcomp.h
    + function declaration for newly added compiler sub routines.

2005-04-20 16:27 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbpcode.h
  * source/compiler/genc.c
  * source/compiler/hbpcode.c
  * source/compiler/hbfix.c
    + Added: HB_P_TRYBEGIN, HB_P_TRYEND, HB_P_TRYRECOVER

  * source/compiler/harbour.c
  * source/compiler/harbour.sly
    * Modified to generate new HB_P_TRYBEGIN, HB_P_TRYEND, HB_P_TRYRECOVER

  * source/vm/hvm.c
    + Added support for new HB_P_TRYBEGIN, HB_P_TRYEND, HB_P_TRYRECOVER

  * source/vm/errorapi.c
    + Added HB_FUNC( THROW )
    + Added logic to use hb_vmRequestBreak( pError ) if in TRY block.

  * source/pp/pptable.c
    - Removed rule for Throw()

  * source/rtl/terror.prg
    - Removed no longer needed HB_SetTry() and HB_ResetTry()

  * include/hbsetup.h
    * Increased HB_PCODE_VER to 6

  /*
     Above change dramitacally improves speed of TRY/CATCH/END and exceptions handling.
   */

  * tests/trycatch.prg
    * Synched with recent change to ErrorNew()

2005-04-21 04:25 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/compiler/genc.c
    ! minor fix on writing function prototypes.

2005-04-19 20:19 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/compiler/harbour.c
    * Fixed hb_compAutoOpen() to process command line after initializing PP.

2005-04-19 16:19 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/dbdelim.prg
    * Some Clipper comptability refinments.

2005-04-19 23:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/config/global.cf
  + xharbour/source/rdd/hsx/Makefile
  + xharbour/source/rdd/hsx/cftsfunc.c
  + xharbour/source/rdd/hsx/hsx.c
  + xharbour/tests/hsxtest.prg
    + HSX is new Full Text Search library binary compatible with
      SIX3 HiPer-SEEK indexing and CFTS (Clipper Fast Text Search)
      library. It can creates HSX index on variable character keys,
      for example you can index single or group of fields (also
      MEMO ones) and then search for any phrases in indexed data.
      You may find more information in the NET. Look at www.clipx.net
      for CFTS NG and/or SIX3 HiPrer-SEEK.
      All functions from both libraries are implemented, new extensions
      added and known bugs in original versions fixed. It is also ready
      for full integration with RDD and automatic updated like normal
      indexes. I'll add such possibilities when I'll implement triggers.
      It should be soon.

2005-04-19 14:38 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/dbdelim.prg
    * Added missing AllTrim() before processing each value.

  * utils/xbscript/xbscript.prg
    * Added support for IN, HAS, LIKE operators in NextExp()

2005-04-19 20:43 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbdefs.h
    ! fixed typo - should be USHRT_MAX not USHORT_MAX

  * xharbour/include/dbinfo.ch
    + added DBI_RM_COUNT
  * xharbour/source/rdd/dbfcdx/Makefile
    * minor modification to avoid passing -DHB_SIXCDX twice

  * xharbour/source/rdd/dbfcdx/dbfcdx0.prg
    * added 'init' to SIXCDX register procedure - it's not standard
      RDD and VM will not register it automatically.

  * xharbour/source/rdd/dbffpt/dbffpt1.c
    ! fixed bug when using codepage translation and the empty string
      is passed as field value
  * xharbour/source/rtl/gtwin/gtwin.c
    * cover the ASM and inp()/out() instructions for TONE by HB_ARCH_32BIT
      macro.
      Paul this code:
         /* If Windows NT or NT2k, use wNtTone, which provides TONE()
            reset sequence support (new) */
         else if( s_osv.dwPlatformId == VER_PLATFORM_WIN32_NT )
      should be IMHO replaced by simple:
         else
      to avoid future modifications for new Windows version. Beep()
      is documented MSWin API function. Only on Win9x/ME it ignores
      given parameters so only this platforms should be explicitly
      served by gt_w9xTone() other should use: gt_wNtTone()
      If I'm right can you change it in the nearest commit you will
      make?

2005-04-18 20:40 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/bin/pack_src.sh
    * small modification in packing external RDD drivers

  * xharbour/source/rtl/is.c
    * minor modification use hb_parc() instead of hb_parcx() - this
      code was designed to work with hb_parc and checks for NULL value

  * xharbour/include/hbdefs.h
    + added new macro: HB_MACRO2STRING() which converts defined macro
      to string value. F.e.:
         #define HB_SOME_SWITCH  SOME_VALUE
         char * szSomeValue = HB_MACRO2STRING( HB_SOME_SWITCH );
      szSomeValue is initialized with "SOME_VALUE"

  * xharbour/source/rdd/dbfcdx/Makefile
  * xharbour/source/rdd/dbfcdx/dbfcdx0.prg
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    + added compile time macro HB_SIXCDX which builds DBFCDX in SIX
      compatible mode - generated RDD name is "SIXCDX" - it is less
      efficient then standard mode but it's a work around for some of
      SIX bugs - it alows to share CDX indexes with SIX. I do not suggest
      to use "SIXCDX" as default. It's only for compatibility with Clipper
      SIX3 driver when it shares indexes with xHarbour application.
      With standard DBFCDX SIX3 GPFs on compressed trailing spaces in
      the key values. To create "SIXCDX" you have to set HB_SIXCDX.
      You can make it by -DHB_SIXCDX compiler switch. For GNU make
      it's enough to set environment variable HB_SIXCDX=yes

>>>>>>> 1.4114
2005-04-18 13:30 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * source/rtl/gtwvt/gtwvt.c
  * contrib/gtwvw/gtwvw.c
  * contrib/gtwvw/doc/whatsnew.txt
    ! hb_wv*_gtSetFont() gave wrong return value when it failed.

2005-04-18 11:40 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * source/rtl/gtwvt/gtwvt.c
    ! uncomment hb_wvt_gtValidWindowSize() in hb_wvt_gtSetFont()
      so that wvt_setfont() will fail when it should.

2005-04-16 21:20 UTC-3 Marcelo Lombardo <marcelo@xharbour.com.br>
  * source/rtl/hbsrlraw.c
    ! Fixed HB_Serialize( ALIAS->MEMO_FIELD )

2005-04-16 02:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/Makefile
    + added dbdelim.prg

  * xharbour/include/dbinfo.ch
    + added some DBI_RM_* actions for dbInfo. It's a initial job
      to give some basic common to RDD record map filters interface
      this is work in progress and it can be changed in the future

  * xharbour/source/rdd/workarea.c
    + added DBI_RM_SUPPORTED to WA info method (returns FALSE by default)

2005-04-15 15:28 UTC-0800 Augusto Infante <august@xharbour.com>
  * contrib/rdd_ads/adsmgmnt.c
    + HB_FUNC( ADSMGKILLUSER )
    + HB_FUNC( ADSMGGETHANDLE )
      Will Return Mg. connection handle to avoid reconnecting the same user
      i.e.
      IF AdsMgGetHandle() == 0
         AdsMgConnect()
      ENDIF

2005-04-15 20:00 UTC+0200 Pavel Tsarenko <tpe2@mail.ru>
  * contrib/rdd_ads/adsfunc.c
    * type cast and warning cleanup

2005-04-14 21:14 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/ppcore.c
    ! Fixed WorkMarkers() to NOT accept expression to the left of a matched stopper
      if the matched stopper is the 2nd. char of a 2 chars operator.

2005-04-14 18:20 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/arrayshb.c
    + Added support for optional 4th argument <lDoubleQuoteOnly> to HB_aTokens()
  * source/rtl/dbdelim.prg
    * Corrected call to HB_aTokens() to pass 4th argument as .T. so only "" are processed as strings.

2005-04-14 17:17 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/ct/screen3.prg
    + Added SaveCursor() and RestCursor()
      /* Please review, based only on documentation - I never used these functions. */

  * utils/xbscript/xbs_harb.ch
    * Synched with changes in genc.c

2005-04-14 19:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * in indexing set starting record if not given by user to current
      record

2005-04-14 07:50 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * hrbdll.vc
    * fixed CLEAN option.
    * (I can't check other makefiles at the moment)

2005-04-14 14:45 UTC+0300 Mindaugas Kavaliauskas <dbtopas at @ at dbtopas.lt>
  * xharbour/contrib/rdd_ads/adsfunc.c
    + Added AdsDirectory(), AdsCheckExistence() and AdsDeleteFile(). Usefull
      for managing server side temporary files. Connection should be
      established to use these functions.

2005-04-14 02:14 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbapi.h
  * source/vm/garbage.c
    + Added: BOOL hb_gcSetCollecting( BOOL bCollecting ) to set and retrieve prvious status.

  * source/vm/classes.c
    + Added logic to DISABLE the GC before performing a Class Destructor.

   /*
      This fixes a GPF trap if the destructor has a WAIT STATE which then calls GC.
    */

2005-04-13 22:57 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rdd/dbcmd.c
  * source/rtl/dbdelim.prg
    * Reverted to use prg code for __dbDelim
    + Added prg level AppendToDb()

  * hrbdll.bc
  * hrbdll.vc
  * makefile.bc
  * makefile.nt
  * makefile.vc
    * Added source/rtl/dbdelim.prg

  /* NOTE: Other make files should be updated. */

2005-04-14 11:25 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/rdd/dbcmd.c
    ! fix bugs in __DBDELIM when appending from large textfile due to
      accumulation of array which may exceed memory buffer.
      This is a temporary solution until RDDSDF is implemented.

  * source/rtl/fparse.c
    ! make function file_read()  public.

  * include/hbapi.h
    + #define HB_ITEM_NEW(hb)  HB_ITEM hb = HB_ITEM_NIL for short cut.
      IMO, it is more efficient than writing:
      .-----
      | HB_ITEM hb;
      | (&hb)->type = HB_IT_NIL;
      `-----
      and also, avoid overlook in "NIL-ing" HB_ITEM before usage.

  * source/compiler/genc.c
    ! some fixes on writing symbol entries. The following codes generate
      incorrect C output:
      .----------
      | PROCEDURE MAIN()
      |    TEST()
      |    RETURN
      |
      | #pragma begindump
      | #include "hbapi.h"
      | HB_FUNC( TEST ) {}
      | #pragma enddump
       `---------

2005-04-14 04:05 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/common/hbstr.c
    ! bug fix on hb_stripOutComments() -> pointer not moved after
      finding '/*' instance.

2005-04-12 13:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/vm/runner.c
    * fixed stupid typo in the temporary hack I added

2005-04-11 15:37 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * xharbour/source/vm/dynsym.c
    * Minor restructure to simplify debuging of rejected, and cloned symbols.

2005-04-11 13:34 UTC-0500 Vicente Guerra <vicente@guerra.com.mx>
  * source/vm/macro.c
    ! Fixed double release of an invalid macro in hb_macroCompile().

2005-04-11 00:46 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    * Fix to WideToAnsi() when converted string is empty or invalid.

2005-04-10 18:51 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/compiler/harbour.sly
    * Silly typo.

2005-04-11 03:40 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/compiler/genc.c
  * xharbour/source/compiler/genhrb.c
  * xharbour/source/compiler/harbour.c
  * xharbour/source/vm/hvm.c
  * xharbour/source/vm/runner.c
    * cleaned a little bit generated symbol scope values and fixed
      the problem with calling methods in HRB files

  * xharbour/source/vm/dynsym.c
    * enabled the runtime symbol scope checking and cloning if necessary
      symbols generated by compiler are still wrong for methods and aliases

  * xharbour/source/vm/hvm.c
    + added a small debug code to see which symbols are still wrongly
      registered - disabled by default. As far as this will not have
      been fixed in compiler the runtime hack in dynsym.c should be
      active

  * xharbour/source/vm/extend.c
    ! fixed hb_retPtr[GC] declaration

2005-04-10 14:26 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/compiler/harbour.sly
    * Correction to recent optimization in offset calculation for HB_P_PUSHSYM,
      vs. HB_P_PUSHSYMNEAR in CATCH generation.

2005-04-10 12:17 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbapirdd.h
  * source/rdd/dbcmd.c
    * Corrected usage of HB_EXPORT with compounded types.

  * source/compiler/harbour.sly
    ! Fixed and optimized handling of ErroBlock() reset in CATCH clause.

2005-04-09 19:00 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbapirdd.h
  * xharbour/source/rdd/dbcmd.c
    + added hb_rddAllocWorkAreaAlias() function which should be
      used in RDD instead of calling hb_dynsymGet(),... which was
      not MT safe and moved the VM/RDD internals to RDD code.
      This is only partial modification. In the full solution
      RDD should call SUPER_OPEN() which will make all necessary
      sets for xHarbour VM and RDD should not know anything about
      it. I'll implement it soon.
    * strip leading spaces from given alias expression and use
      the same rules for alias IDs as for other symbols (cut at
      first space) - Brian I remember about the problems with
      bad ID field names but before we implement sth we should
      clean current code to know any bad side effects.

  * xharbour/contrib/rdd_ads/ads1.c
  * xharbour/contrib/rdd_ads/adsfunc.c
  * xharbour/source/rdd/dbf1.c
    * use hb_rddAllocWorkAreaAlias()

  * xharbour/source/common/hbstr.c
    ! fixed space triming in hb_strncpyUpperTrim() and hb_strncpyTrim()
      when the given source string was longer then destination buffer
      and has internal spaces at the destination buffer size.

  * xharbour/source/rdd/workarea.c
    ! fixed GPF when closing WA without atomAlias set

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * make the tag selecting SIX compatible. First it was COMIX
      compatible: for functions which uses <xTag>, <cBag> as parameter
      when <xTag> was numeric the <cBag> was always ignore.
      Then I was trying to mix it with SIX and support both syntax
      but it does not make sense and simply reduce the flexibility
      of using ord*() functions for user. The SIX syntax is much better
      and the COMIX/CL5.3 is wrong.

2005-04-08 17:05 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * contrib/htmllib/include/Makefile
    ! Fixed a silly typo of mine.

2005-04-08 14:50 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * source/debug/debugger.prg
    ! Save and restore application's libct window coordinates.

2005-04-07 20:24 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * utils/xbscript/xbscript.prg
  * utils/xbscript/xbs_harb.ch
    * Synched with latest modifications to gen.c and runner.c

2005-04-08 03:25 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * make_tgz.sh
    ! Fixes for DJGPP.
  * contrib/htmllib/Makefile
  + contrib/htmllib/include/Makefile
    ! Headers and libraries need to be installed from different Makefiles.
      You can't include both lib.cf and header.cf (which was a long
      persisting bug here).

2005-04-07 14:45 UTC+0700 Budyanto Dj. <budyanto@centrin.net.id>
  * contrib/gtwvw/gtwvw.c
    ! bugfix:: gt_Puts(): truncate a too long string in case of MainCoord Mode.
  * contrib/gtwvw/doc/whatsnew.txt
    + records of recent changes.

2005-04-07 04:15 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/compiler/genc.c
  - tests/hello1.prg
  - tests/hello2.prg
  - tests/hello3.prg
  - tests/hello4.prg
  - tests/hello5.prg
  - tests/hello6.prg
  - tests/hello7.prg
  - tests/hello8.prg
  - tests/hello9.prg
  - tests/global3.prg
  - tests/global4.prg
  * tests/inline_c.prg
    - remove improper manipulation of c dump areas

2005-04-06 17:45 UTC+0300 Mindaugas Kavaliauskas <dbtopas at @ at dbtopas.lt>
  * xharbour/source/vm/hvm.c
  * xharbour/source/vm/extend.c
  * xharbour/source/vm/itemapi.c
    * treat one character strings as UNSIGNED numbers

2005-04-06 14:45 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/vm/hvm.c
    * commented active TraceLog()s

  * xharbour/include/hbapi.h
  * xharbour/include/hbvmpub.h
  * xharbour/source/vm/dynsym.c
    ! fixed the problem with conflict of SYM_ALLOCATED and HB_FS_PCODEFUNC
      which can cause GPF at runtime.
      Anyhow I would like to notice that in generated pcode only the
      following bits should be set: HB_FS_STATIC, HB_FS_INIT, HB_FS_EXIT
      All other things are redundant and not necessary. At runtime we need
      only two additional flags: HB_FS_PCODEFUNC, HB_FS_ALLOCATED.
      That's all. The startup symbol registration procedure should only
      register symbols in dynamic symbol table if they are not:
         HB_FS_STATIC | HB_FS_INIT | HB_FS_EXIT
      Setting HB_FS_FIRST also doesn't make sense because we have to
      set it in all compiled modules when we do not know the linking
      order. Just simply it should be detected at runtime (what is
      even already done) and we do not need HB_FS_FIRST for this job.
      I want to make it soon.

  * xharbour/source/rdd/workarea.c
    * check in SELF_EVAL() method for hb_vmRequestQuery() to detect
      'break/recover' in process

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * enable key macros for LE machines

2005-04-06 12:45 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/odbc/odbc.c
    ! casting for __DMC__

  * include/hbsetup.h
    ! restore deleted define for __DMC__

2005-04-06 00:40 UTC-3 Marcelo Lombardo <marcelo@xharbour.com.br>
  * include/hbdefs.h
    + Added new HB_PCODEFUNC structure
  * include/hbvmpub.h
    ! HB_SYMBOLSCOPE changed from char to SHORT
    + Added function scope 9th bit HB_FS_PCODEFUNC
  * source/vm/runner.c
    ! Removed all ASM patch from HRB files load and added pCode
      and symbols structure pointer to symbol.value.pFunPtr
    ! Fixed statics initialization to avoid direct pFunPtr()
      call
  * source/vm/hvm.c
    + Added hack in function call and vmSend to check scope for
      HB_FS_PCODEFUNC and make direct call to hb_vmExecute()

2005-04-06 09:10 UTC+0700 Andi Jahja <andijahja@xharbour.com>
  * source/compiler/genc.c
    * simplification of some sub routines
    + code generation for GLOBAL [EXTERNAL] declared in dump areas

  + tests/global3.prg
  + tests/global4.prg
    * test program for the above changes

2005-04-06 00:20 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/xharbour.spec
    * updated version number

  * xharbour/include/hbcomprs.h
  * xharbour/include/hbsetup.h
    * some minor cleanups for XCC

  * xharbour/source/rtl/filesys.c
  * xharbour/source/compiler/genc.c
    * casting

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * minor modification in detecting bad expressions

  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
    ! accept not full memo block - it's necessary for Clipper compatibility.

2005-04-05 16:50 UTC+0300 Mindaugas Kavaliauskas <dbtopas at @ at dbtopas.lt>
  * xharbour/config/w32/gcc.cf
  + xharbour/config/w32/gpp.cf
    + added GNU make file for GCC in C++ mode (g++)
      to eliminate synchronization of two files in the future I made
      a small trick and gpp.cf include gcc.cf which is still the base one
      (This is clone of last Przemyslaw's change. Adapted for Windows OS)

2005-04-05 15:40 UTC+0100 Maurilio Longo <maurilio.longo@libero.it>
   * source/tip/popcln.prg
     ! fixed an error of mine inserted into method ::Retrieve() a long
       time ago causing ::bEof to have a wrong value.

2005-04-05 03:50 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/config/linux/gcc.cf
  + xharbour/config/linux/gpp.cf
    + added GNU make file for GCC in C++ mode (g++)
      to eliminate synchronization of two files in the future I made
      a small trick and gpp.cf include gcc.cf which is still the base one

2005-04-05 02:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/odbc/odbc.c
    * casting

  * xharbour/source/rdd/dbf1.c
    * keep 64bit looking cover by #ifndef HB_LONG_LONG_OFF

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed typo in scope key len
    * minor modification in retrieving pArea->valResult

  * xharbour/source/vm/runner.c
    ! always call static/global initialization just after module is loaded
    + call init functions in __HRBLOAD(), additional parameters in this
      function is passed to init funcs
    + call exit functions before module is unloaded

2005-04-04 10:48 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/tobject.prg
    - Removed left-over debug message

2005-04-03 22:54 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/errorapi.c
    * Corrected ProcName() and ProcLine() reporting for messages to non objects type.

  * source/rtl/terror.prg
    * Added GenCode as optional 2nd argument to ErrorNew().
    * Added ProcName and ProcLine as optional additional arguments to ErrorNew()

  * source/rtl/tobject.prg
    * Corrected error reporting of source origination in ::Error() called ::MsgNotFound()
    * Removed unused arguments in ::MsgNotFound()

  * source/rtl/cstr.prg
  * source/rtl/dbedit.prg
  * source/rtl/readline.c
  * source/rtl/stream.prg
  * source/rtl/tclass.prg
    * Corrected calls to ErrorNew() to pass 0 as added GenCode argument

2005-04-03 20:00 UTC+0200 Pavel Tsarenko <tpe2@mail.ru>
  * contrib/rdd_ads/ads1.c
    ! type cast

2005-04-03 04:10 UTC+0700 Andi Jahja <andijahja@xharbou.com>
  * source/compiler/harbour.c
    * minor updates on processing script file:
      ! compiles long file name inside quotes eg. "my program ver 1.prg"
      ! compiles more than one file when a line contains more than one input
        files in a row, separated by white space or a comma.
      ! honor comments started with '#'
      Reminder: script file processing is different with Clipper who processes
      the listed files into a single object; harbour processes it into
      individual c outputs.

  * include/hbdefs.h
    + new macros:
      * HB_FUNC_INITGLOBAL == static HARBOUR hb_INITGLOBALS( void );
      * HB_FUNC_REGISTERGLOBAL == static HARBOUR hb_REGISTERGLOBALS( void );

  * source/compiler/genc.c
    * fixed doubly assigned HB_FS_FIRST on starting procedure when
      there is no prg module in a file.
    * apply usage of new macros

2005-04-02 08:45 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/harbour.c
    * reversals due lisencing issue

2005-04-02 08:35 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * makefile.bc
  * makefile.dc
  * makefile.gc
  * makefile.pc
  * makefile.wc
  * hrbdll.bc
  * hrbdll.dc
  * hrbdll.gc
  * hrbdll.pc
  * hrbdll.vc
  * hrbdll.wc
  - source/compiler/xharbour.prg
    * reversals due lisencing issue

2005-04-02 07:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * utils/xbscript/xbscript.prg
  * source/compiler/genc.c
    ! allow static function as application startup unless
      HB_NO_STATIC_FUNC_START is defined when building the compiler.

2005-04-02 03:15 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/common/hbstr.c
    * minor correction

  * source/compiler/genc.c
  * source/compiler/harbour.slx
  * source/compiler/harbour.c
    * error trap /* */ now only applicable to pure prg codes

  * source/compiler/hbslex.c
    * touched

2005-04-01 20:00 UTC+0200 Pavel Tsarenko <tpe2@mail.ru>
  * contrib/rdd_ads/ads1.c
    ! Fixed memo fields conversion for oem charsets

2005-04-01 19:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/make_rpm.sh
    + added automatic version update in xharbour.spec file before
      RPM is created - it will work though it will be nice if Linux
      developers will remember to commit updated xharbour.spec file
      in next release

2005-04-01 18:15 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/make_rpm.sh
    ! fixed small typo: should be x11 instead of X11

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed reporting informations about orders when out of scope
      order given

2005-04-01 00:06 UTC-0600 Vicente Guerra <vicente@guerra.com.mx>
  * source/rtl/tbrowse.prg
    ! Fixed cell repaint when ::ColorRect() is used.

2005-03-31 19:57 UTC-0600 Vicente Guerra <vicente@guerra.com.mx>
  * source/rtl/teditor.prg
    ! Fixed cursor position when it changes but no refresh needed.

2005-03-31 17:17 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * xharbour/utils/hbmake.prg
  * xharbour/utils/pickarry.prg
    ! Version 1.143 - Fixed a bug that was duplicating lines after
      select one prg in list with fews prgs.

2005-04-01 02:45 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  + source/compiler/xharbour.prg
    * PRG level compiler program using xharbour.dll

  * source/compiler/harbour.c
    * minor changes to make it possible to create compiler functionalities
      in DLL format

  * make_w32.bat
  * makefile.wc
  * dll_w32.bat
  * hrbdll.wc

  * make_b32.bat
  * makefile.bc
  * dll_b32.bat
  * hrbdll.bc

  * make_gc.bat
  * makefile.gc
  * dll_gc.bat
  * hrbdll.gc

  * make_dc.bat
  * makefile.dc
  * dll_dc.bat
  * hrbdll.dc

  * make_pc.bat
  * makefile.pc
  * dll_pc.bat
  * hrbdll.pc

  * dll_vc.bat
  * hrbdll.vc
    + creation of xharbour.dll, xHarbour compiler in DLL format
    + creation of xharbour.exe, PRG level xHarbour compiler
    + creation of xharbourdll.exe, PRG level xHarbour compiler

2005-03-31 12:31 UTC-0600 Vicente Guerra <vicente@guerra.com.mx>
  * ./hrbdll.bc
  * source/rdd/dbfntx/dbfntx1.c
    ! Fixed typos reported by Pavel Tsarenko.

2005-03-31 10:21 UTC-0600 Vicente Guerra <vicente@guerra.com.mx>
  * source/rtl/achoice.prg
    ! Fixed missing assignation for detect array size change. Thanks
      to Jorge Dreher.

2005-03-31 21:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  + include/hbexemem.h
    * definitions of memory routines dedicated to compiler creation

  * include/hbexpra.c
  * include/hbexprb.c
  * include/hbexprc.c
  * source/common/expropt1.c
  * source/common/hbfsapi.c
  * source/common/hbgete.c
  * source/common/hbhash.c
  * source/common/hbstr.c
  * source/common/hbver.c
  * source/pp/ppcore.c
  * source/pp/pragma.c
  * source/compiler/calconst.c
  * source/compiler/cmdcheck.c
  * source/compiler/genc.c
  * source/compiler/hbident.c
  * source/compiler/hbpcode.c
  * source/compiler/gencobj.c
  * source/compiler/genobj32.c
  * source/compiler/harbour.c
  * source/compiler/harbour.slx
  * source/compiler/harbour.sly
    + include "hbexemem.h" to enable to force compiler functions
      to explicitely use its own hb_xgrab, hb_xfree and hb_xrealloc.

2005-03-31 00:08 UTC-0600 Vicente Guerra <vicente@guerra.com.mx>
  * ./hrbdll.bc
  * ./hrbdll.dc
  * ./hrbdll.gc
  * ./hrbdll.pc
  * ./hrbdll.vc
  * ./hrbdll.wc
  * ./makefile.bc
  * ./makefile.dc
  * ./makefile.gc
  * ./makefile.nt
  * ./makefile.pc
  * ./makefile.vc
  * ./makefile.wc
  * source/rtl/Makefile
  * source/rtl/set.c
  + source/rtl/readexit.c
  + source/rtl/readins.c
    * Moved ReadExit() and ReadInsert() functions from set.c to
      separate files.

2005-03-31 05:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/contrib/rdd_ads/ads1.c
  * xharbour/contrib/rdd_ads/adsfunc.c
    * formatting and warning cleanup

  * xharbour/include/ct.h
  * xharbour/include/hbapi.h
  * xharbour/include/hbapierr.h
  * xharbour/include/hbapiitm.h
  * xharbour/include/hbapilng.h
  * xharbour/include/hbdate.h
  * xharbour/include/hbstack.h
  * xharbour/source/ct/ctc.c
  * xharbour/source/rtl/dates.c
  * xharbour/source/vm/errorapi.c
  * xharbour/source/vm/extend.c
  * xharbour/source/vm/fastitem.c
  * xharbour/source/vm/itemapi.c
    * the 'char *' parameters in hb_itemPutC[L], hb_itemPutDS, hb_retc[len],
      hb_retds(), hb_errPut*, hb_errRT_*, hb_dateEncStr converted to
      'const char *' to avoid unnecessary casting in C++ mode. Please
      always use 'cons char *' instead of 'char *' when you are 100%
      sure it is really constant.
    + added hb_pardl() and hb_stordl()

  * xharbour/include/hbapirdd.h
    * some (commented out yet) new fields in RDD structures

  * xharbour/include/hbdbf.h
    * extended field structure for autoincrement, nullable and system
      columns

  * xharbour/include/hbdefs.h
    + added HB_INIT_FUNCNAME()/HB_EXIT_FUNCNAME()
      HB_INITSTATICS_FUNCNAME()/HB_FUNC_INITSTATIC() macros
      to keep all function name definitions/declarations in one place
      for easier modifications.
    * some small fixes to avoid multiple extern declarations

  * xharbour/include/hbmath.h
    * use math exception for __WATCOMC__ also is standard C mode

  * harbour/include/hbvm.h
  * harbour/source/vm/hvm.c
    + added hb_vmEvalBlockOrMacro() - I cannot say I like it but RDD
      expensively use such code to reduce the overhead with execution
      codeblok created from compiled macros so I prefer to keep it
      here as far as we do not have nicer solution.
    * changed 'char *' to const 'char *' in hb_vmPushString()

  * xharbour/include/hbrdddbf.h
  * xharbour/include/dbinfo.ch
    * initial support for encryption

  * xharbour/include/hbrddcdx.h
  * xharbour/include/hbrddntx.h

  * xharbour/include/hbcomp.h
  * xharbour/source/compiler/genc.c
  * xharbour/source/compiler/harbour.c
    * divide symbols for functions and others - it's Clipper compatible
      and resolves the problem of registering static functions in dynamic
      symbol table. It's exactly the same what Ryszard done recently in
      Harbour.

  * xharbour/source/rdd/dbcmd.c
    * some minor modifications and cleanup in ORDCONDSET()/DBUSEARE()/
      DBUSEARED() - DBUSEARED() will be removed soon.

  * xharbour/source/rdd/dbf1.c
    * initial support for encription
    * add table extension (.dbf) in OPEN() method - it will be soon removed
      from DBUSEAREA()
    + added DBI_DB_VERSION/DBI_RDD_VERSION

  * xharbour/source/rdd/workarea.c
    ! fixed typo in DBI_FCOUNT
    + added DBI_DB_VERSION/DBI_RDD_VERSION
    ! use hb_vmEvalBlockOrMacro() in EVALBLOCK() method - EVALBLOCK()
      should be able to execute objects produced by COMPILE() method.

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * many small fixes and improvements like dynamic scopes from code blocks,
      cleaned scope code - now can be fully controlled by DBOI_* interface
      so we can free the method used so far (IMHO it we badly understood
      some method names and Clipper use it for totally differ things)
      COMIX/CL5.3 compatible order of execution codeblocks in indexing.

  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
    + added DBI_MEMOBLOCKSIZE

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * in practice nearly the whole code rewritten except of indexing.
      I tried to keep working the memory indexing implemented by Alexander
      but I never used them and I cannot find any documentation about them
      so it's quite possible that I broke this code.
      The indexing will be rewritten so - it has to be done because current
      code will not work properly on nonintell machines.
      Please test. For sure I fixed many existing problems but it's a new
      code. Now DBFNTX supports most of DBFCDX features like dynamic descend
      flag (ordDescend()) and other ord*() functions (also dynamic scopes
      as codeblocks), has real seek last, etc. It should be noticeable faster
      in SHARED mode and network environment.

  * xharbour/source/rtl/hbserv.c
    ! clear sigaction structure before use to avoid unexpected problems
      with differ implementation in different systems

  * xharbour/source/rtl/minmax.c
    * use hb_retdl() to eliminate unnecessary conversions to string in and
      then to Julian's day.

  * xharbour/source/odbc/odbc.c
  * xharbour/source/rtl/console.c
  * xharbour/source/rtl/datec.c
  * xharbour/source/rtl/diskspac.c
  * xharbour/source/rtl/filesys.c
  * xharbour/source/rtl/fstemp.c
  * xharbour/source/rtl/gete.c
  * xharbour/source/rtl/isprint.c
  * xharbour/source/rtl/mlctopos.c
  * xharbour/source/rtl/mpostolc.c
  * xharbour/source/rtl/natmsg.c
  * xharbour/source/rtl/spfiles.c
  * xharbour/source/rtl/txtline.c
  * xharbour/source/rtl/gtcrs/gtcrs.c
  * xharbour/source/rtl/gtsln/gtsln.c
  * xharbour/source/rtl/gtsln/kbsln.c
  * xharbour/source/rtl/gtxvt/gtxvt.c
  * xharbour/source/rtl/gtxwc/gtxwc.c
  * xharbour/source/vm/classes.c
  * xharbour/source/vm/memvars.c
  * xharbour/source/vm/runner.c
  * xharbour/source/vm/thread.c
  * xharbour/utils/hbmake/hbmlang.c
    * casting for C++ mode - now Harbour can be compiled by G++

  * xharbour/source/vm/arrays.c
    * restored the original behavior of hb_arrayGetDL()

  * xharbour/source/vm/dynsym.c
    * fixed possible memory leak in hb_dynsymNew()
    * disable the scope checking in hb_dynsymNew()
      - I left the code covered by '#if 0' - it's quite good comment ;-)

  * xharbour/source/vm/eval.c
    + added hb_itemDoCRef() - it can execute given xHarbour function from
      C level passing chosen parameters by reference.

  * xharbour/tests/speedtst.prg
    + added to new tests to show the cost of early cloning the parameters
      passed by reference - compare it with Harbour. Ron does we really
      need it?

2005-03-31 04:10 UTC-0300 Luiz Rafael Culik<culikr at uol.com.br>
  * xharbour.spec
    ! updated version number

2005-03-31 04:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * utils/xbscript/xbscript.prg
    ! change starting procedure to 'PROCEDURE MAIN()' instead of uncommon
      (if not erroneus) 'STATIC PROCEDURE MAIN()'.

  * source/vm/extend.c
    * very bad typo in hb_parnll()

  * source/ct/settime.c
  * source/rtl/inkey.c
  * source/rtl/gtwin/gtwin.c
    * commented some unused variables

  * include/hberrors.h
  * source/compiler/harbour.slx
  * source/compiler/hbgenerr.c
  * source/pp/ppcomp.c
  * source/pp/ppcore.c
    + HB_PP_ERR_UNTERMINATED_COMMENTS
      error trap for unterminated /* */ in common PRG codes

    + HB_COMP_ERR_UNTERMINATED_COMMENTS
      error trap for unterminated /* */ in C INLINE codes

  * include/hbapi.h
  * source/common/hbstr.c
    + char *hb_stripOutComments( char* buffer ), a simple function to extract
      uncommented contents from (read) buffer.

  + tests/cmtstrip.prg
  + tests/cmtstrip.txt
    ! sample programs for hb_stripOutComments()

  * source/compiler/harbour.c
  * source/compiler/cmcheck.c
  * source/compiler/genc.c
    + more info on created C file
    * fixed "parsing" problems with HB_FUNCNAME, HB_FUNC_PTR, HB_FUNC_EXTERN
      and PHB_FUNC ( all contain 'HB_FUNC' )
    + allow creation of EXE from a PRG file which does not contain
      PRG code ( C codes only )
    + REQUEST/EXTERNAL from within dump area/inline C
    + Function address for static function is not consistently assigned.
      Ie. for static functions in PRG code, it has (PHB_DYNS) 1. However,
      if the static function is coded in C (dump area) it is a NULL.
      This is fixed now.
    + Application will now seek for the first public function exists in
      program body as program startup no matter if it is previously an
      HB_FS_FIRST or not. This in effect will not allow a static function
      becomes application startup (see utils/xbscript/xbscript.prg as sample)
      This is a departure from Clipper compatibility which assumes the
      toppest function as application startup no matter if it is a static or
      public function.  (IMO, this compatibility is no good to duplicate)

  + tests/hello1.prg
  + tests/hello2.prg
  + tests/hello3.prg
  + tests/hello4.prg
  + tests/hello5.prg
  + tests/hello6.prg
  + tests/hello7.prg
  + tests/hello8.prg
  + tests/hello9.prg
    ! sample program for changes effected per above

  + tests/inline_c.prg
    + added REQUEST/EXTERNAL statements

  * source/vm/fm.c
    ! use internal date and time functions when writing fm.log

  * include/hbdefs.h
    + definition of HB_IMPORT
    + definition of HB_FUNC_EXEC (see tests/hello8.prg for application sample)

  * makefile.dc
  * hrbdll.dc
    - -D"_MSC_VER"
    - some include directives because it is configured in SC.INI

  * contrib/gtwvw/hbgtwvw.h
    ! minor modification for __DMC__

  * include/hbsetup.h
    ! changes requires for DMC's _snprintf

  * include/hbinit.h
    ! changes requires for DMC startup codes

  * source/rtl/run.c
  * source/rtl/filesys.c
  * source/rtl/fserror.c
  * source/rtl/philes.c
    ! modifications for __DMC__

2005-03-30 12:48 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbver.h
    * Increased to 0.99.41

2005-03-24 21:51 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbver.h
    * Updated.

2005-03-24 00:00 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * makefile.nt
    - -DHB_STATIC_STARTUP

  * include/hbinit.h
    * Modified Startup code for MSVC to always be in 'C' mode unless
      over-ridden by -DHB_STATIC_STARTUP.  My appologies if this is
      an inconvenience for anyone, but it's required to maintain
      compatibility with 3rd party products.

2005-03-23 13:27 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    ! Fixed a GPF trap when OLE Server has to reallocate a string argument passed BYREF.
      /*
         Stringfwe pass in pDispParams->rgvarg[ n ].n1.n2.n3.pbstrVal
         must be a system allocated string!
       */

  * bin/pack_src.bat
  * bin/pack_bin.bat
  * include/hbver.h
    * Increased to 0.99.4

2005-03-23 20:30 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rtl/dateshb.c
    * check parameter length in STOD function to avoid
      errors reported by valgrind or similar tools and
      potential GPF.

2005-03-22 19:00 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed typo which causes index close after creation with some
      ordCondSet flag combination
  * xharbour/source/vm/garbage.c
    ! fixed reference checking for codeblock created inside object
      methods

2005-03-21 17:12 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    ! Fixed bad typo GPF trap.
    * More conservative WideToAnsi()

  * source/vm/hash.c
    ! Fixed 2 GPF traps related to calling hb_itemReleaseString() and not resetting ->type member.

  * source/vm/hvm.c
    * Comments related to hb_itemReleaseString()

  * source/vm/memvars.c
    * Well behaved reset of ->type after hb_itemReleaseString()

2005-03-21 90:30 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    * Added logic to try DISPATCH_PROPERTYPUT first if prg syntax implies assignment.

2005-03-21 00:53 UTC-0800 Brian Hays <bhays@abacuslaw.com>
  * source/rtl/win32ole.prg
    ! commented a Tracelog and fixed two typos in comments

2005-03-21 09:25 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/win32ole.prg
    ! some compiler treats NULL as (void*) 0, not 0

2005-03-20 13:39 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    * Simplified AnsiToSysString()

2005-03-20 08:06 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/ppcore.c
    ! Fixed bad typo, was missing reset of kolSquare-- for ']'.

2005-03-20 09:05 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * utils/hbtest/rt_hvma.prg
  * utils/hbtest/rt_misc.prg
    ! Len( errornew() ) is 20 in MT mode

2005-03-19 12:08 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/ppcore.c
    ! Fixed GPF trap in getExpReal()

    /*
       I belive this is maybe the trap that triggered Brian's recent hbpp/compiler oddities.
     */

2005-03-19 20:45 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/common/hbver.c
    ! correct version info of Open Watcom

2005-03-19 20:00 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/transfrm.c
    ! fix on transform(100,"9999.")

2005-03-19 07:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/ct/keyset.c
    ! missing return value on static function just added

  * source/rtl/alert.prg
    ! minor enhancements

2005-03-19 05:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * utils/hbtest/rt_hvm.prg
    + added test for 2 == 2.000 to test Przemek's hack on XCC

  * source/common/hbstr.c
    ! POCC's math problem to follow XCC

  * source/ct/keyset.c
    + KSETINS( lToggle )
    + KSETCAPS( lToggle )
    + KSETNUM( lToggle )
    + KSETSCROLL( lToggle )
      These are Windows version, work __ONLY__ with GTWVT/GTWVW/GTALLEG.
      Parameter: lToggle, logical, .T. to switch on, .F. to switch off.

  * contrib/hbzlib/zipcomp.cpp
  * contrib/hbzlib/zipnew.cpp
    ! remove unused variables

  * contrib/unicode/hbcu.c
  * contrib/unicode/hbcc.prg
  * contrib/unicode/hbcy.c
  * contrib/unicode/hbcx.c
    ! modify return value of decoding functions for easy debugging upon error

  * contrib/unicode/hbc7.c
  * contrib/unicode/hbencode.c
    ! kill warnings under MinGW32

  * tests/xhbenc.prg
    ! minor enhancements

2005-03-18 13:03 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/ppcore.c
    * Removed '|' '*' '/' '^' '%' and "->" from list of invalid startup tokens for normal Match Marker in getExpReal()
  * utils/xbscript/xbscript.prg
    * Added '/', '\', '^', '%', '>', '<' '#', '$' '?', '->', '**', '!=', '<>', '>=', '<=' as valid startup tokens

  /*
     I'm confident this Clipper behaviour is a BUG, because valid expressions
     can never start with any of those tokens, but Clipper itself exploit this
     behaviour in it's implemenatation of SAVE ALL LIKE * to ... :-(
  */

2005-03-18 13:40 UTC-0300 Mauricio Abre <maurifull@datafull.com>
  * source/rtl/ttopbar.prg
    ! Modal METHOD must always exit its execution when an item executed
      (Clipper compatibe)

2005-03-18 10:30 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com>
  * xharbour/ct/disk.c
    * Minor fix in volume function line 269, changed:
    * strnpy( sRootBuf, fname->szPath, 2) to strnpy( sRootBuf, fname->szPath, 3)
    * to add trailing backslash.

  * xharbour/tests/cttests/volget.prg, volset.prg, volser.prg
    * Minor changes in these tests to work properly with recent changes.

2005-03-18 08:05 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gtwin/gtwin.c
    * account for the rare case when resizing the screen buffer of having
    * new row < old row and new col > old col, (and variations),  yet the
    * size of the new buffer required is > size of old buffer.
    * IAE, the resizing has to be done in 2 steps.

2005-03-17 21:23 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/simplex.c
    * Added iLastToken = 0 to RESET_LEX() macro.

2005-03-17 22:00 UTC+0200 Pavel Tsarenko <tpe2@mail.ru>
  * contrib/rdd_ads/adsfunc.c
    * added: AdsCacheOpenTables() and AdsCacheOpenCursors() functions
      (for all versions Ads) and AdsCloseCachedTables() for Ads 7.x
      and above. ADS_REQUIRE_VERSION 7 must be set for the last function
  * contrib/rdd_ads/doc/en/adsfuncs.txt
    * updated documentation

2005-03-17 17:55 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbdefs.h
    ! fixed typo reported by Mindaugas

2005-03-17 17:59 UTC+0200 Mindaugas Kavaliauskas <dbtopas at @ at dbtopas.lt>
  * source/vm/hvm.c
    ! fixed bit operations on 64bit numbers on 32bit systems. Bugfix is
      proposed by Przemyslaw. Thanks.

2005-03-17 16:25 UTC+0200 Mindaugas Kavaliauskas <dbtopas at @ at dbtopas.lt>
  * source/ct/disk.c
    ! fixed C string buffer usage

2005-03-17 20:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/ct/disk.c
    + GetVolInfo() and VolSerial():
      + when no drive parameter is passed -> assumed to querry current drive.
      ! simplification of param manipulation

2005-03-17 15:40 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/hbcomprs.c
  * contrib/unicode/hbencode.c
  * contrib/unicode/hbcx.c
    ! code changes in retrieving numeric params

2005-03-16 23:01 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32prn.prg
    * Removed for the 2nd time, an unacceptable hack (__WRITE_FONT_INFO_TO_FILE__).

  /*
     Andi, please do not commit this hack again. If you experience a GPF with existing
     code, we must find the real problem and fix it. I strongly suggest you trap the GPF
     you complained about, and provide more specific info.
   */

2005-03-17 11:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * tests/xhbenc.prg
    ! file pp.prg no longer exist in tests. Copy from utils/xbscript.

2005-03-16 18:05 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/pp/ppcore.c
    * Corrected md_strAt() to ignore ',' inside {....}, <Array>[...], and (...)
      /* Needed after recent removal of [] state. */

2005-03-17 01:45 UTC-0100 Ath <Ath1 at sourceforg.net>
  * tests/tiptest/base64.prg
    * modified to allow for direct filename use in addition to
      processing stdin and stdout.

2005-03-16 21:30 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * xharbour/source/ct/disk.c
    + added volserial() function.
  * xharbour/tests/cttest/volser.prg
    + added test of volserial ct function.
      ps: this is my last post before beta 1.4 release.

2005-03-16 16:45 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/config/w32/xcc.cf
    * some minor cleanups
  * xharbour/source/common/hbstr.c
    * add hack for XCC which gives differ results for:
         (double) iVal1 / (double) iVal1
      then:
         (double) iVal1 / iVal1
      It should resolve the problem with:
         local x:=2, y:=2.000
         ? x==y
      but IMHO XCC should not behave in such way.
      This problem were reported on xharbour.builder list.

2005-03-15 05:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/harbour.slx
    ! increase HB_INLINE to HB_INLINE_MAX ( default 999 )

  * source/compiler/hbslex.c
    ! touched to force compilation of harbour.slx

2005-03-15 04:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * include/hbcomp.h
  * source/compiler/harbour.c
  * source/compiler/harbour.slx
  * source/compiler/genc.c
    ! bug fix on processing many HB_INLINEs

2005-03-15 10:01 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hbclass.ch
    * Corrected 1 matcher from <Message> to <!Message!>
  * source/pp/ppcore.c
    + Added explicit support for minimal matachers.
  * source/rtl/str2ptr.c
    + Added optional support for HB_IS_INT() and HB_IS_LONG() argument.
      ( i.e. WinAPI may forward string pointer as a WPARAM, or LPARAM argument)
  * source/rtl/win32ole.prg
    + Added hack in New() in the rare case that New() method is directed at the OLE Server itself.

2005-03-15 13:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/ct/disk.c
    ! more cast

2005-03-15 11:00 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/ct/disk.c
    ! type cast

2005-03-15 03:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/vm/thread.c
  * include/thread.h
    * make consistent function declaration for hb_threadWaitAll and
      hb_threadKillAll.

2005-03-14 12:51 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * /tests/cttest/volget.prg
  * /tests/cttest/volset.prg
    + tests of two new ct functions.

2005-03-14 12:35 UTC-0300 Eduardo Fernandes <modalsist@yahoo.com.br>
  * /utils/hbmake.prg
  * /utils/hbmutils.prg
    + Version 1.142 - added a question to force recompiling all prgs or no.
    + Start work to add Pelles C compiler, but this is still in progress.
  * /source/ct/disk.c
    + added Volume() and GetVolInfo() functions. By now, these functions are
      working only for Windows platform. The GetVolInfo() return the volume
      name of a drive. In the future this function could be enhanced to
      return a disk serial number also. If anyone want to do it...
      note: Sorry, I know that we are in bug freeze, but these functions does
      not affect the main xharbour's functionalities.

2005-03-13 16:35 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * make_tgz.sh
    ! Try harder to detect GNU tar.

2005-03-13 15:45 UTC+0300 Phil Krylov <phil a t newstar.rinet.ru>
  * make_drw.sh
    - Removed unneeded parts.
  * make_tgz.sh
    ! Fixed the installer to use /private/etc instead of /etc on Darwin.
    ! Use DarwinPorts when available on Darwin.
  * bin/hb-func.sh
  * config/darwin/gcc.cf
  * source/rtl/gtsln/Makefile
    ! Use DarwinPorts when available on Darwin.
  * bin/hb-mkslib.sh
    ! Use -single_module on Darwin.

2005-03-12 04:55 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/harbour.c
    ! pragma begindump only required to be closed by pragma enddump
      on demand upon building xHarbour with HB_FORCE_CLOSE_DUMP_AREA
      defined.

2005-03-11 06:40 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/winos.prg
  * source/rtl/winreg.prg
    ! missing PRAGMA ENDDUMP

2005-03-11 06:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/hbgenerr.c
  * source/compiler/harbour.c
  * source/pp/ppcore.c
  * source/pp/pragma.c
  * include/hberrors.h
    + error trap for unbalance PRAGMA BEGINDUMP and PRAGMA ENDDUMP

2005-03-10 18:28 UTC+0200 Mindaugas Kavaliauskas <dbtopas @ at @ dbtopas.lt>
  * contrib/rdd_ads/rddads.h
    * allow setting of ADS_REQUIRE_VERSION using compiler command line switch

2005-03-09 22:55 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * makefile.vc
  * makefile.nt
    * create an MT mode version of hbtest.exe (hbtestmt.exe)
    * minor correction to ct list and removed 1 misplaced $(MT)

2005-03-09 18:40 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/vm/hvm.c
    % Optimized hb_vmDoBlock() to use inplace evaluation instead of calling hb_codeblockEvaluate()

  * include/hbapi.h
  * source/vm/codebloc.c
    - Removed not used hb_codeblockEvaluate()
      /* This doesn't seem to be a utilized API, it used by anyone we can restore it. */

2005-03-09 17:29 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * utils/xbscript/xbscript.prg
    * Refined and more consistent PP_LocalParams() PP_Locals(), PP_Statics() PP_Params() PP_Privates() and PP_Publics()

2005-03-09 13:18 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/hberrors.h
    + Added:
      #define HB_PP_ERR_EMPTY_OPTIONAL                27
      #define HB_PP_ERR_EMPTY_REPEATABLE              28
  * source/pp/ppcore.c
    + Added detection of empty optional clause and empty repeatable group,
      and generation of respective compile error.

2005-03-09 23:00 UTC+0200 Pavel Tsarenko <tpe2@mail.ru>
  * source/ct/blank.prg
    * small changes for clipper compatibility
  * source/ct/charop.c
  * source/ct/charswap.c
  * source/ct/justify.c
  * source/ct/replace.c
  * source/ct/token1.c
    ! fixed hb_xgrab() call with zero length

2005-03-09 08:10 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * makefile.nt
    * create an MT mode version of hbtest.exe (hbtestmt.exe)

2005-03-09 19:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/hbusage.c
    ! use hb_credits() for list of contributors.

2005-03-09 14:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * include/hbapi.h
    ! file that I missed to update for my recent changes

2005-03-09 12:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  + include/hbver.ch
    ! defines for xHarbour build info

  * include/hbver.h
    + include hbver.ch

  * source/rtl/errorsys.prg
    - move HB_BUILDDATE to source/version.c

  * source/common/hbver.c
    + char *hb_credits( void ), list of developers

  * source/rtl/version.c
    + HB_BUILDINFO(), PRG level function for xHarbour build info

  * source/vm/arrays.c
  * source/vm/cmdarg.c
  * source/compiler/harbour.c
    ! neccessary modifications for build info

  + tests/bldinfo.prg
    ! test program for HB_BUILDINFO

2005-03-08 17:49 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
   * source/rtl/cstruct.prg
     ! Fix to recent modification to ::Reset() (was blanking all class data)

2005-03-08 18:45 UTC+0100 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/cstruct.prg
     ! ::Reset() method did not preserve nested structures' structure;
       just try to add an oStructure:Reset() before oStructure:SayMembers() in
       tests/tstcstru.prg to see the difference.

2005-03-07 22:30 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gtwin/gtwin.c
    * Console handle state save and restore during __run()
    * (the proper version)

2005-03-07 17:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/errorsys.prg
    ! HB_BUILDDATE() was trapped in #ifdef __PLATFORM__Windows. Fixed. :-(

2005-03-06 21:20 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gtwin/gtwin.c
    * save and restore console handle state in gt_suspend/resume

2005-03-07 06:40 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * include/set.ch
  * include/hbset.h
  * source/rtl/set.c
  * source/pp/pptable.c
  * source/rtl/errorsys.prg
  * tests/testerr.prg
    + SET ERRORLOG TO [ERRORFILE] [ADDITIVE]
      Option to direct error log to designated file name with append option

2005-03-07 04:00 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/common/hbver.c
    - comment misleading info on memory tracing and statistics on
      /BUILD info because it can only be detected on runtime.
      ( hb_xquery in harbour.c always return 0 )

2005-03-06 14:20 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * makefile.vc
  * hrbdll.vc
  * contrib\design\makefile.vc
  * contrib\hbzlib\makefile.vc
  * contrib\htmllib\makefile.vc
  * contrib\Internet\makefile.vc
  * contrib\libmisc\makefile.vc
  * contrib\libnf\makefile.vc
  * contrib\mysql\makefile.vc
  * contrib\rdd_ads\makefile.vc
  * contrib\unicode\makefile.vc
  * contrib\what32\makefile.vc
  * contrib\Whoo\makefile.vc
  * contrib\WoopGUI\makefile.vc
  * contrib\xwt\makefile.vc
  * source\rtl\gtalleg\makefile.vc
  * makefile.nt
  * contrib\what32\makefile.nt
  * contrib\Whoo\makefile.nt
  * contrib\WoopGUI\makefile.nt
  * contrib\xwt\makefile.nt
    * correct defines, compiler options and output dir in some cases.

  * source/codepage/cpeldos.c
  * source/codepage/cpelwin.c
  * source/codepage/cpesdos.c
  * source/codepage/cpesmwin.c
  * source/codepage/cpeswin.c
  * source/codepage/cpgedos.c
  * source/codepage/cpgewin.c
  * source/codepage/cphr1250.c
  * source/codepage/cphr437.c
  * source/codepage/cphr852.c
  * source/codepage/cphu852.c
  * source/codepage/cphuwin.c
  * source/codepage/cpit437.c
  * source/codepage/cpit850.c
  * source/codepage/cpitisb.c
  * source/codepage/cpitiso.c
  * source/codepage/cpltwin.c
  * source/codepage/cppl852.c
  * source/codepage/cppliso.c
  * source/codepage/cpplmaz.c
  * source/codepage/cpplwin.c
  * source/codepage/cppt850.c
  * source/codepage/cpptiso.c
  * source/codepage/cpru866.c
  * source/codepage/cprukoi.c
  * source/codepage/cpruwin.c
  * source/codepage/cpsl852.c
  * source/codepage/cpsliso.c
  * source/codepage/cpslwin.c
  * source/codepage/cpsrwin.c
  * source/codepage/cpua866.c
  * source/codepage/cpuakoi.c
  * source/codepage/cpuawin.c
  * source/codepage/cp_tpl.c
  * source/lang/msgbgwin.c
  * source/lang/msgby866.c
  * source/lang/msgbywin.c
  * source/lang/msgca.c
  * source/lang/msgcs852.c
  * source/lang/msgcsiso.c
  * source/lang/msgcskam.c
  * source/lang/msgcswin.c
  * source/lang/msgde.c
  * source/lang/msgdewin.c
  * source/lang/msgen.c
  * source/lang/msgeo.c
  * source/lang/msges.c
  * source/lang/msgeswin.c
  * source/lang/msgeu.c
  * source/lang/msgfr.c
  * source/lang/msggl.c
  * source/lang/msghe862.c
  * source/lang/msghewin.c
  * source/lang/msghr1250.c
  * source/lang/msghr437.c
  * source/lang/msghr852.c
  * source/lang/msghriso.c
  * source/lang/msghu852.c
  * source/lang/msghucwi.c
  * source/lang/msghuwin.c
  * source/lang/msgid.c
  * source/lang/msgis850.c
  * source/lang/msgit.c
  * source/lang/msgko.c
  * source/lang/msgltwin.c
  * source/lang/msgpl852.c
  * source/lang/msgpliso.c
  * source/lang/msgplmaz.c
  * source/lang/msgplwin.c
  * source/lang/msgpt.c
  * source/lang/msgro.c
  * source/lang/msgru866.c
  * source/lang/msgrukoi.c
  * source/lang/msgruwin.c
  * source/lang/msgsl852.c
  * source/lang/msgsliso.c
  * source/lang/msgslwin.c
  * source/lang/msgsr852.c
  * source/lang/msgsriso.c
  * source/lang/msgsrwin.c
  * source/lang/msgua866.c
  * source/lang/msguakoi.c
  * source/lang/msguawin.c
  * source/lang/msgzhb5.c
  * source/lang/msgzhgb.c
  * source/lang/msg_tpl.c
    * Startup code changes.
  * include/hbinit.h
    * minor formatting. Added comment to MSC section.
    * startup code return type is now int, not void.
  * source/compiler/genc.c
    * all msc startup code is the same now.

2005-03-06 13:25 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/errorsys.prg
  * include/hbapi.h
    ! move declaration of hb_builddate() to hbapi.h

2005-03-06 12:45 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/compiler/genc.c
    ! bug fix on compiling empty segment of #pragma begin/enddump

2005-03-06 10:20 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/errorsys.prg
    ! HB_BUILDDATE() to stand free for all platform

2005-03-06 07:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/vm/hvm.c
    + HB_FUNC( HB_VMMODE ), detect optimization on run time

  * tests/version.prg
  * utils/hbtest/hbtest.prg
    + info on VM optimization

  * source/common/hbver.c
    + hb_builddate(), info of harbour build date
    ! correct version info of __BORLANDC__

  * source/vm/cmdarg.c
    + info on VM optimization and MT compilation

  * source/rtl/errorsys.prg
    + print more info on error.log

2005-03-04 21:46 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * utils/xbscript/xbs_harb.ch
  * utils/xbscript/xbscript.prg
    * Added support for script procedure in ::EvalExprfession() and PP_Eval()

2005-03-04 14:56 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    ! Optimized cClassNAme in C code to use static.
    * Changed order of Invoke, to test DISPATACH_METHOD, *before* trying DISPATCH_PROPERTYGET.

2005-03-05 05:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/vm/hvm.c
    + HB_FUNC( HB_MULTITHREAD ), detect MT on run time

  * tests/version.prg
  * utils/hbtest/hbtest.prg
    + info if MT is enabled

2005-03-04 11:22 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * hrbdll.bc
    + added -Gi to Ilink when linking harbour.dll so it generates import lib,
      which is needed in subsequent targets.
  * dll_b32.bat
    ! Fixed to use copy of harbour.lib instead of implib.exe

2005-03-04 18:15 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbinit.h
    * cleaned and added #error for redundant macro settings to force
      cleaning the build environment on user side
  * xharbour/source/vm/hvm.c
    ! fixed bad typo which could cause double to integer conversion
      when default number of decimals was set to 0. F.e. after SET FIXED TO 0

2005-03-03 18:15 UTC-0800 Luis Krause Mantilla <lkrausem /*at*/ shaw /*dot*/ ca>
  * contrib/rdd_ads/make_b32.bat
    * delete rddads.bak on successful build

  * source/rtl/tget.prg
    * Minor formatting (tab chars introduced recently)

2005-03-03 12:27 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/rtl/win32ole.prg
    + Added BSTR AnsiToBSTR( char *cString )
    * Optimized using new AnsoToBSTR()

  * utils/xbscript/xbs_harb.ch
    * Minor formatting.

2005-03-03 21:15 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * hrbdll.vc
  * hrbdll.wc
  * hrbdll.gc
  * hrbdll.bc
  * hrbdll.dc
  * hrbdll.pc
  * dll_dc.bat
  * dll_b32.bat
  * dll_pc.bat
  * dll_gc.bat
  * dll_w32.bat
  * dll_vc.bat
    * move creation of harbour.dll to BIN_DIR (more appropriate)
    * create hbtestdll.exe, hbmakedll.exe, hbdocdll.exe, hbrundll.exe and
      xbscriptdll.exe to ensure that harbour.dll is created properly.

2005-03-03 04:50 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * makefile.dc
  * makefile.gc
  * makefile.pc
    * modify object file dependencies for hbodbcmt.lib

2005-03-03 03:30 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * makefile.bc
    ! _remove_ misleading creation of hbodbcmt.lib. hbodbcmt.lib _was_
      actually hbodbc.lib because it seems it cannot be compiled with MT
      under BCC. hbodbcmt.lib in previous makefile is really an unfunny
      trick (!). :-(

  * make_b32.bat
    ! dllmain.lib not erased in clean build

2005-03-02 09:35 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * makefile.bc
    * Temprarily restored to version 1.40 until Andi provide fixes.
  * source/pp/ppcore.c
    * Corrected type & paste typo, for new HAS and LIKE operators.

2005-03-02 21:20 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * makefile.bc
    ! fixing my fault in placing project entries :-(

  * source/vm/classes.c
    * comment unused hb___msgEval but declared

2005-03-01 21:53 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source\vm\classes.c
    - Commented out handling of EVENT Message fo Codeblocks.

  /*
    Eval as message is handles at the VM level.
    This fix allows claases to implement an Eval Method.
   */

2005-03-01 20:50 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/simplex.c
    + Added iLastLen to maintain length of last read buffer when not sToken.
    * Simplified rewind logic and sWord2Check logic in SimpLex_CheckWords() using new iLastLen
  * source/compiler/hbslex.c
    * Touched.

2005-03-02 09:15 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * makefile.bc
  * make_b32.bat
    ! simplification of macros and branchings

2005-03-02 04:15 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * makefile.gc
  * hrbdll.gc
    - remove HB_MATH_ERRNO flags

  * source/rtl/tget.prg
    * work around of untransform method for get picture with "@R"

2005-03-01 17:25 UTC+0100 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/math.c
     ! on OS/2 there is not isinf() but isfinite().

2005-02-28 21:27 UTC+0200 Mindaugas Kavaliauskas <dbtopas @at@ dbtopas.lt>
  + config/w32/dm.cf
  + config/w32/pellesc.cf
    + GNU make support for Digital Mars and Pelles C compilers

2005-02-28 11:27 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/simplex.c
    * Added 1 missing reset of sSelf[0].

2005-02-28 19:00 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rtl/pplib.c
  * contrib/libnf/color2n.c
  * utils/hbpp/hbpp.c
    * single-liners to conform with xHarbour coding style

2005-02-28 17:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rdd/delim1.c
  * source/rdd/sdf1.c
  * source/rdd/dbfdbt/dbfdbt1.c
  * source/rdd/dbffpt/dbffpt1.c
  * contrib/rdd_ads/ads1.c
  * source/lang/msgbgwin.c
  * source/lang/msgby866.c
  * source/lang/msgbywin.c
  * source/lang/msgca.c
  * source/lang/msgcs852.c
  * source/lang/msgcsiso.c
  * source/lang/msgcskam.c
  * source/lang/msgcswin.c
  * source/lang/msgde.c
  * source/lang/msgdewin.c
  * source/lang/msgen.c
  * source/lang/msgeo.c
  * source/lang/msges.c
  * source/lang/msgeswin.c
  * source/lang/msgeu.c
  * source/lang/msgfr.c
  * source/lang/msggl.c
  * source/lang/msghe862.c
  * source/lang/msghewin.c
  * source/lang/msghr1250.c
  * source/lang/msghr437.c
  * source/lang/msghr852.c
  * source/lang/msghriso.c
  * source/lang/msghu852.c
  * source/lang/msghucwi.c
  * source/lang/msghuwin.c
  * source/lang/msgid.c
  * source/lang/msgis850.c
  * source/lang/msgit.c
  * source/lang/msgko.c
  * source/lang/msgltwin.c
  * source/lang/msgnl.c
  * source/lang/msgpl852.c
  * source/lang/msgpliso.c
  * source/lang/msgplmaz.c
  * source/lang/msgplwin.c
  * source/lang/msgpt.c
  * source/lang/msgro.c
  * source/lang/msgru866.c
  * source/lang/msgrukoi.c
  * source/lang/msgruwin.c
  * source/lang/msgsl852.c
  * source/lang/msgsliso.c
  * source/lang/msgslwin.c
  * source/lang/msgsr852.c
  * source/lang/msgsriso.c
  * source/lang/msgsrwin.c
  * source/lang/msgua866.c
  * source/lang/msguakoi.c
  * source/lang/msguawin.c
  * source/lang/msgzhb5.c
  * source/lang/msgzhgb.c
  * source/lang/msg_tpl.c
  * source/codepage/cpeldos.c
  * source/codepage/cpelwin.c
  * source/codepage/cpesdos.c
  * source/codepage/cpesmwin.c
  * source/codepage/cpeswin.c
  * source/codepage/cpgedos.c
  * source/codepage/cpgewin.c
  * source/codepage/cphr1250.c
  * source/codepage/cphr437.c
  * source/codepage/cphr852.c
  * source/codepage/cphu852.c
  * source/codepage/cphuwin.c
  * source/codepage/cpit437.c
  * source/codepage/cpit850.c
  * source/codepage/cpitisb.c
  * source/codepage/cpitiso.c
  * source/codepage/cpltwin.c
  * source/codepage/cppl852.c
  * source/codepage/cppliso.c
  * source/codepage/cpplmaz.c
  * source/codepage/cpplwin.c
  * source/codepage/cppt850.c
  * source/codepage/cpptiso.c
  * source/codepage/cpru866.c
  * source/codepage/cprukoi.c
  * source/codepage/cpruwin.c
  * source/codepage/cpsl852.c
  * source/codepage/cpsliso.c
  * source/codepage/cpslwin.c
  * source/codepage/cpsrwin.c
  * source/codepage/cpua866.c
  * source/codepage/cpuakoi.c
  * source/codepage/cpuawin.c
  * source/codepage/cp_tpl.c
  * source/codepage/uc1250.c
  * source/codepage/uc1251.c
  * source/codepage/uc1253.c
  * source/codepage/uc1257.c
  * source/codepage/uc737.c
  * source/codepage/uc850.c
  * source/codepage/uc852.c
  * source/codepage/uc866.c
  * source/codepage/uc88591b.c
  * source/codepage/uc8859_1.c
  * source/codepage/uc8859_2.c
  * source/codepage/uckoi8.c
  * source/codepage/uckoi8u.c
  * source/codepage/ucmaz.c
  * makefile.pc
  * hrbdll.pc
    * clean up due to recent changes in initialization procedure

2005-02-28 03:10 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * xharbour/include/hbinit.h
    * simplified the startup code definitions:
       HARBOUR_STRICT_ANSI_C // disable any startup code
       __GNUC__              // use GCC constructor function attribute
       HB_STATIC_STARTUP     // which means C++ initialization default for
                             // __cplusplus mode
       HB_PRAGMA_STARTUP     // which means #pragma startup initialization
       HB_MSC_STARTUP        // which means MSC #pragma initialization
                             // for standard C mode (C++ not detected)

  * xharbour/include/hbmath.h
    * do not use HB_MATH_HANDLER as default for MINGW as far as we won't
      have found why it does not work correctly.

  * xharbour/include/hbrddntx.h
    * some modification for new DBFNTX I'm workin on

  * xharbour/include/hbsetup.h
    * added auto detection for LINUX, SUNOS and HPUX - this code
      should also be cleaned to give deterministic results

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * some minor modifications
    ! fixed counting EOF and other "out of scope" records in ordKeyPos()
    ! disable extended filters when indexing with WHILE/REST/USECURRENT
      flags.

2005-02-28 04:25 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/vm/maindll.c
  * source/vm/maindllh.c
  * source/vm/maindllp.c
  * include/hbvm.h
    * do not hard code compiler specific defines in program files.

2005-02-27 09:10 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * hrbdll.bc
    * Fixed typo (util.obj) was grouped with ADS fils in condition.

2005-02-27 08:50 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * source/compiler/harbour.sly
    ! Fixed compilation of LOOP statment within SWITCH constructs.

2005-02-27 21:10 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * contrib/gtwvw/gtwvw.c
  * source/rdd/dbcmd.c
    * some files i overlooked for the recent changes

2005-02-27 15:00 UTC+0200 Pavel Tsarenko <tpe2@mail.ru>
  * contrib/rdd_ads/adsfunc.c
    * Type cast correction to MSVC on my previous commit

2005-02-27 18:35 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/rdd/dbf1.c
  * source/rdd/sdf1.C
  * source/rdd/delim1.c
  * source/rdd/dbfcdx/dbfcdx1.c
  * source/rdd/dbffpt/dbffpt1.c
  * source/rdd/dbfntx/dbfntx1.c
  * source/rdd/dbfdbt/dbfdbt1.c
  * contrib/rdd_ads/ads1.c
  * source/rtl/gtwin/gtwin.c
  * source/compiler/genc.c
  * source/rtl/cdpapi.c
  * source/rtl/gtwvt/gtwvt.c
  * source/rtl/gtcgi/gtcgi.c
  * source/rtl/gtstd/gtstd.c
  * source/rtl/gtpca/gtpca.c
  * source/rtl/gtnul/gtnul.c
  * source/rtl/gtalleg/gtalleg.c
  * include/hbinit.h
    * move initialization for __DMC__ to hbinit.h
    + HB_CPP_STARTUP, to write initialization of CPP the common way
    + HB_MSC_STARTUP, to write initialization of MSVC the current way

2005-02-23 23:30 UTC+0200 Pavel Tsarenko <tpe2@mail.ru>
  * contrib/rdd_ads/ads1.c
  * contrib/rdd_ads/adsfunc.c
    * added necessary string conversion for filter expressions and
      sql statements for console applications, which used oem charset
  * source/codepage/cpru866.c
  * source/codepage/cprukoi.c
  * source/codepage/cpruwin.c
    * added 4 additional characters
  * hrbdll.bc
    * added (optional) multi-gt capabilities and rdd_ads

2005-02-27 14:35 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * include/hbdefs.h
  * utils/hbtest/rt_ccall.prg
    * simplification of LL number representation.

  * utils/xbscript/xbs_harb.ch
    * single-liners to be in accordance with xHarbour coding style

2005-02-26 21:49 UTC-0800 Ron Pinkas <Ron in xHarbour.com>
  * include/simplex.c
    + Added support for optionsal White Space predefined match pattern ?WS?
    + Added support for Delimiters and Self Contained tokens to be matched as literals within coumpunded words.
  * source/compiler/harbour.slx
    + Added optimized compounded words definitions, using new ?WS? matcher, and commented respective match rules.
    - Removed no longer needed hack for special tokens FIELD, QSELF, IIF and _GET_ when used as Identifers, and followed by reserved words.

  /*
     Above changes allow for much more elegant and simplified definitions, but involved complex change, that is
     very difficult to fully test. I ran as many tests as I could, including building all of our sources, as well
     as my private sources, and FWH. In the case that I get some problem reports I may have to revert these
     optimizations.
   */

  * source/pp/pptable.c
    * Corrected use of if() to IIF() to avoid extranous translations and generate better readable PPO.
  * source/pp/ppcore.c
    + Added support for IN, HAS, and LIKE as native operators, in getExpReal()

  * contrib/htmllib/include/forms.ch
    * Corrected few rules which had [IN <oForm>], since <oForm> can NOT be empty ot the production:
         <oForm>:AddControl( ... )
    will generate compile time errors (missing WITH OBJECT).

2005-02-27 03:35 UTC+0700 Andi Jahja <xharbour@cbn.net.id>
  * source/vm/errorapi.c
  * source/vm/maindll.c
  * source/vm/maindllh.c
  * source/vm/maindllp.c
    * use proper reference for trace/debug info
