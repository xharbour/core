/*
 * $Id: ChangeLog.016 9283 2011-02-14 21:32:39Z andijahja $
 */

/* Use this format for the entry headers:
   YYYY-MM-DD HH:MM UTC[-|+]hhmm Your Full Name <your_email@address>
   For example:
   2002-12-01 23:12 UTC+0100 Foo Bar <foo.bar@foobar.org>
*/

2003-09-16 00:35 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rtl/gt_tpl/gt_tpl.c
    * the order of functions changed, some small description added,
      some higher level functions implemented.
      to start new you have to define HB_GT_NAME, implement for output:
         gt_Init, gt_Exit, gt_GetScreenWidth, gt_GetScreenHeight,
         gt_SetPos, gt_Col, gt_Row, gt_xPutch, gt_Puts, gt_RectSize
         gt_GetText, gt_PutText, gt_Version
      and for input (if necessary):
         gt_ReadKey
      as a basic support. Optionaly or later you can add:
         gt_SetAttribute, gt_GetCursorStyle, gt_SetCursorStyle, gt_SetMode,
         gt_Tone, gt_ExtendedKeySupport
      and/or others if necessary

2003-09-15 21:28 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/philes.c
    + HB_OSError() to return the hard untranslated OS dependant error.

2003-09-15 20:59 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/filesys.c
    ! clipper compatibility for error reporting in fseek()
    ! Linux error 9 (bad handler) translated to dos error 6

2003-09-15 19:35 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/tests/newrdd.prg
    * change to work with new RDD
    + #define TESTED_RDD added
    ! fix to work on case sensitive file systems

2003-09-15 18:30 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rdd/dbcmd.c
    * order of some function changed

  * xharbour/source/rdd/dbf1.c
    ! fix in scope borrowed from Harbour

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * minor correction

  * xharbour/source/rdd/dbffpt/dbffpt1.c
    ! fix bug introduce by casting
    * minor correction

  * xharbour/source/rdd/dbfdbt/dbfdbt1.c
    * minor correction

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! last fixes from Harbour

2003-09-15 08:39 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rtl/tget.prg
    + Added reset of ::Type in ::VarGet()

2003-09-15 00:26 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * hrbdll.bc
  * hrbdll.vc
    + source/rtl/strdel.c

2003-09-15 00:25 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/rtl/tget.prg
    ! Minor bug in Setfocus.

2003-09-14 22:35 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/hbcrypt.c
    - local decl of Adler32()
    + #include "hbcompress.h"
  * source/rtl/hbchecksum.c
  * source/rtl/hbcrc32.c
    + #include "hbcompress.h"
  * tests/testzip.prg
    * allow to skip the floppy part of the test.
    * other minor changes.
  * contrib/hbzlib/ziparchive.cpp
    + #include "hbcompress.h"
  * contrib/hbzlib/include/hbz.h
    ! added closing } and #endifs
  * contrib/hbzlib/include/unzip.h
  * contrib/hbzlib/include/zip.h
    * move #include outside of _cplusplus block

2003-09-14 19:00 UTC-0300 Luiz Rafael Culik<culikr@uol.com.br>
  * tests/testzip.prg
    ! Added examples on how to compress to floppy/zip media disk

2003-09-14 13:42 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
   * source/vm/errorapi.c
     ! Fixed GPF trap when error is launced from an EXIT procedure.

2003-09-14 20:10 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
   * include/hbapifs.h
   * include/thread.h
   * source/vm/thread.c
   * source/vm/memvars.c
     + Added hb_fsOsError() that return os-specific error code;
       now fsError and fsSetError() are meant to set dos-based
       error code.
       TODO: Abstract error code; error messages; harbour interfaces
       to low level hb_fsOsError function.

   * source/vm/memvars.c
     ! using now fixed memory allocation to create thread specific names for
       memvars


2003-09-14 04:55 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * test/testzip.prg
    * changed so that gauges always show up in the same order.
  * include/hbcompress.h
    * put all function decls together.
    * localized __cplusplus check.
  * source/rtl/gtwin/gtwin.c
    * changed cursor size back to 25 from 12.
    * if you want to change the cursor management, let's chat first.
  * contrib/hbzlib/zip.c
    * changed name of HB_GETUNZIPFILE to HB_GETFILECOUNT
  * contrib/hbzlib/zipmemfile.cpp
    * removed hb_api.h - I can't see that it does anything.

2003-09-13 19:00 UTC-0300 Luiz Rafael Culik<culikr@uol.com.br>
  * tests/testzip.prg
    ! Demostrate of file progress Gauge added

2003-09-13 19:00 UTC-0300 Luiz Rafael Culik<culikr@uol.com.br>
  * include/hbcompress.h
    ! re enable the #ifdef __cplusplus section, otherwise hbzip wont link with borland c
  * contrib/hbzlib/makefile.bc
    ! fixed some errors

2003-09-13 17:50 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * makefile.bc
  * makefile.vc
  * makefile.nt
  * source/rtl/Makefile
    + Add strdel.c to list.

2003-09-13 17:40 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/rtl/dateshb.c
    ! Fix minor bug in CTOD() with incorrect input string.
      Ex: CTOD( "01-01-2000 10-10-2000" )

2003-09-13 17:15 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/rtl/tget.prg
    ! Fix a bug to save a string longer than picture with "@R"
      Reported by Luis Krause Mantilla
    ! Fix several difference of behavior.
      1) Assign() was called in any change of the buffer.
      2) UpdateBuffer() didn't load the current state of the variable
      3) Several functions should not work if the get doesn't have the focus.
      4) Many others fixes for new and more "Cli**er" behavior.
   * source/rtl/tgetlist.prg
     ! Some fixes related to new behavior of TGet.

2003-09-13 17:00 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  + source/rtl/strdel.c
    STRDEL( cString, cMask ) -> cNewString

    <cString> is the target character string into which characters are
              deleted.
    <cMask>   is the mask charater string. Character different to space,
              indicates that the character in the same position in the
              string destination will be eliminated.

    <cString> and <cMask> can have different lenght.

    Examples:

    ? StrDel( "Hello", "x   x" )   // "ell"

    ? StrDel( "Hello", "x" )       // "ello"

    ? StrDel( "Hello", "    xxx" ) // "Hell"

2003-09-13 12:13 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/proc.c
    ! Fixed GPF trap.

  * source/vm/arrays.c
    * Minor optimization.

2003-09-13 12:00 UTC-0300 Luiz Rafael Culik<culikr@uol.com.br>
  * contrib/hbzlib/makefile.bc
    ! fixed some errors
  * contrib/hbzlib/zipmemfile.cpp
    ! fix some comp erros under bcc32

2003-09-13 00:05 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * contrib/hbzlib/include/stdafx.h
    * remove trace calls

2003-09-12 23:30 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * include/hbcompress.h
    * updated to reflect current hbzlib

2003-09-12 16:45 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * contrib/hbzlib
    * zip.c
    * Makefile
    * zipcomp.cpp
    * ziparchive.cpp
    * zipmemfile.cpp
    * zipnew.cpp
    * makefile.vc
    * makefile.bc
    * make_b32.bat
    * make_vc.bat
    ! changes all around for msvc support and to correct certain error
    ! conditions

   *   *   * output file is now hbzip.lib

  - contrib/hbzlib/zlib
    * the essential contents of this directory are now in source/rtl/hbcompress.c
    * the licence file will be updated.
  + contrib/hbzlib/include
    ! *.h has been moved into this directory
  * makallvc.bat
    + hbzlib
  + tests\testzip.prg
    * cheesy Zip archive tester.
    * this is stil WIP.
  * bin/bld.bat
    + add samples.lib

2003-09-12 08:28 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * xharbour/source/vm/proc.c
    * Fixed 2 possible GPF traps.

2003-09-12 04:26 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/memvars.c
    ! fixed windows compilation

2003-09-11 04:10 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/hvm.c
  * source/vm/memvars.c
    ! fixed memvar access under MT.

  * tests/mtstress.prg
    + added tests for memvars

2003-09-11 18:15 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * source/clipsamp/gauge.c
    * szPct buffer needs to be 5 characters, not 4

2003-09-11 21:57 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/make_rpm.sh
    + PLD distro added
    - removed Luiz hack for bug in Conectiva Linux RPM - it breaks
      compilation from non root account.
    + added other hack :-) for buggy RPM which should resolve this
      problem. Please test.

  * xharbour/make_tgz.sh
    + PLD distro added
  * xharbour/xharbour.spec
    + PLD distro added

  * xharbour/xhbgtmk.sh
    * slang_devel removed from necessary dependences, GTSLN won't
      compile on new RH with its slang-devel so we shouldn't make
      people to install it. It doesn't disable GTSLN compilation
      if proper sland-devel exists in a system

  * xharbour/source/vm/proc.c
    * strcat replaced by strncpy to eliminate GPF in my system
      when called from hb_arrayResetHolder()

2003-09-11 10:26 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/arrays.c
    + Added explicit HB_IS_MEMVAR() support to hb_arrayReleaseGarbage() utilizing hb_memvarValueDecGarbageRef()

  * source/vm/memvars.c
    + Added explict HB_IS_ARRAY() support to hb_memvarValueDecGarbageRef() utilizing hb_arrayReleaseHolderGarbage().

2003-11-09 12:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  *  xharbour.spec
    * Added Conectiva to platform detection
  * make_rpm.sh
    * Fixed when conectiva is used

2003-11-03 10:15 UTC-0300 Marcelo Lombardo <lombardo@uol.com.br>
  * source/vm/hbi18n.c
    + Added optional parameter to HB_HFIND to retrieve the hash table index
      by reference: HB_HFIND( <aHash>, <cKey>, [<@nIndex>] )

2003-09-11 15:12 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
   * utils/Makefile
   * utils/hbdict/Makefile
      ! Using standard utils makefile for linux.

   * utils/hbdict/hbdict.prg
      ! Mistype in a '<' instead of '>' caused HIT files
      to be invalid. Fixed.

2003-09-11 14:06 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
   * tests/Makefile
     ! added dbf libs

   * source/rtl/hblog.prg
     ! Was not using the program name as default log name. Fixed

   * source/vm/thread.c
     ! WaitForThreads() terminates if a thread issue a Quit() request.

   + source/rtl/hbservice.c
   + include/hbservice.ch
      + Service/signal handing multiplatform interface. Currently
         added only to linux. Windows compilation will be added
         later this evening.

   * source/rtl/Makefile
      + support for hbservice.c

   + tests/service.prg
      + a test for hbservice


2003-11-03 07:35 UTC-0300 Marcelo Lombardo <lombardo@uol.com.br>
  * source/rtl/hbcompress.c
    ! Corrected typo in HB_UNCOMPRESS parameter check

2003-09-11 11:30 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * harbour/harbour.spec
    * small fix in auto platform detection (thanks to Tomaz Zupan)
  * harbour/make_tgz.sh
    * added auto platform detection

2003-09-10 23:55 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbapi.h
  * source/vm/arrays.c
    + Added void hb_arrayReleaseHolderGarbage( PHB_BASEARRAY pBaseArray, void *pOwner );
    * Modified hb_arrayReleaseGarbage() to use hb_arrayReleaseHolderGarbage() instead of hb_arrayReleaseHolder()
      hb_arrayReleaseHolderGarbage() does not call hb_arrayReleaseBase() even for last Owner to avoid Cyclic issues.
      like premature release of a block refernced by an element, which is already scheduled for removal by the GC.

  * source/vm/estack.c
    * Added commented debuging TraceLog() calls.

  * source/vm/hvm.c
    * Moved hb_memvarsRelease() call till after hb_gcReleaseAll(). This fixed GPF trap because a detached local from a block
      will refer to item in the memvars table, which no longer exists.

  * source/vm/memvars.c
    * Made sure that cyclic issues are avoided in hb_memvarValueDecGarbageRef()

2003-09-10 23:27 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rdd/dbf1.c
    * small fix.

  * xharbour/source/rdd/rddsys.prg
    * addede REQUEST DBFDBT
      if user don't want to link with your apps default DBFNTX and DBFFPT
      RDDs then has to add to your sources (like in Clipper)
          ANNOUNCE RDDSYS

  * xharbour/utils/hbtest/hbtest.prg
    * removed unnecessary now REQUEST DBFDBT

  * xharbour/make_tgz.sh
  * xharbour/xharbour.spec
    * don't build fmmt libs if HB_MT != MT

2003-09-10 14:05 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/arrays.c
    * Fixed a typo hb_itemCear() -> hb_itemClear().

  * source/vm/memvars.c
    * Moved ulPos definition outside #ifdef.

2003-09-10 12:27 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/memvars.c
    * Added missing initialization to type = HB_IT_NIL and counter = 0 when allocating and expanding Memvars global table.
    * Changed hb_itemClear() to hb_memvarValueDecRef() in hb_memvarsRelease()

  * source/vm/arrays.c
    * Uncommented if( HB_IS_MEMVAR( pItem ) ) and optimized hb_arrayReleaseGarbage()

2003-09-10 10:17 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/arrays.c
    ! Fixed GPF trap in hb_arrayReleaseGarbage()

2003-09-09 23:05 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/arrays.c
  * source/vm/asort.c
  * source/vm/classes.c
  * source/vm/codebloc.c
  * source/vm/estack.c
  * source/vm/fastitem.c
  * source/vm/hvm.c
  * source/vm/memvars.c
    ! Many revisions and fixes in the way GC handles Codeblocks and Arrays.

  * include/hbapi.h
  * source/vm/thread.c
  * source/vm/hvm.c
    ! Revised termination order so that hb_memvarsFree() is no longer needed.

  * source/vm/proc.c
    ! Fixed GPF trap when called from hb_vmQuit().

  * tests/pp.prg
    * Fixed typo.

2003-09-10 03:00 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * minor formating

  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! some bugs with scoping and locking I wrote about on harbour
      mailing list corrected. Please test scopes with DBFNTX it seems
      OK but I'm not sure that changes due to lack of time for deep
      DBFNTX analyzes. IMHO the best person for such fixes is Alexander.

  * xharbour/utils/hbtest/hbtest.prg
    ! REQUEST DBFDBT added for compatibility with the new RDDs

2003-09-09 17:32 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
   * makefile.bc
     + Added support for dbfdbt.lib and dbffpt.lib

2003-09-09 13:39 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * xharbour/contrib/libct/Makefile
    ! Fix recent changes in setlast.c to compile under windows.

2003-09-09 05:45 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
   * hrbdll.vc
   * hrbdll.bc
     + dbfdbt,dbffpt
   * source/rdd/dbffpt/dbffpt1.c
   * source/rdd/dbfdbt/dbfdbt1.c
   * include/hbrdddbt.h
   * include/hbrddfpt.h
     * recast AREAP to DBFAREAP for get/putMemoBlock()

2003-09-09 01:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * utils/hbmake/hbmake.prg
   * updated to use the new dbf[fpt|dbt] libraries

2003-09-08 22:07 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
   * makefile.nt
   * makefile.vc
     + dbgaltd.prg
     * remove /Oi from flags for now (use of intrinsics)
     * minor reordering
     + new RDDs
   * makefile.bc
     * minor reordering
   * hrbdll.vc
   * hrbdll.bc
     + hbloginet.prg
     * minor reordering
   * source/rdd/dbffpt/dbffpt1.c
     * casts added for msvc karma
   * source/rtl/hbffind.c
     * remove unused vars @203

2003-09-09 03:20 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/include/simplex.c
  * xharbour/source/compiler/genc.c
  * xharbour/source/compiler/hbusage.c
    * casting and some nonstandard C statements corrected

  * xharbour/source/pp/pptable.c
    + added some missing CLIPPER 5.3 statements:
      SET MBLOCKSIZE TO <x>
      SET MEMOBLOCK TO <x>
      SET MFILEEXT TO <x>
      SET AUTOSHARE TO [<x>]
      SET AUTORDER TO [<x>]
      SET STRICTREAD <x:ON,OFF,&>

  * xharbour/source/rdd/dbffpt/dbffpt1.c
    + DBFFPT now uses _SET_MFILEEXT and _SET_MBLOCKSIZE

2003-09-08 21:17 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/make_tgz.sh
  * xharbour/xharbour.spec
  * xharbour/bin/!pack_src.bat
  * xharbour/bin/!pack_src.sh
  * xharbour/bin/bld.bat
  * xharbour/bin/bld_solib.sh
    * new RDD libs added

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! fixed bug introduced by mergin CVS sources with my version

  * xharbour/source/rdd/dbfcdx/dbfcdx0.prg
  * xharbour/source/rdd/dbfntx/dbfntx0.prg
    * removed registering of DBF{DBT/FPT}

2003-09-08 18:20 UTC+0100 Ian Anderson <i.anderson@procon-online.de>
   * contrib/rdd_ads/adsfunc.c
     + New functions related to Advantage Data Dictionary - ADSREINDEX()
     ! Fixed some compilation errors when building with ADS_REQUIRE_VERSION6

2003-09-08 14:46 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/contrib/libct/Makefile
  * xharbour/contrib/libct/bit1.c
  * xharbour/contrib/libct/bit2.c
  * xharbour/contrib/libct/bit3.c
  * xharbour/contrib/libct/ftoc.c
    * casting and some nonstandard C statements corrected

  * xharbour/contrib/libct/makefile.bc
  * xharbour/contrib/libct/makefile.vc
  + xharbour/contrib/libct/setlast.c
  - xharbour/contrib/libct/setlast.prg
    + SETLASTKEY added (previous version put key into key buffer :-) )

  * xharbour/source/rtl/math.c
    * casting

  * xharbour/source/rtl/cdpapi.c
    * small modification in logical expresion

  * xharbour/config/global.cf
    * new RDDs added

  * xharbour/include/hbdefs.h
    + endian conversion macros

  + xharbour/include/hbdbferr.h
    + standard DBF errors definition moved to separate file

  * xharbour/include/hbdbsort.h
    ! corrected including hbrdddbf.h
      New macro HB_EXTRANAL_RDDDBF_USE for sources which want to include
      hbrdddbf.h

  * xharbour/include/hbapirdd.h
  * xharbour/include/hbrddcdx.h
  * xharbour/include/hbrdddbf.h
  * xharbour/include/hbrdddel.h
  * xharbour/include/hbrddntx.h
  * xharbour/include/hbrddsdf.h
    * modified to new API

  + xharbour/include/hbrdddbt.h
  + xharbour/include/hbrddfpt.h
    * new RDD headers

  * xharbour/source/rdd/Makefile
    * new RDDs added

  * xharbour/source/rdd/delim1.c
  * xharbour/source/rdd/sdf1.c
  * xharbour/source/rdd/dbfntx/dbfntx0.prg
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * modified to new API
    * DBFNTX by default try to inherits from DBFDBT and if it not exists
      from DBFFPT then from DBF
    * DBFCDX by default try to inherits from DBFFPT and if it not exists
      from DBFDBT then from DBF
    - removed old FPT code

  * xharbour/source/rdd/dbf1.c
    * modified to new API
    * small fixes
    * methods lock and unLock now calls rawLock so if you want to
      change locking scheme you only have to overwrite rawLock method

  * xharbour/source/rdd/dbcmd.c
    * modified to new API
    * small fixes

  + xharbour/source/rdd/dbfdbt/Makefile
  + xharbour/source/rdd/dbfdbt/dbfdbt0.prg
  + xharbour/source/rdd/dbfdbt/dbfdbt1.c
    + new DBFDBT RDD. Nearly all code was taking frm dbf1.c which
      I modified a little bit and added DBT file locking (there was
      no one so far)

  + xharbour/source/rdd/dbffpt/Makefile
  + xharbour/source/rdd/dbffpt/dbffpt0.prg
  + xharbour/source/rdd/dbffpt/dbffpt1.c
    + new DBFFPT RDD. It can read and write from/to SIX and FLEX memos
    any type of items. Type of FPT file is recognized automatically at
    open. New files use FLEX format. It's about 15 times faster then
    Clipper 5.3 on writing and about 50 times on reading

  * xharbour/source/vm/hvm.c
    + new RDDs initiatlization

2003-09-07 19:41 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/estack.c
    * Corrected high limit of loop in Stack expansion.

  * source/vm/arrays.c
    * Enhanced debugging TraceLog() to report top of stack.

2003-09-07 19:16 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/codebloc.c
    * Removed 1 redundant registration of array owner. Registration already recorded at hb_memvarValueNew()

2003-09-07 16:11 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/arrays.c
  * source/vm/classes.c
  * source/vm/codebloc.c
  * source/vm/estack.c
  * source/vm/eval.c
  * source/vm/hvm.c
  * source/vm/memvars.c
    ! Corrected many instances of == HB_IT_ARRAY to HB_IS_ARRAY(...)

  * source/vm/codebloc.c
    ! Fixed memory leak related to new Array management and detached locals.

2003-09-06 19:54 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/arrays.c
    * Moved all Array management debuging TraceLog() messages under #ifdef DEBUG_ARRAYS

  * source/vm/arrayshb.c
    % Optimized aDel() aIns() aSize() aFill(), aScan, aCopy() and aEval()

2003-09-06 19:30 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * source/rtl/browse.prg
    ! Added missing Clipper  behavior(edit/add/delete data)
  * source/rtl/hbffind.c
    ! Support for Directory("c:\","V") under windows

2003-09-06 13:42 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rdd/dbcmd.c
    ! Fixed and optimized rddMoveFields()

  * source/vm/arrays.c
    * Added debugging related commented define.

  * source/vm/hvm.c
    ! Fixed invalid swaping of items, was using memcpy() instead of hb_itemSwap() in hb_vmSwapAlias().
      This was interfering with new Array Management.

2003-09-05 22:20 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
   * makefile.bc
      ! added missing dependencie to debug.lib

2003-09-05 03:14 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
   * utils/hbdict/Makefile
      ! added -j to compilation switches

   * utils/hbdict/hbdict.prg
      ! fixed HIL table ordering routine.

   * source/compiler/cmdcheck.c
      ! fixed interpretation of switch -j and -jfilename

2003-09-05 04:50 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * hrbdll.bc
   * hrbdll.vc
     ! Updated to the most recent library contents
   + include/hrbdll.h
     ! files needed to be included when creating an application with harbour.dll

   * tests/dll_b32.mak
   * tests/dll_b32.bat
     ! Minor updates

   + tests/testdll.prg
     * sample program containing PRG and C level calls to harbour.dll

   /*
     The long outstanding issue of "unresolved _hb_stack" is now overcome.
     Creation of harbour.dll can now use macro calls for speed and we can
     now use an external C program to access extend functions, hb_ret*.
   */

2003-09-04 12:24 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
   * include/hbexprc.c
     ! Fixed hb_compExprPushPreOp() and hb_compExprPushPostOp() for HB_ET_WITHSEND

2003-09-04 18:50 UTC+0100 Ian Anderson <i.anderson@procon-online.de>
   * contrib/rdd_ads/ads1.c
     ! Fix to allow opening of free tables and tables in an
       Advantage data dictionary at the same time
   * contrib/rdd_ads/ads1.c
     + Additional wrappers for Advantage Data Dictionary functions

2003-09-04 11:50 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rtl/inkey.c
   * source/rtl/gtwin/gtwin.c
   * source/rtl/gtstd/gtstd.c
     ! Move keyboard hacks to function hb_gt_readkey()

     /*
      I can not (yet) translate the value programatically, hence the
      translation remain hacks. Nevertheless, it works properly now.
     */

   * source/rtl/hboutdebug.c
     ! Minor modification on #definiton of __WIN32__

2003-09-03 21:26 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
   * include/hbver.h
     ! Change CVS log entry information for Build 90

2003-09-03 19:14 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/arrays.c
  * source/vm/memvars.c
    ! Minor optimization of Array management.

  * source/vm/estack.c
    + Added Array management logic when stack is expanded.


2003-09-04 08:30 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rtl/hboutdebug.c
     ! Minor fix on #definiition of Windows platform.

2003-09-03 20:45 UTC-0300 Marcelo Lombardo <lombardo@uol.com.br>
  * source/vm/inet.c
    changed InetRecvEenBlock 2nd parameter so it can be an end block
    string (as it was before) or an array with "n" possible end block
    strings

2003-09-03 09:45 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * contrib/libmisc/makefile.vc
    - dbftools.c since it's now in libct
  * contrib/libct/makefile.vc
    + dbftools.c

2003-09-03 08:55 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * makefile.vc
    * minor formatting.
  * include/hbtrace.h
    - #include "hbsetup.h" (redundant)
  * include/hbdefs.h
    * add BOOL cast to TRUE and FALSE
  * source/pp/ppcore.c
    * change param 2 to NULL from FALSE in DefSearch Call at 1676
  * source/rdd/dbfcdx/dbfcdx1.c
    * a number of casts.
  * source/rtl/filesys.c
    * casts on a couple of GetLastError() calls
    * this seriously needs to be fixed.
  * source/rtl/hbsrlraw.c
    * ifdefed a call to hb_retnll() in hb_getLen8()
    * one logic shortcut at 299
  * source/rtl/tprinter.c
    * removed #define WINVER
    * please don't do this.
  * source/vm/arrays.c
    * move delcaration of szProc and szModule to inside #ifdef
  * source/vm/eval.c
    * casts to ulLen in calls to hb_vmFunction

2003-09-03 17:30 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rtl/inkey.c
     ! More keyboard remapping when CapsLock is ON.

2003-09-02 18:26 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/memvars.c
    ! Fixed memory leak related to Array Owner management. This also eliminate warning generation to Trace.log file

2003-09-03 08:05 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/common/reserved.c
     + Add option to omit reserved words by adding -DHB_RESERVED_OFF (default is ON)

     /*
     This may be useful when one is working with pCode DLL where he must redefine
     reserved words as dummy functions in the DLL.
     */

2003-09-03 07:30 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rtl/inkey.c
   * source/rtl/gtstd/gtstd.c
     ! Minor modifications on platform definitions due to recent changes.

2003-09-02 17:31 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbrddcdx.h
  * source/rdd/dbfcdx/dbfcdx1.h
    + Added missing reset of #pragma pack() for MSVC.

  * source/rdd/dbcmd.c
  * source/rdd/dbf1.c
  * source/rdd/dbfcdx/dbfcdx1.c
  * source/rdd/dbfntx/dbfntx1.c
    - Removed unneeded BOOL bMathName from rddMoveFields() and replaced with if( pFields ).
    ! Fixed GPF in GetTheOtherArea() resulting from attemting to convert case of static buffer (field name).
    * Many Formating fixes.

  * source/vm/errorapi.c
    ! Fixed GPF trap in hb_errPutFileName() when file name is NULL.

2003-09-03 05:45 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rtl/inkey.c
   * source/rtl/gtwin/gtwin.c
     ! When CapsLock is on, numeric keys ( eg. 1, 2 ) does not echo
       the correct key-pressed value. Fixed.

     /*
     This is a work around for HB_OS_WIN_32_USED environment. If others
     have a better solution, improvement is appreciated.
     */

2003-09-01 22:40 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rdd/dbcmd.c
  * source/rdd/dbf0.prg
  * source/rdd/rddsys.prg
  * source/rdd/dbfntx/dbfntx0.prg
  * source/rdd/nulsys/nulsys.prg
  * source/rtl/win32ole.prg
  * source/vm/hvm.c
    ! Fixed initilaization of DBF, DBFNTX, DBFCDX and Initialize_Ole, to take place before INIT PORCEDUREs are called.

2003-09-02 01:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  *source/rtl/set.c
    ! minor fix

2003-08-31 14:24 UTC+0100 Patrick Mast <patrick@winfakt.com>
  * source/rtl/filesys.c
    ! Typecasting for MSVC

2003-08-29 13:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * utils/hbmake/hbmake.prg
    ! accepting an sugestion of Przmyslaw, hbmake use as linked on linux the xhblnk when present

2003-08-29 11:30 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * utils/hbmake/hbmake.prg
    utils/hbmake/tmake.prg
    ! some bug fixed and add whoo as graphical  libs options

2003-08-28 19:42 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbrddcdx.h
  * source/rdd/dbfcdx/dbfcdx1.h
    + Added MSVC #pragma pack(1) support.

2003-08-28 03:34 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/hbi18n.c
  * include/vm/hbi18n.c
    + Added HB_I18NSetBaseLanguage() to state that the program is
      written in a language that is not U.S. English
    + Added HB_I18NGetBaseLanguage() and HB_I18NGetBaseLanguageName()
      to get back the information about the base (native) language.

  * doc/hbi18n.txt
    + added documentation for the new functions

2003-08-27 13:01 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/hvm.c
    + Added few missing HB_THREAD_STUB macros.

2003-08-27 12:50 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/hvm.c
    * Removed temprarily disablement of array reuse optimization in hb_vmArrayPush()

2003-08-27 12:48 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/fm.c
    * Changed HB_MEM_LIST_BLOCKS to use TraceLog()
    ! Removed two redundant assignments of '\0' termination in blocks display,
      the one in new HB_MEM_LIST_BLOCKS was obviously causing a GPF (found by Brian Hays).

2003-08-27 21:02 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/hvm.c
  * source/vm/thread.c
  * include/thread.h
    ! Threadsafed some s_* signaled by Ron Pinkas

2003-08-27 14:07 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/filesys.c
  * source/rtl/philes.c
    ! fixed linux compilation
    ! fixed issues on process termination and stderr redirection in linux

  * tests/process.prg
    * Still other tests :-)

2003-08-27 12:43 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/filesys.c
  * source/rtl/philes.c
  * include/hbapifs.c
    + Added support for windows, both in X__WIN32__ mode and regular mode
      (support is more complete in X__WIN32__)
    * using char * parameter instead of BYTE* for command name

  * tests/process.prg
    * other tests :-)

2003-08-27 10:57 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/pp/pptable.c
    * reverted hack with @..SAY translation to DEVOUT{PICT} with
      additional two parameters. This breaks compatibility with
      Clipper. If some one needs it then please add such rule to
      your own .ch files not to the internal PP table which has
      to be Clipper compatible as most as possible.

  * xharbour/contrib/libct/ctwin.prg
    * small fixes to accept additional two parameters in DEVOUT
      and DEVOUTPICT

2003-08-26 18:35 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    ! stop execution if DBFCDX was not compiled with one byte alignment

    Sorry I have to do that as temporary solution to the moment I
    remove all #pragma from this code. In fact I have to rewrite
    most of them to do that. If you see message:
    "This code cannot be compiled without one byte alignment."
    as an internal error or in error.log file then it means that
    you have to add proper #pragma to include/hbrddcdx.h and
    source/rdd/dbfcdx/dbfcdx1.h or some of basic types in your
    compiler/architecture has different size then original author
    of DBFCDX thought - in such case you have to wait until someone
    (probably I) correct the code removing all pragmas depended parts.

2003-08-26 17:07 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/filesys.c
  * include/hbapifs.h
    + Added hb_fsOpenProcess(), hb_fsCloseProcess() and
      hb_fsProcessValue() to control subprocess and piping (stream
      redirections). Currently only Linux, windows is under way

  * source/rtl/philes.c
    + Added interfaces for process oriented routines
      HB_OpenProcess()
      HB_CloseProcess()
      HB_ProcessValue()
      HB_FCommit() -- to flush files

  + tests/process.prg
    + Added test for process oriented functions


2003-08-26 11:28 UTC+0200 Francesco Saverio Giudice <info@fsgiudice.com>
  * test/bldtest.bat
    ! Updated: added possibility to compile in MT or ST mode
               added messages on compiling
               Use /? to display help

2003-08-26 01:53 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rtl/gtQTc/Makefile
  * xharbour/source/rtl/gtQTc/gtQTc.cpp
  * xharbour/source/rtl/gtQTc/gtQTc.h
  * xharbour/source/rtl/gtQTc/mouseQTc.c
    + MULTI_GT support added
    * small fix for unlocking the stack
    * compile gtQTc in as an MT library only

2003-08-25 15:23 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbmemory.ch
  * source/vm/fm.c
    + Added support for HB_MEM_LIST_BLOCKS

  * source/vm/arrays.c
    - Commented out leftover debugging code.

  * source/vm/codebloc.c
  * source/vm/memvars.c
    * Corrected memory leak related to new array managment.

2003-08-25 23:20 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * small (less important) modification

  * xharbour/include/hbapifs.h
    + new extended flags for hb_fsLock
	#define FLX_EXCLUSIVE 0x0000   /* Exclusive lock  */
	#define FLX_SHARED    0x0100   /* Shared lock     */
	#define FLX_WAIT      0x0200   /* Wait for lock until success */

  * xharbour/source/rtl/filesys.c
    + shared locks for *nix platforms (fcntl(...)) and waiting locks
      implemented
    * hb_fsLock change for all other platforms to ignore extended flags

    I plan to use shared and waiting locks in DBFCDX. If you want to
    see their power on other platforms please add implementation for them.
    If you won't do that then standard short exclusive lock will be used.
    Nothing wrong but much less powerful in network environment.

2003-08-25 14:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
   * source/rtl/set.c
     ! minor fix in _SET_PRINTFILE section for windows compiling

2003-08-25 18:10 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/config/lib.cf
    * small modification for building only MT library

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfcdx/dbfcdx2.h
    ! fixed bug which could appear when user add new order to old
      index file with free pages
    + Codepage support extended - now you can use different codepages
      in all work area

  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * small indent modification

2003-08-24 16:51 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
   * include/hbapi.h
   * include/hbvmpub.h
   * source/vm/arrays.c
   * source/vm/asort.c
   * source/vm/fastitem.c
   * source/vm/hvm.c
   * source/vm/memvars.c
   * source/vm/codebloc.c
     + Added new optional Arrays (and Objects) lifetime management.
     /*
        This new system uses linked list to keep track of known refernces to the Array/Object.
        this allows a far more reliable control than the previous reference counting.

        This new system should be able to automatically circumvent pre-mature releaseproblems
        as demonstrated by the recent HWGUI issue.

        I've tested as much as I could but of course there might still be some minor issues to address.

        The new system is ENABLED by default, but older system may be used by UN-commenting the
        #define HB_ARRAY_USE_COUNTER in hbapi.h or adding such define when building xHarbour.

        uiHolders members still maintained for binary compabtibility with Harbour librarries as well as
        compiled xHarbour librarries.

        Will greatly appreciate input to indicate what impact if any this has on any previously noted GPF[s].
      */

   * source/vm/garbage.c
     + Added missing hb_gcItemRef() when codeblock item maintains a ->pSelfBase member.
       /* This may resolve a potential GPF. */

   * source/vm/codebloc.c
     - Commented logic to release refernce of ->pSelfBase member in hb_codeblockDeleteGarbage(),
       as the referenced object may have been released in preceding acions of the current Garbage removal.
       /* This may resolve a potential GPF. */

   * source/vm/proc.c
     + Added TraceLog() debugging message when corupted object detected.

2003-08-23 12:45 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/regex.c
    ! A wrong REGEX used in HB_REGEX now causes an error. Normally,
      using a wrong regex is a programming error, and should be
      signaled this way. In situations where the regex is created
      on-the-fly and thus may be wrong, a try-catch statement should
      be used.
    ! the sequence $$$ used to distinguish pre-compiled regex has
      changed with ***; $$$ is "valid" even if useless, while ***
      is not, and can be safely used to mark a compiled regex.

  * tests/regextest
    ! using a try/catch to detect errors in regex compilation

  * tests/Makefile
    ! Defaulting to gtcts in HB_GT_LIB

2003-08-22 14:15 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbexprb.c
    * OOPs, reinstated exclusion logic in SubStr() optimization regarding NON declared vars, it's NOT redundant.

2003-08-22 13:43 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbexprb.c
    * Removed redundant exclusion logic in SubStr() optimization regarding declared vars (see hb_compExprUseArrayAt()).
    + Added logic to exclude CodeBlock locals in MACRO, when forcing MEMVAR context in hb_compExprUseArrayAt().

2003-08-21 18:17 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/include/hbrddcdx.h
  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfcdx/dbfcdx2.h
    + Freeing pages implemented
    + redistributing keys implemented
    * small speed improvement
    ! And many bug fixes

2003-08-20 20:58 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/pvalue.c
    + Added Varible Pararmeters support to HB_PValue()

  * utils/hbmake/hbmake.prg
    * Moved CreateLink() to a macro to avoid link error on Windows.
      /* Luiz you might want to use __Platform_* instead. */

2003-08-20 18:55 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbexprb.c
    ! Fixed optimization of SubStr( x, n, 1 ) => x[n] to NOT optimize SubStr( NonDeclaredVar, n, 1 )
      because NonDeclaredVar maybe a non declared FIELD, but Array context forces a MEMVAR resolution.

2003-08-20 16:14 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/macro.c
    ! Fixed hb_compMemvarCheck() to also check for Fields - what a bad name for this function :-(

2003-08-20 15:06 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rdd/dbcmd.c
    ! Fixed DBSELECTAREA() to correctly support recovery from Error.

2003-08-20 14:45 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * contrib/hbzlib/*
    ! updated all files (with bug fixes )

2003-08-20 13:04 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/errorapi.c
  * source/vm/hvm.c
    + Some commented trace messages.

  * source/rdd/dbcmd.c
    ! Fixed GetTheOtherArea() to be respectfull of hb_vmRequestQuery().
    ! Fixed rddMoveRecords() to be respectfull of hb_vmRequestQuery().

     /*
         Above fixes APPEND FROM command to be working correctly with TRY/CATCH.
         It also fixes very bad GPF if an Error Evaluation was issuing a Break()
         any where in this sequence.

         This situation highlight a very dangerous situation we MUST protect. We
         will need to add:

         if( hb_vmRequestQuery() )
         {
            return ...
         }

         or:

         if( hb_vmRequestQuery() == 0 )
         {
            hb_errRT_DBCMD( EG_OPEN, 0, NULL, "DBAPP" ); // Could not open it
         }
         else
         {
            return ...
         }

         After EACH and EVERY function call, that might in turn call hb_err...()

         The problem is that such error might have activated a Break(), and the
         problem is 2 folds:

         1. We need to respect the rquest.
         2. Stack is now in an unstable condition, and GPF is imminent!

         The above may be very common in RDD.
      */

2003-08-20 20:03 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rtl/gtcrs/gtcrs.c
    * small fix in hardcoded xterm key mapping for buggy terminfos,
      map \177 as K_BS not K_DEL

2003-08-20 14:35 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * source/rtl/hbcrypt.c
    ! Fixed two GPFs if empty parameters are passed

2003-08-20 12:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  + contrib/hbzlib/make_vc.bat
  + contrib/hbzlib/ziparchive.vc
    + makefile for ziparchive lib for msvc compiler

2003-08-20 11:14 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/xharbour.spec
  * xharbour/make_tgz.sh
    * fixes for building without MULTI_GT support

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
    * next bugs fixes. Please test. I'm waiting for report.

2003-08-19 21:54 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbapi.h
  * source/vm/macro.c
    + Added 2nd param to hb_macroGetType( PHB_ITEM pItem, BYTE Flags )

  * include/hbexprb.c
    + Added Macro Flags support to Type() function as a 2nd paramater so that Type is also compliant with Compile Time MAcro Flags.

  * source/rtl/type.c
    + Added Macro Flags support to Type() function as a second optional paramater.

  * source/vm/macro.c
    ! Fixed hb_compMemvarCheck() to check that Symbol found is indeed a Memvar.
      This fixes Clipper compabtibility in hb_macroGetType(), i.e. Type()
    + Added Macro Flags support to hb_macroGetType(). This allws proper type of xHarbour macro extensions,
      unless disabled with -kc.

  * source/compiler/harbour.c
  * source/compiler/hbfunchk.c
    * Revised paramater checking of Type() to allow for optional 2nd param.

2003-08-19 17:15 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * tests/inifiles.prg
    + Add parameters checking
  * tests/list.prg
  * tests/macro.prg
  * tests/pptest.prg
    ! Fixed some warning messages

2003-08-19 13:50 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/regex.c
    ! Parenthetized expressions must be returned by HB_Regex &co
      even if they are not found. See this case:
      HB_Regex( "abc(de)fg(hi)?", "abcdefg")
      This expression MUST return an array of EXACTLY three
      elements; the first one is the sucessful whole match,
      the second is the first parenthetized expression match,
      and the third is an empty string (that means that the
      "possible" (?) expression was not present).
      To achive this, I changed the code
      while ( aMatches[i].rm_eo > 0 )
      into
      while ( aMatches[i].rm_eo > -1 )
      in two points.

  * tests/regextest.prg
    + Added a ">" in front of the match to count for emtpy
      parenthetized expression matches.

2003-08-19 13:50 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/regex.c
    ! Calling operators HAS or LIKE with unproper parameters made
      the VM to crash. Now an error is correctly reported.

  + tests/regextest.prg
    + Small test that allows to try the regex expressions before
      to put them in the program.

2003-08-19 01:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * source/rtl/tprinter.c
    + GETDEFAULTPRINTER() return the windows default printer name

2003-08-17 15:16 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/classes.c
    ! Fixed 1 GPF trap.

2003-08-18 19:28 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/thread.c
    ! removed a leftover debug code.

2003-08-18 11:24 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/proc.c
    ! Corrected 2 typos.

2003-08-18 19:28 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/hbi18n.c
    + Added function HB_HFIND to scan a hash for a given value;
      It is just a wrapper of the function that scans the I18N
      table. When this version will be out, I'll move this in
      a separate file and I'll add a little more support for
      hashes.
    ! Were still using hb_stricmp() to check for matches; at the
      beginning I tought I could have hit entries with mixed
      case, then the design neglected this need; so now using
      strcmp() that is MUCH faster.

  * tests/i18n/fr_FR.hit
  * tests/i18n/it_IT.hit
    ! forgot to update them after previous update of hb_i18n system.

2003-08-18 13:56 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/xharbour.spec
    * minor corecrections

  * xharbour/contrib/libct/Makefile
  * xharbour/contrib/libct/makefile.bc
  * xharbour/contrib/libct/makefile.vc
  + xharbour/contrib/libct/time.prg
    + Added some missing CT functions: TIMETOSEC(), SECTOTIME(), MILLISEC()
      Thanks to Piero Vincenzo Lupano <pierovincenzo1956@supereva.it>

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfcdx/dbfcdx2.h
  * xharbour/include/hbapicdp.h
  * xharbour/source/rtl/cdpapi.c
    * many bug fixed, codepage support added but only character oriented
      (it means that you cannot sort in correctly whit this languages which
      use multibyte characters, not sorted chars, etc. but should be enough
      for many people).
      It should be quit stable now but it is still very slooow.
      Only one fast think in it is index procedure which creates
      character oriented structure to speed up this operation but in
      fact it's very poor idea which doesn't allow me to add full
      codepage support so it has to be remove and written again in the
      future. I spend three days on this code and I have to say that
      I cannot improve the speed without rewriting most of them.
      Some thinks I can made acceptable fast but they will never been
      the speed daemon.
      Now I'm waiting for bug reports from users.

2003-08-16 00:40 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * doc\genhtm.rsp
    + added en\indirect.txt to doc build process
  * doc\en\indirect.txt
    ! minor format to text

2003-08-16 03:50 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/thread.c
    ? Removing item cleanup for main stack.

2003-08-15 15:16 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/classes.h
  * source/vm/classes.c
    + Added: USHORT   hb_clsMaxClasses( void )

  * source/vm/proc.c
    + Added logig to detect corrupted objecs in hb_procinfo()

2003-08-15 02:48 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/hvm.c
    ! commented //printf were missing ( before ".

  * source/rdd/dbcmd.c
    ! skipping cleanup sequence (involving mutex lock and destruction
      under MT) if RDD is not initialized. Not doing so causes GPF
      at program termination under MT if the program does not uses
      databases.

2003-08-15 01:46 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/eval.c
  * source/vm/hvm.c
    ! removed EXEC, HB_EXECFROMARRAY and hb_execFromArray() functions from
    hvm.c and moved themo to eval.c
    + Added indirect execution of codeblocks in HB_EXECFROMARRAY and
      hb_execFromArray()
    % Added MT optimization in eval.c functions

  * doc/en/indirect.txt
    + Added documentation for Indirect execution

  * include/hbapi.h
    + Added prototype of hb_execFromArray() to be used from C API.

  * tests/exec.prg
    + Added tests for codeblock indirect calling.

  * source/vm/memvars.c
    ! removed a useless HB_THREAD_STUB that caused a warning


2003-08-14 01:43 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbexprb.c
    + Added GLOBAL detection to recent fix to HB_P_ARRAYPUSH.

  * source/compiler/harbour.sly
    + Added GLOBAL detection to s_bSetGet logic, and s_bBlockDeclared logic.

  * source/compiler/harbour.c
    + Added declaration of hb_compVariableGetPos()

2003-08-13 16:50 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbexprb.c
    ! Fixed HB_P_ARRAYPUSH to force MEMVAR context for non declared variable.

2003-08-12 19:27 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rdd/dbcmd.c
    * Formating.

  * contrib/rdd_ads/ads1.c
    ! fixed typo and formted.

2003-08-12 17:16 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * contrib/rdd_ads/ace.h
    ! Fixed definition of ENTRYPOINT - Brian we probably need to report this to Exetnded Systems (appears to be a typo!).

  * contrib/rdd_ads/ads1.c
    ! Fixed possible GPF, and added few commented debuging TraceLog().

  * source/vm/arrays.c
    - Removed redundant lines from hb_arrayDel()

  * tests/ads.prg
    ! Minor corrections.

  * tests/pp.prg
  * tests/rp_dot.ch
    + Added support for:
        CD <NewDir> in Dot Prompt mode.

2003-08-12 16:30 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * bin/bld.bat
    + Added support for an env var ADS_LIBS

  * source/rtl/set.c
    ! fixed compilation errors under MSVC.

  * tests/ads.prg
    ! Minor corrections.

2003-08-12 12:45 UTC-0800 Brian Hays <bhays@abacuslaw.com>
  * xharbour/contrib/libmisc/Makefile.bc
   * dbftools.c (FIELDTYPE(), FIELDSIZE(), FIELDDECI()) moved from
     libmisc to libct

2003-08-12 01:02 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rdd/workarea.c
   ! yet another bug in dbeval() fixed for nNext < 0

2003-08-12 01:02 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rdd/workarea.c
   ! fixed bug in dbeval()

2003-08-11 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/rtl/tget.prg
    ! Fix behavior in picture functions.
      Ex: @5,5 Get nVar picture "@B9999"

2003-08-10 19:10 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * source/rtl/set.c
   *(All changes on behave of _SET_PRINTFILE place)
    when compiling under Windows (Borland and MSVC Compiler) the
    _SET_PRINTFILE automaticaly point to default printer,(an set device
    to print, direct send data to printer)
    Checking  recieve filename, if no extension is passed ,".prn" is added to file

2003-08-10 23:11 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/contrib/libmisc/Makefile
  - xharbour/contrib/libmisc/dbftools.c
  * xharbour/contrib/libct/Makefile
  + xharbour/contrib/libct/dbftools.c
   * dbftools.c (FIELDTYPE(), FIELDSIZE(), FIELDDECI()) moved from
     libmisc to libct

  * xharbour/contrib/libct/dbftools.c
   ! small corectrion to avoid GPFs and return proper values when
     no open area or bad param pass
   + FIELDNUM(), DBFSIZE() added

2003-08-09 22:18 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/xharbour.spec
    * removed ${RPM_OPT_FLAGS} from C_USR
      '-pipe' breaks building proces on RH9 when user doesn't install
      old slang-devel
  * xharbour/make_tgz.sh
    ! fixes for RH9 and shared lib names

  * xharbour/source/rtl/gtcrs/gtcrs.c
  * xharbour/source/rtl/gtcrs/hb-charmap.def
    ! small fixes in HB_SETDISPCP()

  + xharbour/tests/dspcolor.prg
  + xharbour/tests/keycodes.prg
    + two short programs for GT testing - test colors and inkey codes

2003-08-09 11:49 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/simplex.c
    ! Fixed save/restore of tentative match to save/restore length of token.

  * source/pp/ppcore.c
    ! Fixed getExpReal() to reject an expression startting with '->'.

  * source/vm/hvm.c
    + Added 2 commented TraceLog() debugging lines.

2003-08-08 19:39 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/rtl/tbcolumn.prg
  * source/rtl/tbrowse.prg
    ! Fix relese of HitTop and HitBottom correctly.
      Reported by Guillermo Verona
  * source/rdd/workarea.c
    ! Fix dbEval. <nRest> should be stop and stay in last record evaluated.
      Reported by Guillermo Verona

2003-08-07 22:23 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! support of binary keys (borrowed from Harbour, many thanks
      to Alexander)

  * xharbour/source/vm/fm.c
    * clear MEMINFO signatures in hb_xfree()

2003-08-07 11:17 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rtl/objfunc.prg
    ! Fixed a bad typo.

2003-08-07 14:30 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * source/rdd/dbf1.c
    ! Fix dbfPutValue to become compatible with clipper when with error occur( Reported by Marcos Gambeta)

2003-08-03 07:50 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/hbmxml.prg
    ! Added missing Checking escapes in attribute values.

  * tests/mtstress.prg
    ! Commented out the well-known bug generators

2003-08-03 04:47 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * tests/mtstress.prg
    ! Added a notice to warn the user that the program is going to
      terminate with an error.

2003-08-06 11:30 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * utils/hbmake/hbmake.prg
    ! removed tracelog calls

2003-08-06 10:50 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * xharbour.spec
    ! minor Fix
  * source/rtl/isprint.c
    ! fix to getprinters() when used on Windows XP/2K/NT

2003-08-06 12:54 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/vm/fm.c
    ! fixed some castings

2003-08-05 16:41 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/vm/fm.c
    * added code for initializing allocated memory with
      static complex HB_ITEM. This code is compiled when
      macro HB_PARANOID_MEM_CHECK is set and there is no
      macro HB_FM_STATISTICS_OFF
  * xharbour/xharbour.spec
  * xharbour/make_tgz.sh
    * libfm (fm.o with memory statistic) is compiled with
      HB_PARANOID_MEM_CHECK macro

2003-08-05 03:19 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rtl/cstr.prg
    * Commented leftout TraceLog()

  * source/vm/classes.c
    + Added: __clsGetIVarNamesAndValues( oObject [, nScope] ) -> Array of sub arrays of Ivar-Name and Value.

  * source/rtl/objfunc.prg
    ! Fixed __ObjGetValueDiff() and __ObjGetDerivedDiff() to use new __clsGetIVarNamesAndValues()
      instead of

  * source/vm/garbage.c
    * Minor formating.

  * source/vm/hvm.c
    + Added logic to generate an Error if HB_MAX_ENUMERATIONS is reached.
    + Added logic to generate an Error if HB_MAX_WITH_OBJECTS is reached.
      /* This may catch a possible GPF. */

2003-08-03 04:47 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/thread.c
    ! uiCurrentArea was initialized to 0 (while it must be initialized to 1).

2003-02-02 17:40 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
 * doc/en/files.txt
  * Added doc for HB_OsPathSeparator(),HB_OsPathListSeparator(),HB_OsPathDelimiters()

2003-02-02 15:10 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * doc/hblog.txt
    doc/hbi18n.txt
    * Formated to be processed by hbdoc
 * doc/genhtm.rsp
    + hblog.txt and hbi18n.txt dependencies added
 * utils/hbdoc/rtf.prg
   utils/hbdoc/hbdoc.prg
    ! minor fix

2003-08-02 12:00 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/make_tgz.sh
  * xharbour/xharbour.spec
  * xharbour/source/vm/hvm.c
    * small modification in support for automatic detection of first
      function in linked modules for Linux
      if first char of s_pszLinkedMain is '@' then start procedure were
      set by programmer explicitly and should have the highest priority
      in other case it's then name of first public function in first
      linked moudule which is used if there is no HARBOUR_START_PROCEDURE
      in code

2003-08-01 23:13 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/fastitem.c
    ! Fixed 2 old GPF traps.

2003-08-01 22:48 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/hvm.c
    ! Fixed minor compile error
    * Some formating.

2003-08-01 18:21 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rdd/dbcmd.c
    ! Removed redandant #defines.

2003-08-01 19:00 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * thread.c
    ! A misplaced IF upon automatic mutex unlockin/destruction
      could cause GPF at program exit. Fixed.

  * source/rtl/hblog.prg
  * include/hblog.ch
    + Added LOGDEBUG channel.
    ! Program name was not properly initialized. Fixed.

  * tests/logtest.prg
    + added a test for logdebug channel

  + docs/hblog.txt
    + Added complete documentation for log system

2003-08-01 12:30 UTC-0300 Marcelo Lombardo <lombardo@uol.com.br>
  * source/rdd/dbfntx/dbfntx1.c
    ! Error "Cannot find current key" in ntxGoCold() now raises a run
      time error in the calling method, instead of hang up the application.
      The problem itself is not fixed yet.

2003-08-01 14:19 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rdd/dbcmd.c
    ! Fixed initialization of mutex under windows
    ! Removed an unlock over nonlocked mutex that causes windows hang

  * tests/mtstress.prg
    + Added "shared" to the USE of DBF test; without it, the system
      (obviously) hangs, with threads waiting for each other to release
      the lock on the file.

2003-08-01 13:41 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/hblog.prg
    ! Fixed Missing some parameters from LOG() method declaration in
      class HB_Logger

  * include/thread.h
  * source/rdd/dbcmd.c
  * source/vm/thread.c
    ! threadsafed RDD system (except for sensible error messages
      on imporper operations under MT).

  * tests/mtstress.prg
    + Check for (minimal) coherency of database access under MT

2003-07-31 19:57 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbsetup.h
    + Added missing definitions when NON GNU compiler used. This fixes CurrDir() and CurrDrive() on Windows.

2003-07-31 20:42 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/make_tgz.sh
  * xharbour/xharbour.spec
    + new option -fullstatic added to xhblnk and xhbmk.
      It allows to create full static binaries without and shared
      libs (even system ones) which can be installed on any system

  * xharbour/config/linux/gcc.cf
    * link with -lpthread only if vmmt libs is used - before all
      binaries (no MT too) where linked with pthread (see ldd)

  * xharbour/source/rtl/gtnul/Makefile
  * xharbour/source/rtl/gtnul/gtnul.c
    * force linking with HB_GT_LIB

2003-07-31 14:43 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/debug/Makefile
  + xharbour/source/debug/dbgaltd.prg
  * xharbour/source/debug/debugger.prg
    * ALTD() code moved from debugger.prg to dbgaltd.prg
      Now if programmer adds ALTD(0) to he's code the whole libdebug
      is not linked - only one function.
    ! removed unnecessary call to HB_OSHASDRIVELETTER()

  * xharbour/source/debug/dbgtobj.prg
  * xharbour/source/debug/debugger.prg
    * #pragma -es0 commented

2003-07-31 03:30 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * include/set.ch
   * include/hbset.h
   * source/pp/pptable.c
   * source/rtl/set.c
   * source/vm/errorapi.c
     + Add routines to control the number of recursive loops of error handler
       launching during runtime error. The loop is now configurable at prg
       level during program design. Previously, it was fixed at 8 loops.

     /*
     I found that the default recursive error detection loop of 8 in certain
     circumstances may be frustrating, particularly when our custom error
     handler has to write quite a lot of data in error.log. And in most
     cases the error.log contains redundant error logs when the detector
     has to pass the default 8 loops. I frequently experience that the
     error.log file sizes to until 4 MB (of redundant log), no joke!

     The above modification allows user to control the loop on runtime ie.:

     SET ERRORLOOP TO  1  // Only 1 (One) loop has to be passed before quiting.
     SET ERRORLOOP TO  2  // 2 (Two) loops has to be passed before quiting.
     etc...
     SET ERRORLOOP TO     // The default 8 loops. It is retained as default.
                          // Cannot ZERO, otherwise application quits silently
                          // upon run time errors.

     If we do not set the ERRORLOOP, the recursive loop will be 8.
     */

2003-07-30 15:50 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/include/hbsetup.h
    + Two new definitions added OS_DRIVE_DELIMITER and OS_HAS_DRIVE_LETTER

  * xharbour/source/rtl/filesys.c
    ! Fixed hb_fsCurDirBuff{Ex,}() functions to not strip '[A-Z]:' from
      begining of path if OS has no drive letters

  * xharbour/source/rtl/philes.c
    + new function HB_OSDRIVESEPARATOR()

  * xharbour/source/rtl/philesx.c
    * CURDRIVE() returns empty string on systems which doesn't support
      drive letters

  * xharbour/source/debug/debugger.prg
    * Fixed hard coded OS PATH/DRIVE separators

2003-07-30 06:45 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * source/vm/arrayshb.c
    ! More clipper compatible on ADel().

2003-07-29 11:53 UTC-0800 Brian Hays <bhays@abacuslaw.com>
   * source/rtl/memoline.c
      * reverted recent changes that wrote back to the source string
   * contrib/libmisc/hb_f.c
      * fixed HB_FREADANDSKIP to not return the CRLF at the end of a line

2003-07-29 22:15 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * source/common/hbfsapi.c
    * In hb_fsNameMerge():
    * account for a nasty side effect of /Oi with MSVC (implied with /Ox)
    * Basically, the ax register was being used to initialize an array,
    * but the compiler optimized out the setting of that register to 0.
    * When using function calls instead of intrinsics, it works as expected.
    * This is clearly a compiler bug.

2003-07-29 17:40 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/arrays.c
    ! Fixed aClone() to NOT clone nested Objects - Clipper compatiblity.

2003-07-29 18:10 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rtl/set.c
    ! in hb_setInitialize() hb_set.HB_SET_DEBUG = TRUE; changed to
      hb_set.HB_SET_DEBUG = hb_dynsymFind( "__DBGENTRY" ) ? TRUE : FALSE;
      to avoid problem with linking debugger when user have to call ALTD(0)
      for using K_ALT_D and K_ALT_DOWN.
      It's a work around and I still vote to move ALTD() function from
      lib debug to libvm or librtl

  * xharbour/source/vm/macro.c
    ! bug in TYPE( "FUNC(ALIAS->FIELD)" ) fixed. if FUNC, ALIAS and
      FIELD exist TYPE should return "UI" not "U"

  * xharbour/contrib/libct/color.prg
    ! bug in ntocolor(0) fixed

2003-07-27 22:13 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/memvars.c
  * source/vm/thread.c
    ! Support for memvars reduced to a "working" test for windows.
      Possibly, don't use memvars, and avoid macros, under MT.

2003-07-27 16:59 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * include/thread.h
  * source/vm/memvars.c
  * source/vm/thread.c
    ! Support for multithreading dynsym added. Now, PHB_DYNS->hMemvar
      member points to a middle-level strucuture (hMemvars) in the
      thread's private stack under MT. This avoid clashes between
      threads; both private and public memvars are now local to the
      thread that uses them.
    % Implementation of MT in memvars.c has been beautified by removing
      almost all ifdef MT sections, and using the standard conversion
      s_SingleThread --> HB_VM_STACK.multiThread if MT is on.

2003-07-26 18:22 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rdd/nulsys/nulsys.prg
    ! Fixed few typos.

2003-07-26 13:00 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * source/rtl/ttable.prg
  * include/ttable.ch
  * tests/tsttable.prg
    ! Changed object table to hbtable, ofield to hbfield and orecord to hbrecord
      to prevent GPF if user have a table() function defined.

      /*
         We have GPF instead stack error if call recursively a function:
         procedure test()
            test()
         return
      */

2003-07-26 00:57 UTC-0800 Brian Hays <bhays@abacuslaw.com>
   * make_b32.bat
      * added this to clean up any hvm*.obj files that may be left
            from earlier versions:
         if exist lib\b32\*.obj del lib\b32\*.obj

2003-07-25 22:18 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/gtcrs/gtcrs.c
    ! fixed GPF when user set in HB_TERM or TERM unexisting terminal

2003-07-25 3:51 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rtl/filesys.c
    * hb_fsPOpen() small correction to allow second parameter be NULL

2003-07-25 03:45 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/compiler/harbour.c
   * source/compiler/hbusage.c
   * source/compiler/cmdcheck.c
   * include/hbcomp.h
     * reverted back implementation of /p0

2003-07-24 20:45 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rtl/filesys.c
    ! hb_fsPOpen changed for security reasons: uid and gid
      restored and open handlers closed, unused stdin/std{out,err}
      of chiled process redirected to /dev/null
      Before this changes buggy printer program can demage
      data in files previously open by xHarbour application

2003-07-24 08:00 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * source/rtl/ttable.prg
    ! Replaced METHODs that return nil by PROCEDUREs.
    - Removed some starnge chars in line comments

  * include/ttable.ch
    ! DEFINE ORDER to accept parameter [KEY]

  * tests/tsttable.prg
    ! Name of generated dbf file is now tsttable.dbf
    ! All field names from portuguese to english
    + Date and logical test fields
    * Minor formating

2003-07-24 11:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * makefile.vc
   * makefile.nt
     + Add hboutdebug.c file dependency

   * source/rtl/hboutdebug.c
     + Add windows.h under Windows. Some compilers want it.

   * make_b32.bat
     * unremarked call to notepad.exe

2003-07-24 10:40 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/compiler/harbour.c
   * source/compiler/hbusage.c
   * source/compiler/cmdcheck.c
   * include/hbcomp.h
     + add /p0 switch for harbour.exe to produce ONLY PPO file.

2003-07-24 04:08 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * makefile.bc
    + Added hbooutdebug.c

  * source/rtl/hbrandom.c
    ! Forgot to include the header with the new prototype of hb_random_num()

2003-07-24 03:55 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  + source/rtl/hboutdebug.c
    + Portable "Output string to debug window" function called HB_OutDebug()

  + tests/outdebug.prg
    + Portable "Output string to debug window" test

  * source/rtl/Makefile
    + support for HB_OutDebug()

  * include/hbmath.h
    + added prototype of hb_random_num() used by HB_Random() but useful
      also for other functions.

  * source/rtl/hbrandom.c
    ! Prototype of hb_random_num() moved to header file

  * source/rtl/hbsrlraw.c
    ! Finetuned latest changes of Przemyslav; they are mostly ok.

  + tests/serialize.prg
    + More extensive test on integers

  * source/rtl/hblog.prg
    * Stylistic changes

2003-07-23 23:43 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/xharbour.spec
    * force building with GPM

  * xharbour/source/vm/errorapi.c
    * hb_conRelease() to hb_errInternal() added

  * xharbour/source/rtl/console.c
  * xharbour/source/rtl/gtapi.c
    * s_bInit now guards console/GT deinitialization

  * xharbour/source/rtl/langapi.c
    * exit(1) replace with a s_lang = NULL; hb_errInternal(...)
      it should be save now because we check in hb_errInternal()
      for hb_langID() != NULL before using lang api.

2003-07-24 04:30 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/rtl/tget.prg
    ! Bug fix on Method HitTest as reported by Luiz.

2003-07-24 03:55 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/rdd/nulsys/nulsys.prg
    + Add more RDD-related dummy functions

2003-07-23 17:10 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * source/rtl/hblog.prg
    ! Replaced METHODs that return nil by PROCEDUREs.
      There are some functions returning nil in some prgs that I'll fix.

2003-07-23 18:32 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/xharbour.spec
    * shared lib names changed from xharbour{mt,}.so to
      xharbour{mt,}-<version>.so and soft links with short
      names created

2003-07-23 14:10 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/xharbour.spec
    ! fixed file (user and group) owner for RPMs builded from non root
      account
    * version set to 0.82

  * xharbour/make_tgz.sh
  * xharbour/xharbour.spec
  * xharbour/bin/!pack_src.sh
    * version set to 0.82

  * xharbour/source/rtl/gtcrs/gtcrs.c
  * xharbour/source/rtl/gtcrs/gtcrs.h
  * xharbour/source/rtl/gtnul/gtext.c
    ! small fix in HB_SETTERMCP

  * xharbour/include/hbapi.h
    * remove redundant and not guarded with HB_LONG_LONG_OFF
      declaration of hb_stornll(...)
    * replaced ISO C99 comments (//) with /* */

  * xharbour/include/hbdefs.h
    * guard [U]LONGLONG declaration with HB_LONG_LONG_OFF
    * replaced ISO C99 comments (//) with /* */

  * xharbour/include/hbpcode.h
  * xharbour/include/hbpp.h
  * xharbour/include/hbrddntx.h
  * xharbour/include/hbrddwrk.h
  * xharbour/include/hbsetup.h
  * xharbour/include/inet.h
  * xharbour/include/thread.h
    * replaced ISO C99 comments (//) with /* */

  * xharbour/source/rtl/abs.c
    * guard hb_itemGetNLL(...) with HB_LONG_LONG_OFF

  * xharbour/source/rtl/hbsrlraw.c
    * modified hb_createlen8(...) and hb_getlen8(...) to work with
      HB_LONG_LONG_OFF - Giancarlo, can you look at it?

2003-07-23 02:37 UTC-0800 Brian Hays <bhays@abacuslaw.com>
  * tests/pp.txt
    * minor grammar fixes
  * contrib/rdd_ads/ads1.c
    ! fixed to allow dbcreate to make field names longer than 10 chars for adt files
  * contrib/rdd_ads/adsfunc.c
    * removed leftover debug pragmas and a unnecessary comment
    * fixed comments from // to /**/
    ! moved all pre-v6 funcs above the set of v6 funcs.

   Please add all-version funcs above the v6 stuff and leave the v6 calls
   at the bottom of the file.

2003-07-22 21:15 UTC-0300 Marcelo Lombardo <lombardo@uol.com.br>
  * source/rdd/dbcmd.c
    ! Fixed dbSelectArea() so it accepts the Alias "M" as M->

2003-07-22 15:30 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * source/rtl/transfrm.c
    ! Fixed the problem with @E and negative numbers.
      local nValue := -134.24
      msginfo( Val( AllTrim( Transform( nValue, "@E 99,999.99" ) ) ) )
      msginfo( Val( AllTrim( Transform( nValue, "@E99,999.99" ) ) ) )
      Thanks to Enrico Maria Giordano for help in this fix.

2003-07-22 09:46 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/hvm.c
    ! Fixed memory leak of codeblock macro.

2003-07-22 13:15 UTC-0300 Marcelo Lombardo <lombardo@uol.com.br>
  * source/odbc/odbc.c
    + Added New PRG level function:
        SQLCOLATTRIBUTE()

2003-07-22 13:35 UTC+2000 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/hblog.prg
  * source/rtl/hbloginet.prg
  * include/hblog.ch
  * tests/logtest.prg
    ! Fixed name clashes in hblog.ch.
    * Grammar declaration of INIT LOG is a little more strict

2003-07-22 06:30 UTC-0300 Antonio Carlos Pantaglione <toninho@fwi.com.br>
  * contrib/rdd_ads/ads1.c
  * contrib/rdd_ads/adsfunc.c
    % Changes in adsGetValue, adsPutValue and AdsKeyCount() for speed().
      Tested with ADS Local 6.2, not tested with prior versions of ADS.

2003-07-21 18:53 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbvm.h
  * source/vm/hvm.c
    + Added void hb_vmRequestReset( void )

2003-07-21 15:40 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbexprb.c
    * Reverted recenge change which disabled SubStr( <s>, <n>, 1) optimization.

    /* Andi, the change you made was not as per the ChangeLog Entry, can you please expalin
       what problem you tried to solve - do you have a small sample?  */

  * source/compiler/genc.c
    * Reverted recent change which was NOT documented in ChangeLog.

    /*
      Andi could you please explain waht was the purpose of that change?

      Sadly I just wasted more than 12 hours, trying to understand why xHB.exe was no longer working.
      until I finally discovered that HB_BACK_END support was removed from genc.c, and there was no
      ChangeLog Entry to document that change.
    */

2003-07-20 21:57 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * include/thread.h
  * source/vm/hvm.c
  * source/vm/thread.c
    ! Detangled also the FM sequence that tells that some memory is not
      unused; under MT, conOut used the thread's stack. Now the main
      thread stack is kept valid up to the end of the program, even if
      the items are deleted before fm checks for them bein still alive.

2003-07-20 19:50 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/fm.c
  * source/vm/hvm.c
  * source/vm/memvars.c
  * source/vm/thread.c
    ! AT LAST I have fixed xgrab/xfree/stack sequence at initialization
      and closing of the VM. This allows threads to use hb_xgrab family
      function instad of malloc/free to setup their private stacks.
      The fact of using malloc before caused also an internal error in
      hb_xrealloc when stack had to be expanded in an hb_stackPush()
      operations, if statistics were on.
      This also reduces the need of the SAFE_ALLOC mutex, and confines
      it to fm.c, reducing greatly the risk of cross lockings.


2003-07-20 00:01 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * config/w32/global.cf
    ! Wasn't building the directory gcc_mt under CMD environment. Fixed.

  * include/hbdefs.h
    ! gcc is not able to see a typedef in #if defined(), so if the _winnt_h
      is declared, LONGLONG must not be redefined

  * include/hbapi.h
  * include/thread.h
    ! hb_memvarRelese() is now thread-specific

  * source/vm/hvm.c
  * source/vm/memvars.c
  * source/vm/thread.c
    ! fixed vmQuit phase under MT. Still, I have not been able to release
      memvar's data at the end of a thread. Help is needed here;
      For the moment, MT programs using memvars should set them to 0 before
      thread termination.

  * source/vm/fm.c
    + added a comment about thread termination sequence.

2003-07-19 09:19 UTC+0200 Francesco Saverio Giudice <info@fsgiudice.com>
  * utils/hbdict/hbdict.prg
    + Updated hbdict:
      ! Moved Class Definition to end of file to make MAIN() procedure first proc.

2003-07-19 04:20 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * utils/hbdict/hbdict.prg
  * utils/hbdict/i18n/it_IT.hit
    + Updated hbdict:
      + now CTRL arrows go forward/backward 10 items
      + Home/end go to the first/last element
      + The "header" editing is done in a separate window
      + Items are surrounded by ">>" "<<" signs to see whitespaces
      ! using HBEditor() object instad of Memoedit() function
      + F2 key while editing does auto-padding (adds whitespaces
        up to the size of the original string).
      + shadowed windows :-)
    ! Finished italian traslation.

  * source/rtl/teditor.prg
    ! Don't know if that was an error, but calling :Edit() cleared
      the window; the string to be modified become invisible up
      to the first non-arrow key pressed. It went fine by adding
      a RefreshWindow() just before the main Edit() loop.
      Is it right? - I think this is a linux specific issue.

2003-07-19 04:30 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/vm/extend.c
   * source/vm/arrayshb.c
   * source/rtl/space.c
   * source/rtl/abs.c
   * source/rtl/round.c
   * source/rtl/strzero.c
   * source/rtl/strtran.c
   * source/rtl/str.c
   * source/rtl/substr.c
   * source/rtl/chrasc.c
   * source/rtl/left.c
   * source/rtl/replic.c
   * source/rtl/mod.c
   * source/rtl/math.c
     * Minor modification on NUMERIC definition.

     /*
     There are confusions about the following two definitions:

     #define ISNUM( n )  \
        ( hb_param( n, HB_IT_NUMERIC ) != NULL )

     #define HB_IS_NUMERIC( p ) \
        ( ( p )->type & HB_IT_NUMERIC || HB_IS_DATE(p) || ( HB_IS_STRING(p) && (p)->item.asString.length == 1 ) )

     IMO, these definitions are not consistent with the other template.
     I was confused :-(
     */

2003-07-18 19:51 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * include/thread.h
  * source/vm/thread.c
  * source/rtl/filesys.c
    ! Added s_uiLastError to local stack for threads, so that
      the error reported by FError is the last generated by
      a function called in that thread.
    % MT optimization of filesys.c

  * include/Makefile
    + addedd hblog.ch to the list of files to be installed

2003-07-18 10:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
   * source/rtl/memoline.c
	  ! minor fix under linux when using memoline with files with CRLF terminator
	* source/rdd/dbfcdx/dbfcdx1.c
	  ! Reaply Marcelo Lombardo fix to seek empty strings as Per Marcelo Lombardo request

2003-07-18 10:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rtl/transfrm.c
     * Additional "@E" handler to be more Clipper compatible

   * utils/hbtest/rt_trans.prg
     * Change Clipper (expected) return values:

       Calls                    From           To
       Transform(".","@E")      " "            Chr(0)
       Transform("..","@E")     "," + Chr(0)   Chr(0) + Chr(0)
       Transform(",.,","@E")    ",,."          Chr(0) + Chr(0) + "/"
       Transform(".,.","@E")    Chr(0) + ".."  Chr(0) + Chr(0) + "/"
       Transform("OPI","@E .")  Chr(0) + ",."  Chr(0) + Chr(0) + "/"
       Transform("JKL","@E ,")  Chr(0) + "P."  Chr(0) + Chr(0) + "/"

       /*
       I do not know how the original author arrived at the previous results.
       hbtest.exe's error now: 10
       */

2003-07-17 23:11 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/hbxml.c
    ! Processing instructions and directives were missing an
      extra space between the node name and the data.
    * Added an extra space around comments for nicer display.

2003-07-17 22:48 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/txml.prg
    ! Name of unamed programs now defaults to the "basename", or
      the name of the binary program without path and extensions.
      (Tnx Luiz :-)

2003-07-17 21:45 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/txml.prg
    ! In AddBelow() method of class TXmlNode (and related metods),
      the order of objects was wrong, causing the child to become
      the partent of its parent. Fixed.

2003-07-17 21:18 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/thread.c
    ! Main thread had internal unique ID 2. Now is back to 1.

  * source/rtl/hblog.prg
    ! In case the program name is not give in log system, the
      name is assumed to be "Unnamed program" just before the
      open() step.

2003-07-17 10:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rdd/dbcmd.c
     * Modified error handling to allow retry if alias is not exist during
       DBSelectArea() for Clipper compatibility. (Reported by Giovi Verrua)

2003-07-17 08:45 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/vm/hvm.c
     * More Clipper compatible to handle FOR-NEXT loops.

2003-07-16 19:00 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/xharbour.spec
    * small correction

  * xharbour/source/codepage/cdppt850.c
  * xharbour/source/codepage/cdpptiso.c
    ! unclosed comments fixed

  * xharbour/source/rdd/dbfcdx/dbfcdx1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    ! fixed memory leaks in hb_filecase()

2003-07-16 21:30 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rdd/dbfntx/dbfntx1.c
     * Fixed compilation warnings

   * source/vm/memvars.c
   * source/vm/dynsym.c
     * Fixed compilation warnings under MT

2003-07-16 18:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * include/hbexprb.c
     * Modification to SUBSTR( str, n, 1 ) function so that now  n
       should receive "real integer" eg: SUBSTR( "ABC", 2, 1 ) (previously
       passing alphabet as n was accepted)

   * source/vm/hvm.c
     * More change on Run Time Error message

   * utils/hbtest/rt_misc.prg
     * Changed return values of some FOR-NEXT loops to conform with xHarbour
       string-as-array feature.
     * Removed double call to TFORNEXT(NIL,NIL,NIL)

   * utils/hbtest/rt_hvma.prg
     * Changed return values of -("1") to -49 to conform with xHarbour
       string-as-array feature.

2003-07-16 08:50 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * utils/hbtest/rt_array.prg
     * Changed return value of ATail(""): NIL => "" to conform with
       xHarbour string-as-array feature.

   * source/vm/hvm.c
     * Some modifications on hb_vmSelectWorkArea() in order to be more
       Clipper compatible.

2003-07-16 04:50 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rtl/filesys.c
     * Fixed compilation error when X__WIN32__ is defined

2003-07-16 03:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * source/rdd/dbfntx/dbfntx1.c
   * source/rdd/dbfcdx/dbfcdx1.c
     * Add missing type casts

2003-07-15 09:06 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
   * source/rdd/dbfntx/dbfntx1.c
	  source/rdd/dbfcdx/dbfcdx1.c
	  ! Fixed an bug when processing filenames of index file under linux (related to the filecase of paramaters)

2003-07-15 10:20 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * include/hbset.h
     * only define HB_OS_WIN_32_USED when not defined yet.

   * source/compiler/genc.c
   * source/odbc/odbc.c
   * source/rtl/filesys.c
   * source/rtl/hbxml.c
   * source/rtl/regex.c
   * source/rtl/hbcompress.c
   * source/rtl/hbsrlraw.c
   * source/rtl/hbcrypt.c
   * source/vm/inet.c
   * source/vm/hvm.c
     * Fixed compiler warnings

2003-07-15 02:15 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/hbxml.c
  * source/vm/extend.c
    ! Fixed compilation warnings

  * tests/mtstress.prg
    ! Added WITH OBJECT TEST
    ! Tests are now 10000 for test type, for higher stress :-)

2003-07-15 01:25 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/vm/estack.c
  * source/vm/hvm.c
  * source/vm/thread.c
  * source/vm/errorapi.c
    ! fixed initialization and termination issues of the virtual machine
      under MT. Maybe we can reproject it a little better for the future,
      but the current version is working well.

2003-07-14 18:30 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/rtl/achoice.prg
    ! Fix display problem when the len of achoice is only one line.
      nTop == nBottom.
      Reported by Jeremias Luna.

2003-07-14 21:15 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * include/thread.h
  * source/vm/codebloc.c
  * source/vm/memvars.c
  * source/vm/thread.c
  * source/vm/itemapi.c
  * include/thread.h
    ! thread safed private and memvars
    + Added hb_itemClearMT() function for some that is able
      to get another thread's stack to clear a Memvar. This requires
      cooperation of thread.c and memvars.c (that have now some MT specific
      functions).

  * source/vm/estack.c
    ! exit sequence uses hb_threadDestroyStack() (easier developement)

  * source/vm/extend.c
    ! Fixed a warning on longlong

  * source/vm/dynsym.c
    ! Put dynsym threadsafe (at least scanning for existing dynsym)
    % Optimized HB_VM_STACK access. (it FLIES :-)

  * source/vm/inet.c
    ! re-added the signal handler for linux, but using a signal
      that won't be used later on by the service signal handlers

  * source/pp/ppcore.c
    ! Fixed warning in preprocessor

  + tests/mtstress.prg
    ! Stress tests for new MT features.

2003-07-14 19:20 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * makefile.vc
  * makefile.nt
    * inclusion of hblog.prg, hbsyslog.c and hbloginet.prg

2003-07-14 09:55 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * tests/logtest.prg
    ! Fixed visualization and added help on monitor port.

2003-07-14 14:50 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/vm/classes.c
    * Fixed compilation warnings

2003-07-14 09:40 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/hbloginet.prg
    ! Added InetInit at inet log modules.

  * source/vm/inet.c
    ! Sequence for multiple InetInit has been fixed.
    ! Removed signal intercepting SIGUSR1 from linux initialization,
      As the final user would not have been able to modify it (and as
      we are going to provide a direct way to handle this just after
      version .82 is out).

2003-07-14 00:24 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * makefile.bc
    + Added compilation of logger

  * sourvce/vm/thread.c
    ! A variable was initialzied too late in hb_threadInit(), causing
      M$ compiled app to GPF at startup. Fixed

  * source/vm/fm.c
    ! hb_threadInit() was called two times. Fixed

2003-07-13 20:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/compiler/hbpcode.c
    * Fixed compiler warnings

  * source/vm/arrayshb.c
  * source/rtl/strzero.c
  * source/rtl/strtran.c
  * source/rtl/str.c
  * source/rtl/substr.c
  * source/rtl/chrasc.c
  * source/rtl/left.c
  * source/rtl/replic.c
  * source/rtl/round.c
  * source/rtl/abs.c
  * source/rtl/mod.c
  * source/rtl/math.c
  * source/rtl/space.c
    ! Modifications to be Clipper compatible

  * utils/hbtests/rt_array.prg
  * utils/hbtests/rt_misc.prg
  * utils/hbtests/rt_hvma.prg
  * utils/hbtests/rt_str.prg
  * utils/hbtests/rt_stra.prg
  * utils/hbtests/hbtest.prg
    ! Change error message expected to xHarbour specifics.

2003-07-13 21:33 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/hblog.prg
    ! Responsibility to format (add timestamps and the like) messages
      has been moved to channels, as there are some channels that may
      want to use different formattings (i.e. syslog has already a
      timestamp).
    * Syslog now just (and always) format the message with the priority
      level description

  * source/vm/hvm.c
  * source/vm/macro.c
    ! fixed misbehavior of FOR EACH, WITH OBJECT, and macro/codeblocs,
      who often lost elements/parameters in multithreading programs.
      The fix must be "certified", but seems right.

  * include/thread.h
    ! Added several fields to the thread HB_VM_STACK, to hold variables
      needed by each thread to handle FOR EACH, WITH OBJECT and
      macro/codeblocs parameter passing.

  * source/vm/thread.c
    + Added function hb_threadSetupStack() that prepare stacks even if
      they are static (previously hb_threadCreateStack() returned a
      newly allocated stack).

  * source/vm/estack.c
    ! hb_stackInit() Initializes threads() in MT. This allows hb_stack to be
      initialized exactly as any other stack, simplifying mantainance.

  * source/rtl/Makefile
  * source/rtl/hblog.prg
  + hbloginet.prg
    + Added two internet bound log channel classes. HB_LogEmail can send an
      email in case of log to be sent to administrators. HB_LogInetPort
      waits for a connection incoming on an internet port ( default to 7761 ).
      The connected client can then receive live feeds on logs; the port can
      accept any number of connection; this class does not provides security
      (it can be provided by deriving a subclass, or by system policies as
         firewalls).
      HB_logInetPort is meant for an application to have monitors that can
      display it's status when and attach/detach randomly.

      Both the classes works in ST and MT mode, but HB_LogInetPort will have
      a delay of 50 Msecs for each log in ST.

  * include/hblog.ch
    + Added PP instruction to handle the new classes in standard log
      initialization.

  * tests/logtest.prg
    + Added tests for inet accept and emailer.

2003-07-13 15:25 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * include/hbexprb.c
    ! Fix implementation of HB_EA_PUSH_POP in hb_compExprUseOr.
      This fix resolve a PCODE generation error reported at 9/7/2003

2003-07-13 15:20 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/rtl/val.c
    ! Correction in HB_TRACE()

2003-07-13 15:15 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/vm/thread.c
    ! Fix declaration of function to avoid warning in BCC32
      'function with no prototype'

2003-07-13 15:00 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * include/hbapi.h
  * include/hbapifs.h
  * include/hbapiitm.h
  * include/hbvmpub.h
  * source/rtl/direct.c
  * source/rtl/hbffind.c
  * source/rtl/hbsrlaw.c
  * source/vm/arrays.c
  * source/vm/extend.c
  * source/vm/hvm.c
  * source/itemapi.c
    ! Fix several bug in some new functions with LONGLONG support.
    ! add LONGLONG support in more functions.
    * change HB_LONG_DOUBLE_OFF to HB_LONG_LONG_OFF.
    * change name of var to respect conventions in new LONGLONG functions.

2003-07-11 00:00 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/hblog.prg
    * Now LOG command (PP short for HB_StandardLogMessage() ) can be
      used also if LOG is not initialized. This will cause log system
      not to log anything, but will allow to create user-defined libraries
      that uses LOG but really log something only if the main application
      decide to use the log system.

  * tests/logtest.prg
    ! fixed some misbehaving in visualization/interface.

2003-07-10 23:10 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * include/hbdefs.h
    ! Fixed ULONGLONG under windows.

2003-07-10 17:10 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/empty.c
    ! Added support for LONG LONG type (without it, any check on a LONG
      LONG for EMPTY was true).

2003-07-10 16:20 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * include/hbdefs.h
    ! Fixed ULONGLONG under windows.

2003-07-10 14:34 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * include/hbapi.h
    ! fixed LONG LONG api name ( hb_itemGetNDL and similar names was from the
      old "long double" soupport)
    ! HB_IT_LONGLONG is now 0x0040; 0x0015 (as it was before)
      would have fooled  many bit-oriented ifs.

  * include/hbdefs.h
    + Added ULONGLONG for unsigned long long integers.

  * source/rtl/hbsrlraw.c
    + Added LONG LONG suport

  *  tests/serialize.prg
    + Added check to serialize Directory() return, containing a long long.

2003-07-10 12:45 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  + include/hblog.ch
  + include/hblogdef.ch
  + source/rtl/hblog.prg
  + source/rtl/hbsyslog.c
    + Added HB logging system

  * source/rtl/Makefile
    + Added log compilation support in rtl

  * tests/Makefile
    ! More strict rules to compile test files (-es2 -w2 added to cmd line)

  + tests/logtest.prg
    + Added a test to show the log system

2003-07-10 14:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
   * include/hbver.h
     ! Change CVS log entry information for Build 82

2003-07-08 00:07 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
   * source/rtl/philes.c
     ! Fixed path separator definitions ( comment in NG by Gianluca
       Piemonte):
        -HB_OsPathSeparator() --> "/" or "\".. is the separator that
         keeps together a path

        -HB_OsPathListSeparator() --> ";" or ":" Is the character
         (commonly) used to separate two or more complete paths in a
         variable, or in a list of paths

        -HB_OsPathDelimiters() --> "\/:" or "/" Is a string containg
         characters that should not be used in paths, as they are
         meant for splitting/parsing paths.

2003-07-09 17:45 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * makefile.bc
    * Change default flags from /P512 to $(ARFLAGS)

2003-07-09 01:13 UTC+0200 Francesco Saverio Giudice <info@fsgiudice.com>
  * makefile.bc
    ! Modified the linking process of OBJ files
      to fix a command line parse error for windows.
      Now make auto-generate temp files.

2003-07-09 05:20 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * makefile.bc
    Change the linking process of OBJ files in such a way so that now
    TLIB.EXE is called only ONCE for making a library.

2003-07-09 03:10 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * makefile.nt
  * makefile.vc
  * hrbdll.bc
  * hrbdll.vc
    + added compilation of hbbitfield.c

2003-07-08 07:51 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * makefile.bc
    + added compilation of hbbitfield.c
    (please, someone add it also to makefile.vc)

  * tests/bitfield.prg
    ! fixed a little typo

2003-07-08 07:51 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/rtl/Makefile
  + source/rtl/hbbitfield.c
    + Added following functions:
      HB_BitAnd( nOperand1, nOperand2 ) --> nResult
      HB_BitOr( nOperand1, nOperand2 ) --> nResult
      HB_BitXor( nOperand1, nOperand2 ) --> nResult
      HB_BitNot( nOperand ) --> nResult
      HB_BitSet( nOperand, nBitToSet ) --> nResult
      HB_BitReset( nOperand, nBitToReset ) --> nResult
      HB_BitShift( nOperand, nPositions ) --> nResult
      HB_BitIsSet( nOperand, nBitToCheck ) --> lIsSet

      All this functions automatically converts integers and
      long integers so that the returned result has the same
      capacity as the widest parameter.
      Also, check for numeric int or long parameter passing
      is done, or an error is risen.
      nPosition parameter in HB_BitShift can be positive (to
      shift left) or negative (to shift right).

  + source/rtl/bitfield.prg
    + Added test for bitfield operations

  Update & check for windows is on its way.


2003-07-07 11:40 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * contrib/Whoo/source/TCBrowser.prg
    * Minor formatting.

  * source/vm/hvm.c
    ! Fixed memory leak involving codeblocks from Methods.

2003-07-07 15:22 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/rtl/philes.c
    + Added function HB_OsPathSeparator() --> cPathSep, that returns
      the separator held in OS_PATH_DELIMITER_LIST (usually "/" or "\").
      Really a MUST to do portable prg programs.
      A compendium for HB_OSNewLine() (Luiz: should go in the same
      directory of documentation).


2003-07-07 01:35 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/compiler/harbour.c
    ! Add type of 7th parameter in DBUSEAREA.
  * source/pp/pptable.c
    ! Fix name of parameters in translate USE => dbUseArea()

2003-07-07 00:01 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
    include/hbapi.h
    include/hbvmpub.h
    include/hbapiitm.h
    source/vm/itemapi.c
    source/vm/extend.c
    source/vm/arrays.c
    source/rtl/direct.c
    source/vm/hvm.c
    + Some functions was ajusted for long longs values(and api renamed  to match the type)

2003-07-06 19:30 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/itemapi.c
    * Corrected typo which cause MSVC compile error.

  * source/vm/errorapi.c
    - Removed invalid use of hb_langSelect( NULL ) with hb_langID().
      /*
         This fixes "Internal error: invalid language selected."
      */

2003-07-07 03:48 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/vm/thread.c
    ! removed some warnings
  * source/vm/itemapi.c
    ! When defining HB_LONG_DOUBLE_OFF to disable the long double
      extensions, was not compiling in line 1500. Fixed

2003-07-06 22:00 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  + bin/bld_solib.sh
  + doc/linuxso_howto.txt
    + Added a script that builds and install shared objects for linux
      (and other ELF systems) from static .a libraries. Uses
      Przemyslaw's utility and wraps it in a user-friendly
      installer. The documentation help to see how to use shared
      objects to build xharbour applications.

      TODO: I'll add a doc to explain the users how to create .so
      libraries from their own application libraries.

2003-06-07 16:25 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * contrib/rdd_ads/ace.h
    ! Fix warning in declaration of function
  * contrib/rdd_ads/ads1.c
  * contrib/rdd_ads/adsfunc.c
    ! Fix error and potential error of AE_INSUFFICIENT_BUFFER in
      some function.
      The len of buffer should include the NULL char.
    ! Fix, now adsGoTo() test if the new position is EOF.

2003-07-06 16:30 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * source/vm/hvm.c
    * Added some check for Long Long values when required guarded by #ifndef HB_LONG_DOUBLE_OFF

2003-07-06 16:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * source/vm/itemapi.c
    * minor fix regard last commit
  * utils/hbmake/hbmake.prg
    ! Minor fix to Screen position

2003-07-06 14:40 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * source/rtl/transform.c
    include/hbapi.h
    include/hbapifs.h
    include/hbvmpub.h
    include/hbapiitm.h
    source/vm/itemapi.c
    source/vm/extend.c
    source/vm/arrays.c
    source/vm/hvm.c
    + Some functions was ajusted for long longs values
    * changed support for long double  values into long long

2003-07-06 12:15 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * utils/hbtest/hbtest.prg
    ! set default codepage to EN

2003-07-05 14:40 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
*source/rtl/direct.c
*source/rtl/hbffind.c
*source/rtl/transform.c
   * Added support for long Doubles values
*include/hbapi.h
 include/hbapifs.h
 include/hbvmpub.h
 include/hbapiitm.h
   + Prototypes for long doubles apis
*source/vm/itemapi.c
 source/vm/extend.c
 source/vm/arrays.c
   + Added Follow apis implementions
    long double   HB_EXPORT hb_itemGetNLD        ( PHB_ITEM pItem );
    PHB_ITEM      HB_EXPORT hb_itemPutNLD        ( PHB_ITEM pItem, long double dNumber );
    PHB_ITEM      HB_EXPORT hb_itemPutNLDLen     ( PHB_ITEM pItem, long double dNumber, int iWidth, int iDec );
    long double   HB_EXPORT hb_parnld( int iParam, ... ); /* retrieve a numeric parameter as a double */
    void  HB_EXPORT  hb_retnld( long double dNumber ); /* returns a double */
    void  HB_EXPORT  hb_retnldlen( long double dNumber, int iWidth, int iDec ); /* returns a double, with specific width and decimals */
    void  HB_EXPORT  hb_stornld( long double dValue, int iParam, ... ); /* stores a double on a variable by reference */
    long double   HB_EXPORT hb_arrayGetNLD( PHB_ITEM pArray, ULONG ulIndex ); /* retrieves the double value contained on an array element */
    Ajusted the hb_itemStr() api to proper handle of Long Doubles numbers
* source/vm/hvm.c
   + Some functions was ajusted for Long doubles values


2003-07-05 10:35 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
 * source/rdd/dbfntx/dbfntx1.c
  * Fix memory leak on ntxOrderListAdd()

2003-07-05 10:10 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
 * source/rdd/dbf1.c
  * Sync  with follow change in harbour
    ! Problem fixed for the cases when the field name exceeds 10 characters.
    * Codepage translation added for memo fields.

 * source/rdd/dbfntx/dbfntx1.c
  * Sync with this change in harbour
      ! Bug fixed in ntxZap.

2003-07-04 18:20 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/rdd/dbcmd.c
  * source/vm/thread.c
    ! Fixed some spelling in error rising.

2003-07-04 12:33 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/rtl/txml.prg
    + Added contestualization, that is a needed feature for init
      file parsing.
    ! Now iterators are well structured in an object oriented
      hierarcy.

  * incudle/hbxml.ch
    - removed uneeded iterator types

  * source/vm/errorapi.c
    ! When calling hb_errRT_BASE with a NULL in any of the arguments
      (most probably because the PRG program passed a NIL variable)
      there was a segfault. Fixed

  * doc/hbxml.txt
    ! Updated with current API.


2003-07-02 14:50 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source/rtl/tbrowse.prg
    ! Fix bug in ::ForceStable()
      Reported by Luiz Culik
    ! Fix bug in ::Configure() to Add, Modificate or Delete Columns.

2003-07-02 12:07 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * doc/hbxml.txt
    ! Updated with current API.

  * source/rtl/txml.prg
    ! an empty FindFirst() was not scanning all the DOM tree.
      Fixed.


2003-07-01 15:09 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * contrib/Whoo/source/TOpenDialog.prg
  * contrib/what32/source/_wincdlg.c
  * contrib/what32/source/wincdlg.prg
    ! Fixed, optimized and some formatting.

2003-07-01 01:16 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  - contrib/Whoo/source/TControl.prg
  - contrib/Whoo/source/TCustomControl.prg
  - contrib/Whoo/source/TCustomImageList.prg
  - contrib/Whoo/source/THintWindow.prg
  - contrib/Whoo/source/TWinControl.prg
  + contrib/Whoo/source/controls.prg
    - Folded TControl, TCustomControl, TImageList, THintWindow and TWinControl into controls.prg
  * contrib/Whoo/makefile.bc
    * Updatated as per above.

  * source/rtl/set.c
    + Added support for 3rd paramater lAppend to SET( _SET_TRACEFILE, <NewFile>, [<lAppend>] ).
      /* Now when switching between files, content may be preserved. */

  * source/vm/hvm.c
    ! Fixed 2 GPF risks, related to a BREAK ( or Throw() ) issued from within a FOR EACH ... or WITH OBJECT ...
      /*
         NOTE! I discovered that FOR EACH ... and WITH OBJECT ... are NOT Thread Safe - we need to move:
         hb_vm_wEnumCollectionCounter, hb_vm_aEnumCollection, and hb_vm_awEnumIndex, to HB_VM_STACK.
         Same for: hb_vm_aWithObject, and hb_vm_wWithObjectCounter.

         Giancarlo, can you please address this?
      */

2003-07-01 02:10 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source\lang\msges.c
  * source\lang\msgeswin.c
    ! Corrected date format.
  * source/rtl/dbedit.prg
    ! Behavior more compatible with Cli**er.
      Now, the user function is called to report idle state correctly.
  * source/vm/fastitem.c
    ! Fix name of function in HB_TRACE_STEALTH().

2003-07-01 03:40 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  + doc/hbi18n.txt
    + Added some sort of documentation for i18n() and companions.

2003-07-01 00:50 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * include/hbxml.ch
  * include/hbxml.h
  * source/rtl/hbxml.c
  * source/rtl/txml.prg
    + added support for &amp; like standard xml escape, ( both in input
      and in output ) with relative error detection.
    ! Fixed various memory leacks.

  * tests/xmltest.prg
  * tests/xmltest.xml
    ! added test for escapes.

2003-06-30 19:30 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * include\hbapi.h
    ! Corrected bug in macro HB_ISOBJECT()

2003-07-01 04:30 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/vm/hvm.c
    ! Put b_MouseEnable into #if defined(HB_OS_WIN_32_USED) || defined(__WIN32__)
      loop to correct non-compilation under non-Windows platform.

  * source/rtl/filesys.c
    ! Minor fix to correct MSVC's curdrive() function which always returns 'A'.

2003-06-30 10:00 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * contrib/rdd_ads/ace.h
  * contrib/rdd_ads/ads1.c
  * contrib/rdd_ads/adsfunc.c
    * Removed FAR and corrected compile warnings.

  * contrib/what32/source/_WinTree.c
  * contrib/what32/source/_wincall.c
  * contrib/what32/source/_wincdlg.c
  * contrib/what32/source/_winclpb.c
  * contrib/what32/source/_wincomm.c
  * contrib/what32/source/_wincret.c
  * contrib/what32/source/_windate.c
  * contrib/what32/source/_windlg.c
  * contrib/what32/source/_windll.c
  * contrib/what32/source/_winhead.c
  * contrib/what32/source/_wininet.c
  * contrib/what32/source/_winlv.c
  * contrib/what32/source/_winmapi.c
  * contrib/what32/source/_winmem.c
  * contrib/what32/source/_winmenu.c
  * contrib/what32/source/_winmeta.c
  * contrib/what32/source/_winmisc.c
  * contrib/what32/source/_winmsg.c
  * contrib/what32/source/_winprn.c
  * contrib/what32/source/_winreg.c
  * contrib/what32/source/_winshell.c
  * contrib/what32/source/_winsock.c
  * contrib/what32/source/_winsys.c
  * contrib/what32/source/_wintab.c
  * contrib/what32/source/_winwnd.c
  * contrib/what32/source/errorsys.prg
  * contrib/what32/source/wincore.prg
    * Removed FAR and corrected compile warnings.

  * source/codepage/cdp_tpl.c
  * source/codepage/cdpesdos.c
  * source/codepage/cdpeswin.c
  * source/codepage/cdpgedos.c
  * source/codepage/cdpgewin.c
  * source/codepage/cdppl852.c
  * source/codepage/cdppliso.c
  * source/codepage/cdpplmaz.c
  * source/codepage/cdpplwin.c
  * source/codepage/cdppt850.c
  * source/codepage/cdpptiso.c
  * source/codepage/cdpru866.c
  * source/codepage/cdprukoi.c
  * source/codepage/cdpruwin.c
  * source/codepage/cdpsl852.c
  * source/codepage/cdpsliso.c
  * source/codepage/cdpslwin.c
  * source/codepage/cdpsrwin.c
    + Added support fo HB_STATIC_STARTUP

  * source/lang/msg_tpl.c
  * source/lang/msgca.c
  * source/lang/msgcs852.c
  * source/lang/msgcsiso.c
  * source/lang/msgcskam.c
  * source/lang/msgcswin.c
  * source/lang/msgde.c
  * source/lang/msgdewin.c
  * source/lang/msgen.c
  * source/lang/msgeo.c
  * source/lang/msges.c
  * source/lang/msgeswin.c
  * source/lang/msgeu.c
  * source/lang/msgfr.c
  * source/lang/msggl.c
  * source/lang/msghe862.c
  * source/lang/msghewin.c
  * source/lang/msghr852.c
  * source/lang/msghriso.c
  * source/lang/msghu852.c
  * source/lang/msghucwi.c
  * source/lang/msghuwin.c
  * source/lang/msgid.c
  * source/lang/msgis850.c
  * source/lang/msgit.c
  * source/lang/msgko.c
  * source/lang/msgpl852.c
  * source/lang/msgpliso.c
  * source/lang/msgplmaz.c
  * source/lang/msgplwin.c
  * source/lang/msgpt.c
  * source/lang/msgro.c
  * source/lang/msgru866.c
  * source/lang/msgrukoi.c
  * source/lang/msgruwin.c
  * source/lang/msgsl852.c
  * source/lang/msgsliso.c
  * source/lang/msgslwin.c
  * source/lang/msgsr852.c
  * source/lang/msgsriso.c
  * source/lang/msgsrwin.c
  * source/lang/msgzhb5.c
  * source/lang/msgzhgb.c
    + Added support fo HB_STATIC_STARTUP

  * source/rtl/gt_tpl/gt_tpl.c
  * source/rtl/gtcgi/gtcgi.c
  * source/rtl/gtcrs/gtcrs.c
  * source/rtl/gtnul/gtnul.c
  * source/rtl/gtpca/gtpca.c
  * source/rtl/gtsln/gtsln.c
  * source/rtl/gtstd/gtstd.c
  * source/rtl/gtwin/gtwin.c
    + Added support fo HB_STATIC_STARTUP

  * source/rtl/cdpapi.c
    + Added support fo HB_STATIC_STARTUP

  * source/rtl/langapi.c
    + Added "Internal error: invalid language selected.\n" in hb_langSelect() on invalid language.

  * source/vm/classes.c
    + Added support for aScan() in hb_clsValidScope()

2003-06-30 05:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/vm/hvm.c
    * Minor correction on inconsistent linkage for hb_vmPushLongConst()
      ( was declared public while prototype is a static function )

2003-06-29 09:30 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/vm/hvm.c
    + Add guards to hb_xfree() calls in function hb_vmReleaseLocalSymbols()
      to avoid hb_xfree() trying to release a NULL pointer.
    + Add function HB_FUNC( HB_NOMOUSE ). This is a dummy function which
      will be added in symbol table upon request.
      Now Win32 Console Mode can REQUEST HB_NOMOUSE from a PRG file to
      disable mouse. This is of the same functionality as //NOMOUSE.

  * include/hbcomp.h
  * source/compiler/hbfix.c
  * source/compiler/genc.c
  * source/compiler/hbpcode.c
    + Add 4th parameter to function hb_compPCodeEval()
    + Add function hb_compPCodeList() for pCode listing

  /*
  /gc3 flag extended to generate .p file

  .p file will be created during compiling a prg file with /gc3 flag. The file
  contains information about xHarbour pCode used in such prg file. The file is
  created in conformity with common INI file for further manipulation ie:

  [MAIN]
  HB_P_FOO=2
  HB_P_BAR=1
  TYPES=2
  CALLS=3

  The section name denotes function name. The entries denote pCode "name" and
  the values thereof denote number of "calls/usage" and listed on the basis
  of "First Used First Listed". The last two entries:

    - TYPES=n, the value denotes number of pCode "types" in used.
    - CALLS=n, the value denotes total number of pCode "calls".

  .p file may be interested for those who are in the process of optimizing
  a prg file. However, we have to know a bit about how pCode processing is
  done. File source/vm/hvm.c is the exact reference for those interested
  in studying the vm engine. The discussion thereof is beyond the scope of
  this information. As a rule of thumb, theoritically, the lesser pCode
  types and calls, the faster the functions in the related prg file will
  execute.
  */

2003-06-28 19:19 UTC-0300 Horacio Roldan <harbour_ar@yahoo.com.ar>
  * source/rdd/dbfcdx/dbfcdx1.c
    ! Changed fixed of bug reported by Bob Owen
    ! Fixed seek bug reported by Jorge Mason

2003-06-28 18:50 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * source/rdd/dbfcdx/dbfcdx1.c
    ! Fixed Gpf's reported by Bob Owen (problem was beteen lines 3984 and 3991)
      it was attemting to free an NULL Page pointer
  *source/rtl/mouseapi.c
    ! minor Fix static int    s_iLeftButton = 1;  --> static int    s_iLeftButton = 0;

2003-06-28 10:20 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * source/rdd/dbcmd.c
    ! fixed GPF on OrdListAdd() (Cause non successfully open of index file)

2003-06-27 19:00 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * contrib/hbzlib/*(allfiles)
    * Minor fixes to compile under linux and Gcc 3.2.x
  + contrib/hbzlib/Makefile
    * New makefile to build ziparchive.a on linux

2003-06-27 22:53 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/make_tgz.sh
  * xharbour/xharbour.spec
  * xharbour/bin/!pack_src.sh
    * libct included

  * xharbour/bin/hb-mkslib.sh
    * minor modification for object moudules with the same name

  * xharbour/source/rtl/gtcrs/gtcrs.c
    * minor modification in hb_gt_Out{Std,Err}() to remove some
      side effect. Complex soultion I'll commit in two weeks

2003-06-27 10:40 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * bin/!pack_src.bat
    bin/!pack_src.sh
    bin/!pack_bin.bat
    make_tgz.sh
    include/hbver.h
     * Updated to build 0.82.0
  * xharbour.spec
    ! updated version to 0.82.0
  * All files Tagged with Build Xharbour082

2003-06-26 21:22 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/compiler/genc.c
    * Minor fix to HB_STATIC_STARTUP support and added HB_BACK_END support.

  * source/common/hbver.c
    * HB_BACK_END support.

  * source/rdd/dbfntx/dbfntx1.c
    * Minor warning fixed.

  * source/vm/errorapi.c
    ! Fixed serious GPF trap.
      /*
         Note I found it when it seems that:

           hb_langDGetItem( HB_LANG_ITEM_BASE_ERRDESC + ulGenCode )

         returns NULL when ulGenCode was: EG_NOVAR.

         I don't no if this is a reproducable issue or not, but it seems we need to check hb_langDGetItem().
      */

2003-06-26 14:40 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * All files RETagged with Build Xharbour-0.81

2003-06-26 14:10 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/common/hbver.c
    ! fixed some minor mistakes in information report by hb_verBuildInfo()
    * reporting memory tracing and statistics now dynamically checks type
      of used fm module.

  * xharbour/source/compiler/harbour.c
    * added empty hb_xquery() for above changes.

  * xharbour/source/vm/fm.c
    added two function HB_FUNCNAME(HB_FM_STAT()) and
    HB_FUNCNAME(HB_FM_NOSTAT()) for choosing proper FM module.
    Now user can add to his .prg sources: REQUEST HB_FM_[NO]STA and
    force to link one of the FM module using shared or static libs.

  * xharbour/source/vm/cmdarg.c
    * //INFO extended to report type of FM module

  * xharbour/source/rtl/gtcrs/gtcrs.c
  * xharbour/source/rtl/gtcrs/gtcrs.h
    * small changes to allow working hb_conOutErr() and hb_conOutStd()
      after hb_conRelease()

  * xharbour/make_tgz.sh
  * xharbour/xharbour.spec
    * changes for linking with DEBUG and new FM lib.

2003-06-25 20:56 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/pp/pptable.c
    + Added Clipper 5.3 GET support (burned-in hbgetcmt.ch)

  * source/vm/hvm.c
    ! Fixed support for HB_P_IVARREF for virtual instance variables implemented as methods.

2003-06-25 18:27 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbmath.h
    + Added #ifndef HB_NO_MATH_HANDLER guard.

  * source/pp/ppcore.c
    - Commented out #include <sys/timeb.h> (not sure why it was used)
      /* If it's needed on some platfor/compiler please guard it with appropriate #if whwn uncommenting. */

  * source/rdd/dbf1.c
  * source/rdd/delim1.c
  * source/rdd/sdf1.c
  * source/rdd/dbfcdx/dbfcdx1.c
  * source/rdd/dbfntx/dbfntx1.c
    + Added support for HB_STATIC_STARTUP

  * source/rtl/cdpapi.c
    ! Corrected strdup() to hb_strdup()

  * source/rtl/terror.prg
    ! Corrected ProcName, ProcLine and Thread properties initialization.

  * source/rtl/win32ole.prg
    - Removed 'far' qualifier.

  * include/hbgetcmt.ch
    + Added missing support for @ ... GET ... MESSAGE

2003-06-25 09:40 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * hrbdll.bc
  * hrbdll.vc
    * removed /DHB_NO_DEFAULT_API_MACROS /DHB_NO_DEFAULT_STACK_MACROS
    * added some missing modules - hrbdll.bc may need testing.

2003-06-24 22:30 UTC-0300 Luiz Rafael Culik <culikr@uol.com.br>
  * bin/!pack_src.bat
    bin/!pack_src.sh
    bin/!pack_bin.bat
    include/hbver.h
     * Updated to build 0.81.0
  * xharbour.spec
    ! updated version to 0.81.0
    ! Added portuguese description
  * All files Tagged with Build Xharbour-0.81

2003-06-24 21:50 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/include/Makefile
    + added some missing headers:
      classex.ch, cstruct.ch, hbrpc.ch, hbxml.ch, math.ch, tbrowse.ch
    To developpers: If you add some headers which should be used by
    xharbour users please remember to update the Makefile in include
    directory.

2003-06-24 14:15 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
  * makefile.vc
  * makefile.nt
    * put in synch.

2003-06-24 18:35 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/rtl/hbxml.c
    * fixed some castings

2003-06-24 11:17 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/vm/hbi18n.c
    ! Was using FO flags instead of FC flags in creating output files.
      ( causing outputfile to be read-only). Fixed.

2003-06-23 15:35 UTC_0700 Andi Jahja <andijahja@harbour-id.net>
   * makefile.bc
   * makefile.vc
   * make_b32.bat
   * make_vc.bat
     * Changes to create optimized libraries

2003-06-23 20:33 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/cstruct.ch
  * source/rtl/cstruct.prg
    % Optimized classes creation.
    + Added logic to set the correct module where the structures where created.

  * source/vm/hvm.c
    + Added HB_SetWith( [oNewWith] )
      /* This function is the expression equivalent of WITH OBJEC <oNewWith> when a paramater is supplied
         and it's the equivalent of END WITH when no paramater is supplied (in that case it returns that
         poped WITH object.

         This allows for an elegant  simulation of a temp var in PP translation where before you'd be
         forced to create a memvar like __1 to store some intermdeiate value for later use in the
         translation. This way is much faster, and avoids possible namespace issues.
       */

  * source/pp/pptable.c
    + Added logic to set the correct module where LITERAL AssociativeArray was created in appropriate
      #translate, using new HB_SetWith().

  * source/rtl/tclass.prg
    + Added logic to set the correct module where the HBClass meta class was created.

  * source/rtl/tobject.prg
    * Minor formating.

2003-06-24 03:41 UTC+0100 Francesco Saverio Giudice <info@fsgiudice.com>
  * tests/i18ntest.prg
    ! Fixed a variable name typo

  * utils/hbdict/hbdict.prg
    ! Fixed a variable name typo
    + Added control to check changes and prevent exit without saving

  * utils/hbdict/bld_b32.bat
  * utils/hbdict/make_b32.bat
    + Added batch file to compile under Windows/BCC

2003-06-24 02:40 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * include/hbi18n.h
  * source/vm/hbi18n.c
    + Added support for symbolic language names (stored in the
      HIT headers).
    ! Fixed some memory leaks.

  * tests/i18n/fr_FR.hit
  * tests/i18n/it_IT.hit
  * tests/i18ntest.prg
    + Added test for switching languages in runtime

  * utils/hbdict/hbdict.prg
    ! Duplicates stings in HIL are merged before passing control to the
      program.
    ! IF the "output" file is already present, it's former content is then
      read and put in the table that is being edited. This allows to modify
      previously existing versions of HIT files having new HIL (generated i.e.
      by a different compilation).
    ! Up and Down arrows are now swapped.


2003-06-24 00:40 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rtl/gtcrs/gtcrs.c
    * minor modyfication

2003-06-24 00:40 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/vm/hbi18n.c
    ! More cast fixed;
    ! Removed a useless lseek()

2003-06-23 14:51 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rdd/nulsys/nulsys.prg
    + Added FieldPos() -> 0

2003-06-23 22:26 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * include/hbi18n.h
  * source/vm/hbi18n.c
  * source/rtl/hbxml.c
    ! Using hb_fs* api instead of os dependant open*() to access
      file handles.

  * source/vm/hvm.c
    ! hb_i18nInit() and hb_i18nQuit() had been erroneously removed
      duiring a previous commit, thus disallowing automatic I18N
      setting at program startup. Now they have been put in again.

2003-06-23 11:49 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbinit.h
  * source/compiler/genc.c
    * Minor optimization by means of generic HB_STATIC_STARTUP

2003-06-23 20:02 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/include/hbset.h
    * move #define HB_OS_WIN_32_USED
      inside
      #if defined(HB_OS_WIN_32) || defined(__WIN32__); #endif
      This macro was set for all platforms so last Andi changes
      break compilation for all platforms which doesn't use GTWIN

2003-06-23 18:00 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/make_gnu.sh
  * xharbour/xharbour.spec
    * minor modification

  + xharbour/make_tgz.sh
    + new script make_tgz.sh to create binaries for Linux distribution
      which doesn't support RPM

  * xharbour/source/rtl/gtcrs/gtcrs.c
    * minor modification

2003-06-23 21:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/compiler/hbusage.c
  * source/compiler/cmdcheck.c
  * source/compiler/harbour.c
    + Add option to create *.var file ( /gc3 )

  /*
     VAR file is a compilation by-product created by using /gc3 option.

     Using /gc3 option, harbour.exe will produce C file in verbose mode
     (/gc2) and will also generate VAR file, thus /gc3 is actually /gc2
     _PLUS_ VAR file creation.

     VAR file will be created in the same directory with PRG file. VAR file
     is formatted in such a way to resemble common INI file to make it easy
     for further manipulation, eg.:

     // main.prg
     proc main
     local x := 1, y := 2
     x := y

     // main.var
     [MAIN]
     X=1
     Y=2

     The main purpose of creating VAR file is to enable developer to review
     how effective he is using LOCALs in PRG file. The above example shows
     that variable X is used once ( X=1 ) and variable Y is used 2 times
     (Y=2). The INI section name, MAIN, denotes function name while the entries,
     X and Y, denote LOCAL var names and the values of X and Y denote how many
     times they are used in main.prg under function MAIN. The entries and
     the values are simply picked-up from members of pVar: szName and iUsed.

     Developers should have taken note when the value of any entries is 0,
     which means unused, as too much unused variables would only cause less
     productivity, thus degrade performance because the VM engine has to
     process pCode for nothing. Statics, Publics, Privates and Globals are not
     listed on the ground that they would not as many as locals, thus easy to
     control. Furthermore, there is a rule of thumb (Clipper) that using
     Publics or Privates would degrade performance to a certain degree, hence
     the use of them is always discouraged. [ Do not ask me why please :-) ]

     I am not sure if this feature will be useful for others, but as for me,
     it is quite useful in attempts to remove un-needed locals from my PRG
     files so that I do not have to "walk" the file line-by-line. It is easy
     to look for un-needed variable if the PRG is small, but if the PRG is
     some tens of KB or when we have to analyze a project of many PRGs which
     comprise a LIBrary or a BIG exe, then this feature might be our good
     friend :)

     Depending on developer's creativity, a small routine can be programmed
     to grab information from .var files produced from a (big) project and
     summarize them in such a way to produce an overall picture
     [ "management summary" ;-) ] of that project.

     Nevertheless, this may look silly to experts and if this is the case,
     what you need to do is "do not use /gc3". ;-)
  */

2003-06-22 00:23 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/classes.c
    - Removed 1 stray TraceLog() line.

2003-06-23 09:40 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/vm/cmdarg.c
  * source/rtl/gtapi.c
  * source/rtl/gtwin/gtwin.c
    + Add support for executable command line //NOMOUSE to disable mouse on
      Win32 console mode

2003-06-23 05:25 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/vm/hvm.c
    ! move ulClock of hv_vmDo() into #ifndef HB_NO_PROFILER loop
    ! move ulClock of hv_vmSend() into #ifndef HB_NO_PROFILER loop
    ! move pMethod of hv_vmSend() into #ifndef HB_NO_PROFILER loop

2003-06-23 04:15 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/compiler/harbour.c
    ! Correction on previous changes so that now harbour.exe only
      exit upon error and ambiguous reference ( /es2 )

2003-06-22 18:20 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/vm/thread.c
    * ThreadSleep() and low level hb_threadSleep() are moved outside
      the big ifdef that cuts away threading in ST. This makes
      the ThreadSleep function available also in ST apps.
    * Added SecondsSleep( nSecs ) -> NIL that accepts a float parameter
      as a second count, and pass them to hb_threadSleep() in
      milliseconds. The floaty parameter is compatible with Seconds()
      family functions and is avaiable for future expansions (i.e. when
      OS will support sleeps below the millisecond interval).

2003-06-21 00:35 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rtl/getsys.prg
  * source/rtl/listbox.prg
  * source/rtl/mssgline.prg
  * source/rtl/tget.prg
  * source/rtl/tgetlist.prg
    ! Clipper compabtibility fixes.

  * source/rtl/traceprg.prg
    + Added ProcFile() support.

2003-06-22 05:00 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/compiler/harbour.c
    ! Allow harbour.exe to generate C source file from PRG file despite of
      warnings. This is implemented in order to be compatible with Clipper
      (and most C compilers too). Now harbour.exe can use /w2 or /w3 flags.
      One benefit of this implementation is that programmer can see how
      productive he is in manipulating local variables. This implementation
      may probably have effect on strong-type-coding-style when it become
      effectively implemented.

2003-06-21 17:01 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/vm/hbi18n.c
    ! Fixed castings
    ! Fixed include specific to windows (not compiling on linux)

2003-06-21 00:35 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/classes.h
  * source/vm/classes.c
  * source/vm/hvm.c
    + Added support #ifndef HB_NO_PROFILER guard for Profiler code.
      /* HB_NO_PROFILER should be defined if you want to EXCLUDE Profiler,
         eitherway required functions will be present (just empty). */

2003-06-21 09:15 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * source/vm/hbi18n.c
    ! Fixed compilation under windows

2003-06-21 08:58 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * include/hberrors.h
  * source/compiler/cmdcheck.c
  * source/compiler/harbour.c
  * source/compiler/hbgenerr.c
    % Emproved support for -j switch, both in reporting and checking.
    ! -jfilename is now working (HILoutput is sent to filename)
    % Using now HIT format to produce HIL files, so it is posible to
      have the same API to manage both.
    ! If an HIL file already exists, the data is appended. This causes
      proliferation of the list on multiple make, unless the file is
      intentionally removed.

  * include/hbi18n.h
  * source/vm/hbi18n.c
    % Api rationalization.

  * source/vm/hvm.c
    ! Added support for initialization of i18n at startup and shutdown

  + tests/i18n/fr_FR.hit
  + tests/i18n/it_IT.hit
    ! Test of international dictionaries for i18ntest. Set environment
      variable LANG="it_IT" or LANG="fr_FR" and see the international
      result! (french dictionary is intentionally left "partial", to
      demonstrate the possibility to do also mixed/partial dicts).

  + utils/hbdict/Makefile
  + utils/hbdict/hbdict.prg
  + utils/hbdict/i18n/it_IT.hit
    + Hbdict is a very basic (currently TEST) application to build
      and maintain HIT dictionaries.
      TODO (urgent): merge of HIL duplicated strings (but can be after
      build 81;

2003-06-20 22:55 UTC-0300 Luiz Rafael Culik Guimaraes <culikr@uol.com.br>
  * source/rdd/dbfntx1.c
    ! Fixed uninitialized var on 2458  by moving it initialization prior pArea Variable initialization
  * utils/hbmake/hbmake.prg
    ! Renamed logfile (test.out) to Scriptname.out

2003-06-20 14:28 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/compiler/harbour.slx
    - Removed redundant support for E '...' (as per request by Giancarlo)
    * Minor formatting.

2003-06-20 17:50 UTC-0300 Walter Negro <anegro@overnet.com.ar>
  * source\rtl\tget.prg
    ! Fix initialization of buffer whith BadDate true.
      Reported by Richard Chidiak

2003-06-20 16:00 UTC-0300 Marcelo Lombardo <lombardo@uol.com.br>
  * source/odbc/odbc.c
    ! Fixed: SqlGetData() - completely new and optimized, now you can retrieve any data size
    ! Fixed TYPOs
    + Added New PRG level functions:
        SQLGETINFO()
        SQLSETCONNECTOPTION()
        SQLSETSTMTOPTION()
        SQLGETCONNECTOPTION()
        SQLGETSTMTOPTION()
        SQLCOMMIT()
        SQLROLLBACK()
  * source/odbc/todbc.prg
    ! Minor fixes and reformatting
    + Added New Methods:
        METHOD SetCnnOptions( nType, uBuffer )
        METHOD GetCnnOptions( nType )
        METHOD Commit()
        METHOD RollBack()
        METHOD SetStmtOptions( nType, uBuffer )
        METHOD GetStmtOptions( nType )
        METHOD SetAutocommit( lEnable )
  * source/odbc/sql.ch
    + Added SQLOptions constants

2003-06-20 11:19 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * makefile.bc
    - Removed -DHB_FM_STATISTICS_OFF because standard build by developers should still have memory leak reporting.

  * source/vm/hvm.c
    % Optimized ->procname handling in hb_vmPushBlock() - no longer allocating any memory.

  * source/vm/codebloc.c
    - Removed conditional hb_xfree() of ->procname - no longer needed.
    + Added logic to reset ->pSelfBase->uiHolders in hb_codeblockDelete() and hb_codeblockDeleteGarbag()

  * source/vm/proc.c
    ! Fixed and optimized handling of Blocks and Methods.

  * tests/pp.prg
  * tests/prgscrpt.prg
    * Minor corrections.

2003-06-20 20:15 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * makefile.bc
    + added compilation of hbi18n.c in VM
    (Please, someone do it in makefile.vc)

2003-06-20 19:59 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  + include/hbi18n.h
    + Ops, forgot in last commit ;-)

2003-06-20 19:50 UTC+0200 Giancarlo Niccolai <giancarlo@niccolai.ws>
  * include/hbcomp.h
  * include/hbpp.h
  * source/pp/ppcore.c
  * source/compiler/harbour.slx
    + Added support for c-like escaped string beginning with e"

  * include/hbexprb.c
  * source/compiler/cmdcheck.c
  * source/compiler/harbour.c
  * source/compiler/hbusage.c
    + added option -j to output the HIL file (list of i18n() strings)

  * source/vm/Makefile
  + source/vm/hbi18n.c
    + Support for i18n function and table loading. Partially todo

  * tests/Makefile
    * minor fixes

  + tests/i18ntest.prg
    + Added a test to see how an i18n() enabled program can look like


2003-06-18 14:45 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/codepage/cdpesdos.c
  * xharbour/source/codepage/cdpeswin.c
  * xharbour/source/codepage/cdpgedos.c
  * xharbour/source/codepage/cdpgewin.c
  * xharbour/source/codepage/cdppliso.c
  * xharbour/source/codepage/cdpplmaz.c
  * xharbour/source/codepage/cdpplwin.c
  * xharbour/source/codepage/cdpptiso.c
  * xharbour/source/codepage/cdpslwin.c
    * corrections in code page description.

2003-06-19 02:05 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  - xharbour/source/codepage/cdpla850.c
  + xharbour/source/codepage/cdppt850.c
  + xharbour/source/codepage/cdpptiso.c
  * xharbour/source/codepage/Makefile
  * xharbour/hrbdll.bc
  * xharbour/hrbdll.vc
  * xharbour/makefile.bc
  * xharbour/makefile.nt
  * xharbour/makefile.vc
    - removed cdpla850.c ("PT" codepage)
    + PT850 and PTISO codepages added.
    * makefiles updated - Sorry, I cannot test all of them.

2003-06-19 15:09 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rtl/win32ole.prg
    + Added | DISPATCH_METHOD to DISPATCH_PROPERTYPUT

2003-06-19 10:40 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/include/hbapigt.h
  * xharbour/include/hbextern.ch
  * xharbour/source/rtl/gtcrs/gtcrs.c
  * xharbour/source/rtl/gtnul/gtext.c
  * xharbour/source/rtl/gtnul/gtnul.c
  * xharbour/tests/dspchr.prg
    + Two new functions HB_SETKEYCP( <cTermCP> [,<cHostCP>] ) and
      HB_SETTERMCP(<cTermCP> [,<cHostCP>] [,<lBoxChar>]) added.
      HB_SETKEYCP() if for input key translation, HB_SETTERMCP()
      sets both input (HB_SETKEYCP()) and output (HB_SETDISPCP())
      translation. Now anyone who wants to ports his console apps from
      Windows/DOS with its local code page to *nix with GTCRS and iso
      standards only have to add two functions at the beginning of the
      program: HB_SETCODEPAGE(<cWinCP>); HB_SETTERMCP(<cIsoCP>,.t.)
      All translation should be done automatically.
        eg. for Polish:
	    HB_SETCODEPAGE("PLMAZ")
	    HB_SETTERMCP("PLISO",.t.)
        sets translation between Polish Mazovia code page to ISO-8859-2.
	The programmer don't have to change anything more in his source
	code.

  * xharbour/source/codepage/Makefile
  * xharbour/source/codepage/cdprukoi.c
  + xharbour/source/codepage/cdpsl852.c
  + xharbour/source/codepage/cdpsliso.c
  + xharbour/source/codepage/cdpslwin.c
    + new codepages and fixes borrowd from Harbour.

2003-06-20 03:40 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/vm/hvm.c
  * source/vm/classes.c
    ! Reverse back profiler feature to be enabled by default.

2003-06-19 12:08 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rtl/win32ole.prg
    + Added | DISPATCH_METHOD to DISPATCH_PROPERTYPUTREF

2003-06-19 11:28 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/rtl/win32ole.prg
    ! Fixed a real small typo that caused a HUGE problem.

2003-06-19 10:40 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rtl/strpeek.c
    * Fixed missing type cast

2003-06-18 21:55 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/hvm.c
    + Added missing initialization of Block.item.asBlock.value->uLen in HB_RestoreBlock()

  * source/rtl/traceprg.prg
    * Minor optimization.

  * source/rtl/persist.prg
    + Added generation of a Version Header (2.0).
    + Added logic to be backward compatible with Harbour original persitence files.

2003-06-19 04:16 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/makefile.bc
  * xharbour/makefile.nt
  * xharbour/makefile.vc
    * added strpeek.c

  * xharbour/include/hbextern.ch
    * temporary removed HB_SETDISPCP

  * xharbour/include/hbapicdp.h
  * xharbour/source/rdd/dbcmd.c
  * xharbour/source/rdd/dbf1.c
  * xharbour/source/rdd/dbfntx/dbfntx1.c
    * added checking for HB_CDP_SUPPORT_OFF macro

2003-06-19 01:00 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/source/rtl/Makefile
  * xharbour/include/hbsetup.ch
  + xharbour/source/rtl/strpeek.c
    + FlagShip strpeek/strpoke function added

  * xharbour/source/rtl/gtnul/Makefile
  * xharbour/source/rtl/gtnul/gtnul.c
  + xharbour/source/rtl/gtnul/gtext.c
  * xharbour/include/hbapigt.h
  * xharbour/include/hbextern.h
  * xharbour/source/rtl/gtcrs/gtcrs.c
  * xharbour/source/rtl/gtcrs/gtcrs.h
  + xharbour/tests/dspchr.prg
    + new function:
             HB_SETDISPCP(<cTermCP> [,<cHostCP>] [,<lBoxChar>])
      Works only if compiled with HB_MULTI_GT in GTCRS. Empty
      version for other GTs in GTNUL. Developers of other GT
      should implement it.
      This function informs GT which character are letters
      and optionally sets character translation between <cHostCP>
      and <cTermCP>. If <cHostCP> is omitted then default code page
      set by HB_SETCODEPAGE is taken instead.
      <lBoxChar> switch if set informs GT that it should print letters
      in <cHostCP> instead of semigraphics even if programmer use
      box drawing functions. This switch is necessary because some code
      pages have letters in places where semigraphic chars are stored in
      CP-467 (eg. ISO-8859-x) so the GT have to know which character set
      use to display chars G0 or G1.
      Simple program (dspchr.prg) which demonstrates it added to tests
      directory.

2003-06-18 15:54 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * source/vm/classes.c
    + Added missinig initialization of PCLASS->pModuleSymbols

2003-06-19 04:10 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/compiler/hbgenerr.c
    ! Minor typo correction in "Too many Paramaters ..."
      Paramaters => Parameter

2003-06-18 16:45 UTC-0300 Marcelo Lombardo <lombardo@uol.com.br>
  * source/rdd/dbfntx/dbfntx1.c
    ! Fixed: SET ORDER was always changing the found() status to .F.

2003-06-18 12:28 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/classes.h
    + Added declaration of:
      PCLASS hb_clsClassesArray( void )

  * source/vm/classes.c
    * Minor formating.

  * source/vm/proc.c
    ! Fixed ProcFile() to properly support Methods, and CodeBlocks.

2003-06-18 20:20 UTC+0700 Andi Jahja <andijahja@harbour-id.net>
  * source/vm/hvm.c
  * source/vm/classes.c
    - put all references to profiler under #ifdef __PROFILER__ loop in order
      to be consistent with default compiler flags where __PROFILER__ is not
      defined.

2003-06-18 01:55 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbcomp.h
  * source/compiler/harbour.c
    * Renamed SYMBOLS to COMPSYMBOLS to avoid conflict with R/T SYMBOLS.

  * source/compiler/genc.c
    + Added logic to flag pDynSym member of Symbol Table to signify internal functions.

  * include/hbapi.h
  * source/vm/runner.c
  * source/vm/errorapi.c
  * source/vm/dynsym.c
  * source/vm/hvm.c
  * include/hbvmpub.h
    + Added Member pModueleSymbols to HB_SYMB structure.
    + Added logic to maintain and utilize this new member for every Symbol pushed on the Stack.

  * include/classes.h
  * source/vm/classes.c
    ! Greatly optimized hb_cldValidScope() and fixed few bugs, utilizing new extended Source Module support.

  - include/hbvmprv.h
    - Removed no longer required include file.

  * include/hbstack.h
  * include/thread.h
  * source/vm/estack.c
    - Removed Memebr PHB_SYMB pModuleSymbols from HB_STACK structure

  * source/pp/pptable.c
    - Removed burned-in #translate of ErrorNew() - no longer needed due to new ProcFile() implementation.

  * source/vm/proc.c
    + Implemented disfunctional un-documented ProcFile( <nLevel> )

  * source/rtl/errorsys.prg
  * source/rtl/terror.prg
    + Added usage of new ProcFile()

    /*
       NOTE: Call stack now displays Source Module of ALL Procedures on the Stack.
       Developers of 3rd party Libraries that overrides the default errorsys
       [such as FWH] are encouraged to add utilization of ProcFile( <nLevel> ).
    */


  * tests/tstscope.prg
    * Minor addition.

  /* This optimized implementaion of Source Module support is much faster and more complete than previous implementation. */

2003-06-17 21:45 UTC-0300 Luiz Rafael Culik Guimaraes <culikr@uol.com.br>
  * xharbour/source/lang/msgpt.c
    ! fixed minor error ( Found using langmsg program)

2003-06-18 00:10 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * harbour/include/hbapilng.h
  * harbour/include/hblang.ch
  * harbour/source/lang/Makefile
  * harbour/source/lang/msg_tpl.c
  * xharbour/source/lang/msgca.c
  * xharbour/source/lang/msgcs852.c
  * xharbour/source/lang/msgcsiso.c
  * xharbour/source/lang/msgcskam.c
  * xharbour/source/lang/msgcswin.c
  * xharbour/source/lang/msgde.c
  * xharbour/source/lang/msgen.c
  * xharbour/source/lang/msges.c
  * xharbour/source/lang/msgeu.c
  * xharbour/source/lang/msggl.c
  * xharbour/source/lang/msghe862.c
  * xharbour/source/lang/msghewin.c
  * xharbour/source/lang/msghr852.c
  * xharbour/source/lang/msghriso.c
  * xharbour/source/lang/msghu852.c
  * xharbour/source/lang/msghucwi.c
  * xharbour/source/lang/msghuwin.c
  * xharbour/source/lang/msgid.c
  * xharbour/source/lang/msgis850.c
  * xharbour/source/lang/msgit.c
  * xharbour/source/lang/msgko.c
  * xharbour/source/lang/msgpl852.c
  * xharbour/source/lang/msgpliso.c
  * xharbour/source/lang/msgplmaz.c
  * xharbour/source/lang/msgplwin.c
  * xharbour/source/lang/msgro.c
  * xharbour/source/lang/msgru866.c
  * xharbour/source/lang/msgrukoi.c
  * xharbour/source/lang/msgruwin.c
  * xharbour/source/lang/msgsr852.c
  * xharbour/source/lang/msgsriso.c
  * xharbour/source/lang/msgsrwin.c
  * xharbour/source/lang/msgzhb5.c
  * xharbour/source/lang/msgzhgb.c
  + xharbour/source/lang/msgdewin.c
  + xharbour/source/lang/msgeswin.c
  + xharbour/source/lang/msgsl852.c
  + xharbour/source/lang/msgsliso.c
  + xharbour/source/lang/msgslwin.c
  + xharbour/tests/langmsg.prg
    ! bug fixed in national msg system and new localization added
      (borrowed from Harbour)

  + harbour/tests/langmsg.prg
    * simple test program for national messages
      I have to ask developpers to run it and check their national messages

2003-06-17 16:50 UTC-0300 Luiz Rafael Culik Guimaraes <culikr@uol.com.br>
  * source/rtl/cdpapi.c
    ! Bug fixed in hb_cdpTranslate() and hb_cdpnTranslate() borrow from harbour
  * source/rdd/dbf1.c
    * RDD works Ok now, if field names in dbf are in lower case ( this
      may be if dbf created by other dbms ) (borrow from harbour)

2003-06-17 7:20 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbvm.h
  * include/hbvmprv.h
  * source/vm/hvm.c
     Added optional param to hb_vmGetModuleName( PSYMBOLS pSymbols );

  * source/vm/errorapi.c
     * Added param to hb_vmGetModuleName( PSYMBOLS pSymbols );

  * source/compiler/gencobj.c
  * source/rtl/filesys.c
    * Replaced (non ansi c) unlink() with remove()

  * source/compiler/hbslex.c
  * source/macro/macroslx.c
    * Corrected Dir-Separator based on platform.

  * source/compiler/harbour.slx
    * Corrected inconsistent declaration/definition.

  * source/pp/ppcore.c
    * Replaced deprecated sys_errlist[ errno ] with strerror( errno ).

  * source/vm/classes.c
    * Added TODO item in hb_clsValidScope() regarding Module Scope and __ObjSendMsg().

2003-06-17 12:30 UTC+0100 Ian Anderson <i.anderson@procon-online.de>
  * source/debug/dbgmenu.prg
    + Change menu entries so help is active
  * source/debug/dbgtarr.prg
    * Take fixes from harbour relating to editing array variables
  * source/debug/dbgtmenu.prg
    * sync with harbour
  * source/debug/dbgtwin.prg
    * sync with harbour
  * source/debug/dbgwa.prg
    * correct display of workarea index key and filter
    * sync with harbour
  * source/debug/debugger.prg
    * space now not required after ? or ?? command (Clipper compatibility)
    * removed tracelogs
    * added a couple of safety checks
    * sync with Harbour
  * source/debug/tbrwtext.prg
    * sync with Harbour

2003-06-17 12:11 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/regex.c
    ! Minor fix in error reporting (really minor :-)

  * source/rtl/txml.prg
  * include/hbxml.ch
    + Added FindFirst(), FindFirstRegex() and FindNext() functions
      to TXmlDocument class.
      Find operation are done with an iterator that is programmed
      as a xHarbour class directly in txml.prg
    % An xml file or string can now be passed also in the constructor

  * tests/xmltest.prg
    + Added test for find features

2003-06-17 02:43 UTC+0200 Przemyslaw Czerpak <druzus@polbox.com>
  * xharbour/config/lib.cf
  * xharbour/config/linux/dir.cf
    * minor cleanup to avoid installing lib.a when there is no special MT
      version of library

  * xharbour/contrib/libct/Makefile
    ! minor fix for installing headers and library files on make 'install'
      action, this is still not clean (there is a side effect that libs
      are installed twice and I cannot correct it without major change
      in .cf files) but it works.

2003-06-16 17:10 UTC-0300 Luiz Rafael Culik Guimaraes <culikr@uol.com.br>
  * source/vm/inet.c
    ! minor fix to inetdgrambind()

2003-06-16 22:10 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * source/rtl/Makefile
    + Added linux compilation of txml

  * source/rtl/hbxml.c
  * source/rtl/txml.prg
    ! Now XML integration into xharbour class is working (prototype)

  * tests/xmltest.prg
    % More adaptation to the model and stylistic fixes

2003-06-16 17:10 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  * makefile.bc
  * source/rtl/hbxml.c
  + source/rtl/hbxml.c
    * Changed the XML api to use xharbour object oriented feature.

  * tests/xmltest.prg
    Updated to latest api.

   This is work in progress ( and currently not working), so plz be
   patient.

2003-06-16 02:05 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  + include/hbxml.ch
    + Added xharbour defines for HBXML

  * makefile.bc
    + added compilation of hbmxml

2003-06-15 23:05 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  + doc/hbxml.txt
    + Added minimal api documentation

2003-06-15 22:25 UTC+0200 Giancarlo Niccolai <gian@niccolai.ws>
  + source/rtl/hbxml.c
  + include/hbxml.h
    + Added hbxml system.

  * source/rtl/Makefile
    + support for hbxml system compilation under linux

  + tests/xmltest.prg
  + tests/xmltest.xml
    + added test for hbxml system

2003-06-14 17:10 UTC-0300 Luiz Rafael Culik Guimaraes <culikr@uol.com.br>
  * xharbour/source/lang/msges.c
    xharbour/source/lang/msgeo.c
    xharbour/source/lang/msgpt.c
    xharbour/source/lang/msgfr.c
     ! the bug reported by Alexander in msgru* on harbour-devel fixed.
  * source/rdd/dbfntx/dbfntx1.c
    ! Bug fixed, related to seek with lLast and go bottom with scope set.
    Borrow from harbour

2003-06-14 14:04 UTC-0800 Ron Pinkas <ron@ronpinkas.com>
  * include/hbexprb.c
    + Added LValue support for string instance var as array.

