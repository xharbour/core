/*
 * $Id: dir.txt 9279 2011-02-14 18:06:32Z druzus $
 */

/*
 * The following parts are Copyright of the individual authors.
 * www - http://www.harbour-project.org
 *
 * Copyright 1999 Chen Kedem <niki@actcom.co.il>
 *    Documentation for: __DIR(), DIR, ADIR()
 *
 * See doc/license.txt for licensing terms.
 *
 */

/*  $DOC$
 *  $FUNCNAME$
 *      __Dir()*
 *  $CATEGORY$
 *      File management
 *  $ONELINER$
 *      Display listings of files
 *  $SYNTAX$
 *      __Dir( [<cFileMask>] ) --> NIL
 *  $ARGUMENTS$
 *      <cFileMask> File mask to include in the function return. It could
 *      contain path and standard wildcard characters as supported by your
 *      OS (like * and ?). If <cFileMask> contains no path, then SET DEFAULT
 *      path is used to display files in the mask.
 *  $RETURNS$
 *      __Dir() always returns NIL.
 *  $DESCRIPTION$
 *      If no <cFileMask> is given, __Dir() displays information about all
 *      *.dbf in the SET DEFAULT path. This information contains: file name,
 *      number of records, last update date and the size of each file.
 *
 *      If <cFileMask> is given, __Dir() list all files that match the mask
 *      with the following details: Name, Extension, Size, Date.
 *
 *      DIR command is preprocessed into __Dir() function during compile
 *      time.
 *
 *      __Dir() is a compatibility function, it is superseded by DIRECTORY()
 *      which return all the information in a multidimensional array.
 *  $EXAMPLES$
    <fixed>
 *      __Dir()      // information for all DBF files in current directory
 *
 *      __Dir( "*.dbf" )         // list all DBF file in current directory
 *
 *      // list all PRG files in Harbour Run-Time library
 *      // for DOS compatible operating systems
 *      __Dir( "c:\harbour\source\rtl\*.prg" )
 *
 *      // list all files in the public section on a Unix like machine
 *      __Dir( "/pub" )
    </fixed>
 *  $STATUS$
 *      R
 *  $COMPLIANCE$
 *      DBF information: CA-Clipper displays 8.3 file names, Harbour displays
 *      the first 15 characters of a long file name if available.
 *
 *      File listing: To format file names displayed we use something like:
 *      PadR( Name, 8 ) + " " + PadR( Ext, 3 )
 *      CA-Clipper use 8.3 file name, with Harbour it would probably cut
 *      long file names to feet this template.
 *  $FILES$
 *      Library is rtl
 *  $SEEALSO$
 *      ADIR(),DIRECTORY(),SET DEFAULT,DIR
 *  $END$
 */

/*  $DOC$
 *  $FUNCNAME$
 *      DIR
 *  $CATEGORY$
 *      Command
 *  $ONELINER$
 *      Display listings of files
 *  $SYNTAX$
 *      DIR [<cFileMask>]
 *  $ARGUMENTS$
 *      <cFileMask> File mask to include in the function return. It could
 *      contain path and standard wildcard characters as supported by your
 *      OS (like * and ?). If <cFileMask> contains no path, then SET DEFAULT
 *      path is used to display files in the mask.
 *  $DESCRIPTION$
 *      If no <cFileMask> is given, __Dir() display information about all
 *      *.dbf in the SET DEFAULT path, this information contain: file name,
 *      number of records, last update date and the size of each file.
 *
 *      If <cFileMask> is given, __Dir() list all files that match the mask
 *      with the following details: Name, Extension, Size, Date.
 *
 *      DIR command is preprocessed into __Dir() function during compile
 *      time.
 *
 *      __Dir() is a compatibility function, it is superseded by DIRECTORY()
 *      which returns all the information in a multidimensional array.
 *  $EXAMPLES$
    <fixed>
 *      DIR          // information for all DBF files in current directory
 *
 *      dir   "*.dbf"          // list all DBF file in current directory
 *
 *      // list all PRG files in Harbour Run-Time library
 *      // for DOS compatible operating systems
 *        Dir  "c:\harbour\source\rtl\*.prg"
 *
 *      // list all files in the public section on a Unix like machine
 *        Dir  "/pub"
    </fixed>
 *  $STATUS$
 *      R
 *  $COMPLIANCE$
 *      DBF information: CA-Clipper displays 8.3 file names, Harbour displays
 *      the first 15 characters of a long file name if available.
 *
 *      File listing: To format file names displayed we use something like:
 *      PadR( Name, 8 ) + " " + PadR( Ext, 3 )
 *      CA-Clipper use 8.3 file name, with Harbour it would probably cut
 *      long file names to feet this template.
 *  $SEEALSO$
 *      ADIR(),DIRECTORY(),SET DEFAULT,__DIR()*
 *  $END$
 */

/*  $DOC$
 *  $FUNCNAME$
 *      ADIR()
 *  $CATEGORY$
 *      Array
 *  $ONELINER$
 *      Fill pre-defined arrays with file/directory information
 *  $SYNTAX$
 *      ADIR( [<cFileMask>], [<aName>], [<aSize>], [<aDate>],
 *            [<aTime>], [<aAttr>] ) -> nDirEnries
 *  $ARGUMENTS$
 *      <cFileMask> File mask to include in the function return. It could
 *      contain path and standard wildcard characters as supported by your
 *      OS (like * and ?). If you omit <cFileMask> or if <cFileMask> contains
 *      no path, then the path from SET DEFAULT is used.
 *
 *      <aName> Array to fill with file name of files that meet <cFileMask>.
 *      Each element is a Character string and include the file name and
 *      extension without the path. The name is the long file name as
 *      reported by the OS and not necessarily the 8.3 uppercase name.
 *
 *      <aSize> Array to fill with file size of files that meet <cFileMask>.
 *      Each element is a Numeric integer for the file size in Bytes.
 *      Directories are always zero in size.
 *
 *      <aDate> Array to fill with file last modification date of files that
 *      meet <cFileMask>. Each element is of type Date.
 *
 *      <aTime> Array to fill with file last modification time of files that
 *      meet <cFileMask>. Each element is a Character string in the format
 *      HH:mm:ss.
 *
 *      <aAttr> Array to fill with attribute of files that meet <cFileMask>.
 *      Each element is a Character string, see DIRECTORY() for information
 *      about attribute values. If you pass array to <aAttr>, the function
 *      is going to return files with normal, hidden, system and directory
 *      attributes. If <aAttr> is not specified or with type other than
 *      Array, only files with normal attribute would return.
 *  $RETURNS$
 *      ADIR() return the number of file entries that meet <cFileMask>
 *  $DESCRIPTION$
 *      ADIR() return the number of files and/or directories that match
 *      a specified skeleton, it also fill a series of given arrays with
 *      the name, size, date, time and attribute of those files. The passed
 *      arrays should pre-initialized to the proper size, see example below.
 *      In order to include hidden, system or directories <aAttr> must be
 *      specified.
 *
 *      ADIR() is a compatibility function, it is superseded by DIRECTORY()
 *      which returns all the information in a multidimensional array.
 *  $EXAMPLES$
    <fixed>
 *      LOCAL aName, aSize, aDate, aTime, aAttr, nLen, i
 *      nLen := ADIR( "*.JPG" )     // Number of JPG files in this directory
 *      IF nLen > 0
 *         aName := Array( nLen )   // make room to store the information
 *         aSize := Array( nLen )
 *         aDate := Array( nLen )
 *         aTime := Array( nLen )
 *         aAttr := Array( nLen )
 *         FOR i = 1 TO nLen
 *             ? aName[i], aSize[i], aDate[i], aTime[i], aAttr[i]
 *         NEXT
 *      ELSE
 *         ? "This directory is clean from smut"
 *      ENDIF
    </fixed>
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *      <aName> is going to be fill with long file name and not necessarily
 *      the 8.3 uppercase name.
 *  $FILES$
 *      Library is rtl
 *  $SEEALSO$
 *      ARRAY(),DIRECTORY(),SET DEFAULT
 *  $END$
 */
