/*
 * $Id: tclass.txt 9279 2011-02-14 18:06:32Z druzus $
 */

/*
 * The following parts are Copyright of the individual authors.
 * www - http://www.harbour-project.org
 *
 * Copyright 2000 Brian Hays <bhays@abacuslaw.com>
 *    Documentation
 *
 * See doc/license.txt for licensing terms.
 *
 */

/*  $DOC$
 *  $FUNCNAME$
 *      HBClass()
 *  $CATEGORY$
 *      Classes
 *  $ONELINER$
 *      HBClass() is used in the creation of all classes
 *  $SYNTAX$
 *      oClass := HBClass():New("TMyClass")   
 *        -or-   
 *      HBClass() is usually accessed by defining a class with the commands
 *      defined in hbclass.h:   
 *        CLASS HBGetList    // Calls HBClass() to create the HBGetList class   
 *           ...     
 *        ENDCLASS   
 *  $ARGUMENTS$
 *      
 *  $RETURNS$
 *      An instance of the HBClass Class. This special object's :New()
 *      method can then create the classes you define.   
 *  $DESCRIPTION$
 *      HBClass is a class that ...   
 *      The class methods are as follows:   
 *
 *        New()                 Create a new instance of the class   
 *  $EXAMPLES$
 *      FUNCTION TestObject()
 *      local oObject
 *
 *      oObject := HBClass():New("TMyClass")
 *      oObject:End()
 *
 *     RETURN Nil
 *      </fixed>
 *  $STATUS$
 *      R
 *  $COMPLIANCE$
 *      Object Oriented syntax in Harbour is compatible with CA-CLIPPER.
 *      But Clipper only allowed creation of objects from a few standard
 *      classes, and did not let the programmer create new classes.
 *      In Harbour, you can create your own classes--complete with
 *      Methods, Instance Variables, Class Variables and Inheritance.
 *      Entire applications can be designed and coded in Object Oriented
 *      style.   
 *  $PLATFORMS$
 *      All   
 *  $FILES$
 *      Library is rtl
 *  $SEEALSO$
 *      __objHasData(),Object Oriented Programming,CLASS
 *  $END$
 */
