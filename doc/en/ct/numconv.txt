/*  $DOC$
 *  $FUNCNAME$
 *      NTOC()
 *  $CATEGORY$
 *      HBCT number and bit manipulation functions
 *  $ONELINER$
 *  $SYNTAX$
 *      NTOC (<xNumber>[, <nBase>][,<nLength>][,<cPadChar>]) -> <cNumber>
 *  $ARGUMENTS$
 *  $RETURNS$
 *  $DESCRIPTION$
 *      TODO: add documentation
 *  $EXAMPLES$
 *  $TESTS$
 *  $STATUS$
 *      Started
 *  $COMPLIANCE$
 *  $PLATFORMS$
 *      All
 *  $FILES$
 *      Source is numconv.prg, library is libct.
 *  $SEEALSO$
 *      CTON()
 *  $END$
 */
/*  $DOC$
 *  $FUNCNAME$
 *      CTON()
 *  $CATEGORY$
 *      HBCT number and bit manipulation functions
 *  $ONELINER$
 *  $SYNTAX$
 *      CTON (<xNumber>[, <nBase>][,<lMode>]) -> <nNumber>
 *  $ARGUMENTS$
 *  $RETURNS$
 *  $DESCRIPTION$
 *      TODO: add documentation
 *  $EXAMPLES$
 *  $TESTS$
 *  $STATUS$
 *      Started
 *  $COMPLIANCE$
 *  $PLATFORMS$
 *      All
 *  $FILES$
 *      Source is numconv.prg, library is libct.
 *  $SEEALSO$
 *      NTOC()
 *  $END$
 */
/*  $DOC$
 *  $FUNCNAME$
 *      BITTOC()
 *  $CATEGORY$
 *      HBCT number and bit manipulation functions
 *  $ONELINER$
 *  $SYNTAX$
 *      BITTOC (<nInteger>, <cBitPattern>[,<lMode>]) -> <cBitString>
 *  $ARGUMENTS$
 *  $RETURNS$
 *  $DESCRIPTION$
 *      TODO: add documentation
 *  $EXAMPLES$
 *  $TESTS$
 *  $STATUS$
 *      Started
 *  $COMPLIANCE$
 *  $PLATFORMS$
 *      All
 *  $FILES$
 *      Source is numconv.prg, library is libct.
 *  $SEEALSO$
 *      CTOBIT()
 *  $END$
 */
/*  $DOC$
 *  $FUNCNAME$
 *      CTOBIT()
 *  $CATEGORY$
 *      HBCT number and bit manipulation functions
 *  $ONELINER$
 *  $SYNTAX$
 *      CTOBIT (<cBitString>, <cBitPattern>) -> <nWord>
 *  $ARGUMENTS$
 *  $RETURNS$
 *  $DESCRIPTION$
 *      TODO: add documentation
 *  $EXAMPLES$
 *  $TESTS$
 *  $STATUS$
 *      Started
 *  $COMPLIANCE$
 *  $PLATFORMS$
 *      All
 *  $FILES$
 *      Source is numconv.prg, library is libct.
 *  $SEEALSO$
 *      BITTOC()
 *  $END$
 */
