/*  $DOC$
 *  $FUNCNAME$
 *      ATADJUST()
 *  $CATEGORY$
 *      HBCT string functions
 *  $ONELINER$
 *      Adjusts a sequence within a string to a specified position
 *  $SYNTAX$
 *      ATADJUST (<cStringToMatch>, <cString>, <nAdjustPosition>,
 *                [<nCounter>], [<nIgnore>],
 *                [<nFillChar|cFillChar>]) -> cString
 *  $ARGUMENTS$
 *      <cStringToMatch>        is the sequence to be adjusted within <cString>
 *      <cString>               is the string that contains <cStringToMatch>
 *      <nAdjustPosition>       specifies the position to that <cStringToMatch>
 *                              will be adjusted
 *      [<nCounter>]            specifies which occurence of <cStringToMatch>
 *                              in <cString> is to be adjusted
 *                              Default: last occurence
 *      [<nIgnore>]             specifies how many characters should be omitted
 *                              in the scan
 *      [<nFillChar|cFillChar>] specifies the character that is used for the
 *                              adjustment
 *  $RETURNS$
 *      cString                 the changed string
 *  $DESCRIPTION$
 *      <TODO: add a description, some examples and tests here>
 *  $EXAMPLES$
 *  $TESTS$
 *  $STATUS$
 *      Ready
 *  $COMPLIANCE$
 *      ATADJUST() works like CT3's ATADJUST()
 *  $PLATFORMS$
 *      All
 *  $FILES$
 *      Source is atadjust.c, library is ct3.
 *  $SEEALSO$
 *      SETATLIKE(),CSETATMUPA()
 *  $END$
 */
