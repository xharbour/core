/*  $DOC$
 *  $FUNCNAME$
 *      MANTISSA()
 *  $CATEGORY$
 *      HBCT number and bit manipulation functions
 *  $ONELINER$
 *      Evaluate the mantissa of a floating point number
 *  $SYNTAX$
 *      MANTISSA( <nFloatingPointNumber> ) --> nMantissa
 *  $ARGUMENTS$
 *      <nFloatingPointNumber> Designate any Harbour number.
 *  $RETURNS$
 *      MANTISSA() returns the mantissa of the <nFloatingPointNumber> number.
 *  $DESCRIPTION$
 *      This function supplements EXPONENT() to return the mantissa of the
 *      <nFloatingPointNumber> number.
 *
 *      Note:  The mantissa value can be 0 or in the range of 1 to 2.
 *
 *             The following calculation reproduces the original value:
 *
 *      MANTISSA(<nFloatingPointNumber>)* 2^EXPONENT(<nFloatingPointNumber>) =
 *      <nFloatingPointNumber>
 *      
 *      TODO: add documentation
 *  $EXAMPLES$
 *  $TESTS$
 *  $STATUS$
 *      Started
 *  $COMPLIANCE$
 *      MANTISSA() is compatible with CT3's MANTISSA().
 *  $PLATFORMS$
 *      All
 *  $FILES$
 *      Source is exponent.c, library is libct.
 *  $SEEALSO$
 *      EXPONENT()
 *  $END$
 */
/*  $DOC$
 *  $FUNCNAME$
 *      EXPONENT()
 *  $CATEGORY$
 *      HBCT number and bit manipulation functions
 *  $ONELINER$
 *      Evaluate the exponent of a floating point number
 *  $SYNTAX$
 *      EXPONENT( <nFloatingPointNumber> ) --> nExponent
 *  $ARGUMENTS$
 *      <nFloatingPointNumber> Designate any Harbour number.
 *  $RETURNS$
 *      EXPONENT() returns the exponent of the <nFloatingPointNumber> number
 *      in base 2.
 *  $DESCRIPTION$
 *      This function supplements MANTISSA() to return the exponent of the
 *      <nFloatingPointNumber> number.
 *
 *      Values > 1 or values < -1 return a positive number 0 to 1023.
 *
 *      Values < 1 or values > -1 return a negative number -1 to -1023.
 *
 *      The EXPONENT( 0 ), return 0.
 *
 *      The following calculation reproduces the original value:
 *
 *      2^EXPONENT(<nFloatingPointNumber>) * MANTISSA(<nFloatingPointNumber>) =
 *      <nFloatingPointNumber>
 *      
 *      TODO: add documentation
 *  $EXAMPLES$
 *  $TESTS$
 *  $STATUS$
 *      Started
 *  $COMPLIANCE$
 *      EXPONENT() is compatible with CT3's EXPONENT()
 *  $PLATFORMS$
 *      All
 *  $FILES$
 *      Source is exponent.c, library is libct.
 *  $SEEALSO$
 *      MANTISSA()
 *  $END$
 */
