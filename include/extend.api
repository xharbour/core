/*
 * $Id: extend.api 9483 2012-06-21 13:34:05Z andijahja $
 */

/*
 * Harbour Project source code:
 * Compatibility header file for CA-Clipper Extend API
 *
 * Copyright 1999-2001 Viktor Szakats <viktor.szakats@syenar.hu>
 * www - http://www.harbour-project.org
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2, or (at your option)
 * any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software; see the file COPYING.  If not, write to
 * the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307 USA (or visit the web site http://www.gnu.org/).
 *
 * As a special exception, the Harbour Project gives permission for
 * additional uses of the text contained in its release of Harbour.
 *
 * The exception is that, if you link the Harbour libraries with other
 * files to produce an executable, this does not by itself cause the
 * resulting executable to be covered by the GNU General Public License.
 * Your use of that executable is in no way restricted on account of
 * linking the Harbour library code into it.
 *
 * This exception does not however invalidate any other reasons why
 * the executable file might be covered by the GNU General Public License.
 *
 * This exception applies only to the code released by the Harbour
 * Project under the name Harbour.  If you copy code from other
 * Harbour Project or Free Software Foundation releases into a copy of
 * Harbour, as the General Public License permits, the exception does
 * not apply to the code that you add in this way.  To avoid misleading
 * anyone as to the status of such modified files, you must delete
 * this exception notice from them.
 *
 * If you write modifications of your own for Harbour, it is your choice
 * whether to permit this exception to apply to your modifications.
 * If you do not wish that, delete this exception notice.
 *
 */

/* DON'T USE THIS FILE FOR NEW HARBOUR C CODE */

#ifndef _EXTEND_API
#define _EXTEND_API

#include "clipdefs.h"
#include "hbapi.h"

typedef PHB_ITEM  ITEM;
#ifndef CLIPPERDEFS
   typedef double    XDOUBLE;
#endif

/* Compatible defines */

#define UNDEF           HB_IT_NIL
#define CHARACTER       HB_IT_STRING
#define NUMERIC         HB_IT_NUMERIC
#define LOGICAL         HB_IT_LOGICAL
#if !(defined(HB_OS_WIN_32) && defined(HB_OS_WIN_32_USED))
   #define DATE            HB_IT_DATE
#endif
#define ALIAS           HB_IT_ALIAS
#define MPTR            HB_IT_BYREF        /* or'ed with type when passed by reference */
#define MEMO            HB_IT_MEMO
/* NOTE: CA-Cl*pper bug: WORD will conflict with the typedef with the same
         name in clipdefs.h [vszakats] */
#if !(defined(HB_OS_WIN_32) && defined(HB_OS_WIN_32_USED))
   #define WORD            ( HB_IT_INTEGER | HB_IT_LONG )
#endif
#define ARRAY           HB_IT_ARRAY
#define BLOCK           HB_IT_BLOCK
#if !(defined(HB_OS_WIN_32) && defined(HB_OS_WIN_32_USED))
   #define DOUBLE          HB_IT_DOUBLE
#endif

/* Macros */

#define PCOUNT          hb_pcount()
#define ALENGTH( n )    hb_parinfa( n, 0 )

/* Functions */

#define _parc           hb_parc
#define _parclen        hb_parclen
#define _parcsiz        hb_parcsiz
#define _pards          hb_pards
#define _parinfa        hb_parinfa
#define _parinfo        hb_parinfo
#define _parl           hb_parl
#define _parnd          hb_parnd
#define _parni          hb_parni
#define _parnl          hb_parnl

#define _ret            hb_ret
#define _retc           hb_retc
#define _retclen        hb_retclen
#define _retds          hb_retds
#define _retl           hb_retl
#define _retnd          hb_retnd
#define _retni          hb_retni
#define _retnl          hb_retnl

#define _storc          hb_storc
#define _storclen       hb_storclen
#define _stords         hb_stords
#define _storl          hb_storl
#define _stornd         hb_stornd
#define _storni         hb_storni
#define _stornl         hb_stornl

#endif /* _EXTEND_API */
